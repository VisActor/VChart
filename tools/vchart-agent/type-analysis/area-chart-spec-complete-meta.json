{
  "meta": {
    "typeName": "IAreaChartSpec",
    "description": "面积图图表配置规范的完整实现分析",
    "statistics": {
      "totalInterfaces": 12,
      "totalProperties": 90,
      "simpleProperties": 43,
      "complexProperties": 47,
      "categoryCounts": {
        "基础标识": 1,
        "系列配置": 1,
        "布局方向": 1,
        "坐标系统": 2,
        "辅助元素": 4,
        "数据源": 2,
        "画布尺寸": 3,
        "布局设置": 3,
        "色彩主题": 4,
        "图表组件": 6,
        "交互功能": 1,
        "系列样式": 1,
        "动画控制": 4,
        "数据处理": 9,
        "扩展功能": 2,
        "响应式": 1,
        "系列标识": 4,
        "数据映射": 7,
        "图元样式": 3,
        "标签配置": 2,
        "系列行为": 1,
        "交互增强": 1,
        "数据关联": 3,
        "布局关联": 3,
        "系列分组": 2,
        "3D渲染": 1,
        "交互提示": 1,
        "交互行为": 3,
        "入场动画": 1,
        "数据动画": 3,
        "大数据渲染": 2,
        "渐进渲染": 2,
        "交互优化": 1,
        "数据采样": 2,
        "重叠控制": 3
      },
      "interfaceCounts": {
        "IAreaChartSpec": {
          "total": 2,
          "simple": 1,
          "complex": 1
        },
        "ICartesianChartSpec": {
          "total": 6,
          "simple": 1,
          "complex": 5
        },
        "IChartSpec": {
          "total": 24,
          "simple": 6,
          "complex": 18
        },
        "IChartExtendsSeriesSpec<IAreaSeriesSpec>": {
          "total": 0,
          "simple": 0,
          "complex": 0
        },
        "IAreaSeriesSpec": {
          "total": 10,
          "simple": 3,
          "complex": 7
        },
        "ICartesianSeriesSpec": {
          "total": 7,
          "simple": 4,
          "complex": 3
        },
        "ISeriesSpec": {
          "total": 24,
          "simple": 18,
          "complex": 6
        },
        "IInteractionSpec": {
          "total": 3,
          "simple": 0,
          "complex": 3
        },
        "IAnimationSpec<AreaMarks, AreaAppearPreset>": {
          "total": 4,
          "simple": 0,
          "complex": 4
        },
        "IMarkProgressiveConfig": {
          "total": 4,
          "simple": 4,
          "complex": 0
        },
        "IDataSamping": {
          "total": 3,
          "simple": 3,
          "complex": 0
        },
        "IMarkOverlap": {
          "total": 3,
          "simple": 3,
          "complex": 0
        }
      },
      "versionFeatures": {
        "1.11.6": [
          {
            "interface": "IChartSpec",
            "property": "background",
            "description": "图表背景色配置，优先级高于构造函数中的 background 配置",
            "isSimple": false
          }
        ],
        "1.2.0": [
          {
            "interface": "IChartSpec",
            "property": "animationThreshold",
            "description": "自动关闭动画的阀值，对应的是单系列data的长度",
            "isSimple": true
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "seriesMark",
            "description": "系列主 mark 类型配置，该配置会影响图例的展示",
            "isSimple": true
          },
          {
            "interface": "ISeriesSpec",
            "property": "animationThreshold",
            "description": "自动关闭动画的阀值，对应的是单系列data的长度",
            "isSimple": true
          }
        ],
        "1.4.0": [
          {
            "interface": "IChartSpec",
            "property": "stackInverse",
            "description": "堆积时是否逆序",
            "isSimple": true
          },
          {
            "interface": "ISeriesSpec",
            "property": "stackValue",
            "description": "堆叠时的分组值，stackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
            "isSimple": true
          }
        ],
        "1.10.4": [
          {
            "interface": "IChartSpec",
            "property": "stackSort",
            "description": "堆积时是否排序",
            "isSimple": true
          }
        ],
        "1.8.0": [
          {
            "interface": "IChartSpec",
            "property": "media",
            "description": "媒体查询配置",
            "isSimple": false
          }
        ],
        "1.13.1": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "label",
            "description": "标签配置，支持 inside-middle 标签位置",
            "isSimple": false
          }
        ],
        "1.7.0": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "areaLabel",
            "description": "面积图元标签配置，支持起点和终点位置",
            "isSimple": false
          }
        ],
        "1.3.0": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "activePoint",
            "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
            "isSimple": true
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "sortDataByAxis",
            "description": "是否将数据按照数轴排序",
            "isSimple": true
          },
          {
            "interface": "ISeriesSpec",
            "property": "totalLabel",
            "description": "堆叠汇总标签",
            "isSimple": false
          },
          {
            "interface": "IDataSamping",
            "property": "activePoint",
            "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
            "isSimple": true
          }
        ],
        "1.6.0": [
          {
            "interface": "IDataSamping",
            "property": "sampling",
            "description": "数据采样 - 采样方法",
            "isSimple": true
          },
          {
            "interface": "IDataSamping",
            "property": "samplingFactor",
            "description": "数据采样 - 采样系数",
            "isSimple": true
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointDis",
            "description": "标记点之间的距离，px",
            "isSimple": true
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointDisMul",
            "description": "标记点之间的距离， pointSize 的倍数",
            "isSimple": true
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointOverlapTolerance",
            "description": "是否允许标记图形相互覆盖",
            "isSimple": true
          }
        ]
      },
      "dependencyStats": {
        "IAreaSeriesSpec": [
          {
            "interface": "IAreaChartSpec",
            "property": "series"
          }
        ],
        "ICartesianAxisSpec": [
          {
            "interface": "ICartesianChartSpec",
            "property": "axes"
          }
        ],
        "ICartesianCrosshairSpec": [
          {
            "interface": "ICartesianChartSpec",
            "property": "crosshair"
          }
        ],
        "IMarkLineSpec": [
          {
            "interface": "ICartesianChartSpec",
            "property": "markLine"
          }
        ],
        "IMarkAreaSpec": [
          {
            "interface": "ICartesianChartSpec",
            "property": "markArea"
          }
        ],
        "IMarkPointSpec": [
          {
            "interface": "ICartesianChartSpec",
            "property": "markPoint"
          }
        ],
        "IData": [
          {
            "interface": "IChartSpec",
            "property": "data"
          }
        ],
        "ILayoutPaddingSpec": [
          {
            "interface": "IChartSpec",
            "property": "padding"
          }
        ],
        "RegionSpec": [
          {
            "interface": "IChartSpec",
            "property": "region"
          }
        ],
        "ILayoutSpec": [
          {
            "interface": "IChartSpec",
            "property": "layout"
          }
        ],
        "IVisualSpecScale": [
          {
            "interface": "IChartSpec",
            "property": "color"
          },
          {
            "interface": "IChartSpec",
            "property": "scales"
          }
        ],
        "ITheme": [
          {
            "interface": "IChartSpec",
            "property": "theme"
          }
        ],
        "IBackgroundSpec": [
          {
            "interface": "IChartSpec",
            "property": "background"
          }
        ],
        "ITitleSpec": [
          {
            "interface": "IChartSpec",
            "property": "title"
          }
        ],
        "ILegendSpec": [
          {
            "interface": "IChartSpec",
            "property": "legends"
          }
        ],
        "ITooltipSpec": [
          {
            "interface": "IChartSpec",
            "property": "tooltip"
          }
        ],
        "IDataZoomSpec": [
          {
            "interface": "IChartSpec",
            "property": "dataZoom"
          }
        ],
        "IScrollBarSpec": [
          {
            "interface": "IChartSpec",
            "property": "scrollBar"
          }
        ],
        "IPlayer": [
          {
            "interface": "IChartSpec",
            "property": "player"
          }
        ],
        "IBrushSpec": [
          {
            "interface": "IChartSpec",
            "property": "brush"
          }
        ],
        "ISeriesStyle": [
          {
            "interface": "IChartSpec",
            "property": "seriesStyle"
          },
          {
            "interface": "ISeriesSpec",
            "property": "seriesStyle"
          }
        ],
        "ICustomMarkSpec": [
          {
            "interface": "IChartSpec",
            "property": "customMark"
          }
        ],
        "EnableMarkType": [
          {
            "interface": "IChartSpec",
            "property": "customMark"
          },
          {
            "interface": "ISeriesSpec",
            "property": "extensionMark"
          }
        ],
        "IMediaQuerySpec": [
          {
            "interface": "IChartSpec",
            "property": "media"
          }
        ],
        "IMarkSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "point"
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "line"
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "area"
          }
        ],
        "ISymbolMarkSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "point"
          }
        ],
        "ILineMarkSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "line"
          }
        ],
        "IAreaMarkSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "area"
          }
        ],
        "IMultiLabelSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "label"
          }
        ],
        "ILabelSpec": [
          {
            "interface": "IAreaSeriesSpec",
            "property": "areaLabel"
          }
        ],
        "IDataType": [
          {
            "interface": "ISeriesSpec",
            "property": "data"
          }
        ],
        "ITotalLabelSpec": [
          {
            "interface": "ISeriesSpec",
            "property": "totalLabel"
          }
        ],
        "IMorphSeriesSpec": [
          {
            "interface": "ISeriesSpec",
            "property": "morph"
          }
        ],
        "ISeriesTooltipSpec": [
          {
            "interface": "ISeriesSpec",
            "property": "tooltip"
          }
        ],
        "IHoverSpec": [
          {
            "interface": "IInteractionSpec",
            "property": "hover"
          }
        ],
        "ISelectSpec": [
          {
            "interface": "IInteractionSpec",
            "property": "select"
          }
        ],
        "IInteractionItemSpec": [
          {
            "interface": "IInteractionSpec",
            "property": "interactions"
          }
        ],
        "IStateAnimateSpec": [
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationAppear"
          }
        ],
        "AreaAppearPreset": [
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationAppear"
          }
        ],
        "IMarkAnimateSpec": [
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationAppear"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationEnter"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationUpdate"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationExit"
          }
        ],
        "AreaMarks": [
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationAppear"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationEnter"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationUpdate"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationExit"
          }
        ],
        "ICommonStateAnimateSpec": [
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationEnter"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationUpdate"
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationExit"
          }
        ]
      },
      "typeComplexity": {
        "simple": [
          {
            "interface": "IAreaChartSpec",
            "property": "type",
            "type": "\"area\""
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "direction",
            "type": "\"vertical\" | \"horizontal\""
          },
          {
            "interface": "IChartSpec",
            "property": "width",
            "type": "number"
          },
          {
            "interface": "IChartSpec",
            "property": "height",
            "type": "number"
          },
          {
            "interface": "IChartSpec",
            "property": "autoFit",
            "type": "boolean"
          },
          {
            "interface": "IChartSpec",
            "property": "animationThreshold",
            "type": "number"
          },
          {
            "interface": "IChartSpec",
            "property": "stackInverse",
            "type": "boolean"
          },
          {
            "interface": "IChartSpec",
            "property": "stackSort",
            "type": "boolean"
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "type",
            "type": "\"area\""
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "seriesMark",
            "type": "\"point\" | \"line\" | \"area\""
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "activePoint",
            "type": "boolean"
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "direction",
            "type": "\"vertical\" | \"horizontal\""
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "x2Field",
            "type": "string"
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "y2Field",
            "type": "string"
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "sortDataByAxis",
            "type": "boolean"
          },
          {
            "interface": "ISeriesSpec",
            "property": "type",
            "type": "\"line\" | \"area\" | \"bar\" | \"scatter\" | \"pie\" | \"radar\" | \"sankey\" | \"treemap\" | \"sunburst\" | \"gauge\" | \"waterfall\" | \"box\" | \"histogram\" | \"rose\" | \"circularProgress\" | \"linearProgress\" | \"funnel\" | \"map\" | \"wordCloud\" | \"correlation\" | \"heatmap\" | \"liquidFill\" | \"mosaic\" | \"dot\" | \"range-column\""
          },
          {
            "interface": "ISeriesSpec",
            "property": "name",
            "type": "string"
          },
          {
            "interface": "ISeriesSpec",
            "property": "id",
            "type": "string | number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "dataIndex",
            "type": "number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "dataId",
            "type": "string | number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "dataKey",
            "type": "string | string[] | ((data: any) => string)"
          },
          {
            "interface": "ISeriesSpec",
            "property": "regionIndex",
            "type": "number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "regionId",
            "type": "string | number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "zIndex",
            "type": "number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "seriesField",
            "type": "string"
          },
          {
            "interface": "ISeriesSpec",
            "property": "stack",
            "type": "boolean"
          },
          {
            "interface": "ISeriesSpec",
            "property": "stackValue",
            "type": "string | number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "percent",
            "type": "boolean"
          },
          {
            "interface": "ISeriesSpec",
            "property": "stackOffsetSilhouette",
            "type": "boolean"
          },
          {
            "interface": "ISeriesSpec",
            "property": "invalidType",
            "type": "\"break\" | \"link\" | \"zero\" | \"ignore\""
          },
          {
            "interface": "ISeriesSpec",
            "property": "animation",
            "type": "boolean"
          },
          {
            "interface": "ISeriesSpec",
            "property": "animationThreshold",
            "type": "number"
          },
          {
            "interface": "ISeriesSpec",
            "property": "support3d",
            "type": "boolean"
          },
          {
            "interface": "IMarkProgressiveConfig",
            "property": "large",
            "type": "boolean"
          },
          {
            "interface": "IMarkProgressiveConfig",
            "property": "largeThreshold",
            "type": "number"
          },
          {
            "interface": "IMarkProgressiveConfig",
            "property": "progressiveStep",
            "type": "number"
          },
          {
            "interface": "IMarkProgressiveConfig",
            "property": "progressiveThreshold",
            "type": "number"
          },
          {
            "interface": "IDataSamping",
            "property": "activePoint",
            "type": "boolean"
          },
          {
            "interface": "IDataSamping",
            "property": "sampling",
            "type": "\"lttb\" | \"max\" | \"min\" | \"average\" | \"sum\""
          },
          {
            "interface": "IDataSamping",
            "property": "samplingFactor",
            "type": "number"
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointDis",
            "type": "number"
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointDisMul",
            "type": "number"
          },
          {
            "interface": "IMarkOverlap",
            "property": "pointOverlapTolerance",
            "type": "boolean"
          }
        ],
        "complex": [
          {
            "interface": "IAreaChartSpec",
            "property": "series",
            "type": "IAreaSeriesSpec[]",
            "dependencies": [
              "IAreaSeriesSpec"
            ]
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "axes",
            "type": "ICartesianAxisSpec[]",
            "dependencies": [
              "ICartesianAxisSpec"
            ]
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "crosshair",
            "type": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
            "dependencies": [
              "ICartesianCrosshairSpec"
            ]
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "markLine",
            "type": "IMarkLineSpec | IMarkLineSpec[]",
            "dependencies": [
              "IMarkLineSpec"
            ]
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "markArea",
            "type": "IMarkAreaSpec | IMarkAreaSpec[]",
            "dependencies": [
              "IMarkAreaSpec"
            ]
          },
          {
            "interface": "ICartesianChartSpec",
            "property": "markPoint",
            "type": "IMarkPointSpec | IMarkPointSpec[]",
            "dependencies": [
              "IMarkPointSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "data",
            "type": "IData",
            "dependencies": [
              "IData"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "padding",
            "type": "ILayoutPaddingSpec",
            "dependencies": [
              "ILayoutPaddingSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "region",
            "type": "RegionSpec[]",
            "dependencies": [
              "RegionSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "layout",
            "type": "ILayoutSpec",
            "dependencies": [
              "ILayoutSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "color",
            "type": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">",
            "dependencies": [
              "IVisualSpecScale"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "theme",
            "type": "Omit<ITheme, \"name\"> | string",
            "dependencies": [
              "ITheme"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "background",
            "type": "IBackgroundSpec",
            "dependencies": [
              "IBackgroundSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "scales",
            "type": "IVisualSpecScale<unknown, unknown>[]",
            "dependencies": [
              "IVisualSpecScale"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "title",
            "type": "ITitleSpec",
            "dependencies": [
              "ITitleSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "legends",
            "type": "ILegendSpec | ILegendSpec[]",
            "dependencies": [
              "ILegendSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "tooltip",
            "type": "ITooltipSpec",
            "dependencies": [
              "ITooltipSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "dataZoom",
            "type": "IDataZoomSpec | IDataZoomSpec[]",
            "dependencies": [
              "IDataZoomSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "scrollBar",
            "type": "IScrollBarSpec | IScrollBarSpec[]",
            "dependencies": [
              "IScrollBarSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "player",
            "type": "IPlayer",
            "dependencies": [
              "IPlayer"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "brush",
            "type": "IBrushSpec",
            "dependencies": [
              "IBrushSpec"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "seriesStyle",
            "type": "ISeriesStyle",
            "dependencies": [
              "ISeriesStyle"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "customMark",
            "type": "ICustomMarkSpec<EnableMarkType>[]",
            "dependencies": [
              "ICustomMarkSpec",
              "EnableMarkType"
            ]
          },
          {
            "interface": "IChartSpec",
            "property": "media",
            "type": "IMediaQuerySpec",
            "dependencies": [
              "IMediaQuerySpec"
            ]
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "xField",
            "type": "string | string[]",
            "dependencies": []
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "yField",
            "type": "string | string[]",
            "dependencies": []
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "point",
            "type": "IMarkSpec<ISymbolMarkSpec>",
            "dependencies": [
              "IMarkSpec",
              "ISymbolMarkSpec"
            ]
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "line",
            "type": "IMarkSpec<ILineMarkSpec>",
            "dependencies": [
              "IMarkSpec",
              "ILineMarkSpec"
            ]
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "area",
            "type": "IMarkSpec<IAreaMarkSpec>",
            "dependencies": [
              "IMarkSpec",
              "IAreaMarkSpec"
            ]
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "label",
            "type": "IMultiLabelSpec<...>",
            "dependencies": [
              "IMultiLabelSpec"
            ]
          },
          {
            "interface": "IAreaSeriesSpec",
            "property": "areaLabel",
            "type": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }",
            "dependencies": [
              "ILabelSpec"
            ]
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "xField",
            "type": "string | string[]",
            "dependencies": []
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "yField",
            "type": "string | string[]",
            "dependencies": []
          },
          {
            "interface": "ICartesianSeriesSpec",
            "property": "zField",
            "type": "string | string[]",
            "dependencies": []
          },
          {
            "interface": "ISeriesSpec",
            "property": "data",
            "type": "IDataType",
            "dependencies": [
              "IDataType"
            ]
          },
          {
            "interface": "ISeriesSpec",
            "property": "seriesStyle",
            "type": "ISeriesStyle",
            "dependencies": [
              "ISeriesStyle"
            ]
          },
          {
            "interface": "ISeriesSpec",
            "property": "totalLabel",
            "type": "ITotalLabelSpec",
            "dependencies": [
              "ITotalLabelSpec"
            ]
          },
          {
            "interface": "ISeriesSpec",
            "property": "morph",
            "type": "IMorphSeriesSpec",
            "dependencies": [
              "IMorphSeriesSpec"
            ]
          },
          {
            "interface": "ISeriesSpec",
            "property": "extensionMark",
            "type": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]",
            "dependencies": [
              "EnableMarkType"
            ]
          },
          {
            "interface": "ISeriesSpec",
            "property": "tooltip",
            "type": "ISeriesTooltipSpec",
            "dependencies": [
              "ISeriesTooltipSpec"
            ]
          },
          {
            "interface": "IInteractionSpec",
            "property": "hover",
            "type": "IHoverSpec | boolean",
            "dependencies": [
              "IHoverSpec"
            ]
          },
          {
            "interface": "IInteractionSpec",
            "property": "select",
            "type": "ISelectSpec | boolean",
            "dependencies": [
              "ISelectSpec"
            ]
          },
          {
            "interface": "IInteractionSpec",
            "property": "interactions",
            "type": "IInteractionItemSpec[]",
            "dependencies": [
              "IInteractionItemSpec"
            ]
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationAppear",
            "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>",
            "dependencies": [
              "IStateAnimateSpec",
              "AreaAppearPreset",
              "IMarkAnimateSpec",
              "AreaMarks"
            ]
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationEnter",
            "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
            "dependencies": [
              "ICommonStateAnimateSpec",
              "IMarkAnimateSpec",
              "AreaMarks"
            ]
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationUpdate",
            "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
            "dependencies": [
              "ICommonStateAnimateSpec",
              "IMarkAnimateSpec",
              "AreaMarks"
            ]
          },
          {
            "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
            "property": "animationExit",
            "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
            "dependencies": [
              "ICommonStateAnimateSpec",
              "IMarkAnimateSpec",
              "AreaMarks"
            ]
          }
        ]
      }
    },
    "enhancements": [
      "🔍 解析枚举类型为具体字符串值",
      "📊 区分简单类型和复杂类型",
      "🔗 添加 dependencies 字段记录复杂类型依赖",
      "📈 提供详细的类型复杂度统计",
      "🌐 生成完整的依赖关系图谱",
      "🚀 提供复杂类型的完整打平定义，专为大模型代码生成优化"
    ],
    "generated": "2025-07-31T07:25:19.384Z",
    "aiOptimized": true,
    "purpose": "专为大模型代码生成提供完整的类型定义和结构化信息"
  },
  "inheritanceTree": {
    "IAreaChartSpec": {
      "description": "面积图图表规范，扩展了笛卡尔坐标系图表和面积系列配置",
      "directExtends": [
        "ICartesianChartSpec",
        "IChartExtendsSeriesSpec<IAreaSeriesSpec>"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "图表类型，面积图固定为 \"area\"",
          "type": "\"area\"",
          "originalType": "\"area\"",
          "required": true,
          "category": "基础标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "series",
          "description": "系列配置数组，定义面积图的系列",
          "type": "IAreaSeriesSpec[]",
          "originalType": "IAreaSeriesSpec[]",
          "required": false,
          "category": "系列配置",
          "isSimple": false,
          "dependencies": [
            "IAreaSeriesSpec"
          ]
        }
      ]
    },
    "ICartesianChartSpec": {
      "description": "笛卡尔坐标系图表配置规范，扩展了基础图表配置",
      "directExtends": [
        "IChartSpec"
      ],
      "ownProperties": [
        {
          "name": "direction",
          "description": "图表的方向配置。vertical: 垂直布局，horizontal: 水平布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "布局方向",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "axes",
          "description": "笛卡尔坐标系的坐标轴配置",
          "type": "ICartesianAxisSpec[]",
          "originalType": "ICartesianAxisSpec[]",
          "required": false,
          "category": "坐标系统",
          "isSimple": false,
          "dependencies": [
            "ICartesianAxisSpec"
          ]
        },
        {
          "name": "crosshair",
          "description": "十字辅助线配置",
          "type": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "originalType": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "ICartesianCrosshairSpec"
          ]
        },
        {
          "name": "markLine",
          "description": "参考线配置",
          "type": "IMarkLineSpec | IMarkLineSpec[]",
          "originalType": "IMarkLineSpec | IMarkLineSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkLineSpec"
          ]
        },
        {
          "name": "markArea",
          "description": "参考区域配置",
          "type": "IMarkAreaSpec | IMarkAreaSpec[]",
          "originalType": "IMarkAreaSpec | IMarkAreaSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkAreaSpec"
          ]
        },
        {
          "name": "markPoint",
          "description": "参考点配置",
          "type": "IMarkPointSpec | IMarkPointSpec[]",
          "originalType": "IMarkPointSpec | IMarkPointSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkPointSpec"
          ]
        }
      ]
    },
    "IChartSpec": {
      "description": "图表基础配置规范，包含图表的核心功能配置",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "data",
          "description": "图表数据配置",
          "type": "IData",
          "originalType": "IData",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IData"
          ]
        },
        {
          "name": "width",
          "description": "画布宽度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "height",
          "description": "画布高度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "autoFit",
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "padding",
          "description": "图表整体 padding 设置",
          "type": "ILayoutPaddingSpec",
          "originalType": "ILayoutPaddingSpec",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "ILayoutPaddingSpec"
          ]
        },
        {
          "name": "region",
          "description": "region配置",
          "type": "RegionSpec[]",
          "originalType": "RegionSpec[]",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "RegionSpec"
          ]
        },
        {
          "name": "layout",
          "description": "布局配置",
          "type": "ILayoutSpec",
          "originalType": "ILayoutSpec",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "ILayoutSpec"
          ]
        },
        {
          "name": "color",
          "description": "图表色系配置",
          "type": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">",
          "originalType": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IVisualSpecScale"
          ]
        },
        {
          "name": "theme",
          "description": "图表上的主题定义。可以直接配置主题名，前提是该主题名已经注册",
          "type": "Omit<ITheme, \"name\"> | string",
          "originalType": "Omit<ITheme, \"name\"> | string",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "ITheme"
          ]
        },
        {
          "name": "background",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置",
          "type": "IBackgroundSpec",
          "originalType": "IBackgroundSpec",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IBackgroundSpec"
          ],
          "since": "1.11.6"
        },
        {
          "name": "scales",
          "description": "全局 scale 配置",
          "type": "IVisualSpecScale<unknown, unknown>[]",
          "originalType": "IVisualSpecScale<unknown, unknown>[]",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IVisualSpecScale"
          ]
        },
        {
          "name": "title",
          "description": "图表标题配置",
          "type": "ITitleSpec",
          "originalType": "ITitleSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITitleSpec"
          ]
        },
        {
          "name": "legends",
          "description": "图例配置",
          "type": "ILegendSpec | ILegendSpec[]",
          "originalType": "ILegendSpec | ILegendSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ILegendSpec"
          ]
        },
        {
          "name": "tooltip",
          "description": "tooltip配置",
          "type": "ITooltipSpec",
          "originalType": "ITooltipSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITooltipSpec"
          ]
        },
        {
          "name": "dataZoom",
          "description": "缩略轴配置",
          "type": "IDataZoomSpec | IDataZoomSpec[]",
          "originalType": "IDataZoomSpec | IDataZoomSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IDataZoomSpec"
          ]
        },
        {
          "name": "scrollBar",
          "description": "滚动条配置",
          "type": "IScrollBarSpec | IScrollBarSpec[]",
          "originalType": "IScrollBarSpec | IScrollBarSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IScrollBarSpec"
          ]
        },
        {
          "name": "player",
          "description": "播放器配置",
          "type": "IPlayer",
          "originalType": "IPlayer",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IPlayer"
          ]
        },
        {
          "name": "brush",
          "description": "框选配置",
          "type": "IBrushSpec",
          "originalType": "IBrushSpec",
          "required": false,
          "category": "交互功能",
          "isSimple": false,
          "dependencies": [
            "IBrushSpec"
          ]
        },
        {
          "name": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle",
          "originalType": "ISeriesStyle",
          "required": false,
          "category": "系列样式",
          "isSimple": false,
          "dependencies": [
            "ISeriesStyle"
          ]
        },
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0"
        },
        {
          "name": "stackInverse",
          "description": "堆积时是否逆序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.4.0"
        },
        {
          "name": "stackSort",
          "description": "堆积时是否排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.10.4"
        },
        {
          "name": "customMark",
          "description": "自定义mark",
          "type": "ICustomMarkSpec<EnableMarkType>[]",
          "originalType": "ICustomMarkSpec<EnableMarkType>[]",
          "required": false,
          "category": "扩展功能",
          "isSimple": false,
          "dependencies": [
            "ICustomMarkSpec",
            "EnableMarkType"
          ]
        },
        {
          "name": "media",
          "description": "媒体查询配置",
          "type": "IMediaQuerySpec",
          "originalType": "IMediaQuerySpec",
          "required": false,
          "category": "响应式",
          "isSimple": false,
          "dependencies": [
            "IMediaQuerySpec"
          ],
          "since": "1.8.0"
        }
      ]
    },
    "IChartExtendsSeriesSpec<IAreaSeriesSpec>": {
      "description": "IAreaSeriesSpec 的扩展配置，排除了 data, morph, stackValue, tooltip 字段",
      "note": "type IChartExtendsSeriesSpec<T extends ISeriesSpec> = Omit<T, \"data\" | \"morph\" | \"stackValue\" | \"tooltip\">",
      "directExtends": [
        "IAreaSeriesSpec (Omit data, morph, stackValue, tooltip)"
      ],
      "ownProperties": []
    },
    "IAreaSeriesSpec": {
      "description": "面积系列配置规范，定义面积图系列的所有特性",
      "directExtends": [
        "ICartesianSeriesSpec",
        "IAnimationSpec<AreaMarks, AreaAppearPreset>",
        "IMarkProgressiveConfig",
        "IDataSamping",
        "IMarkOverlap"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "系列类型，面积系列固定为 \"area\"",
          "type": "\"area\"",
          "originalType": "\"area\"",
          "required": true,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "yField",
          "description": "y轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "point",
          "description": "点图元配置",
          "type": "IMarkSpec<ISymbolMarkSpec>",
          "originalType": "IMarkSpec<ISymbolMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "ISymbolMarkSpec"
          ]
        },
        {
          "name": "line",
          "description": "线图元配置",
          "type": "IMarkSpec<ILineMarkSpec>",
          "originalType": "IMarkSpec<ILineMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "ILineMarkSpec"
          ]
        },
        {
          "name": "area",
          "description": "面积图元配置",
          "type": "IMarkSpec<IAreaMarkSpec>",
          "originalType": "IMarkSpec<IAreaMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "IAreaMarkSpec"
          ]
        },
        {
          "name": "label",
          "description": "标签配置，支持 inside-middle 标签位置",
          "type": "IMultiLabelSpec<...>",
          "originalType": "IMultiLabelSpec<...>",
          "required": false,
          "category": "标签配置",
          "isSimple": false,
          "dependencies": [
            "IMultiLabelSpec"
          ],
          "since": "1.13.1"
        },
        {
          "name": "areaLabel",
          "description": "面积图元标签配置，支持起点和终点位置",
          "type": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }",
          "originalType": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }",
          "required": false,
          "category": "标签配置",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ],
          "since": "1.7.0"
        },
        {
          "name": "seriesMark",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "type": "\"point\" | \"line\" | \"area\"",
          "originalType": "\"point\" | \"line\" | \"area\"",
          "required": false,
          "category": "系列行为",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "\"area\"",
          "since": "1.2.0"
        },
        {
          "name": "activePoint",
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "交互增强",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0"
        }
      ]
    },
    "ICartesianSeriesSpec": {
      "description": "笛卡尔坐标系系列配置规范",
      "directExtends": [
        "ISeriesSpec"
      ],
      "ownProperties": [
        {
          "name": "direction",
          "description": "布局方向，row表示按行布局，col表示按列布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "坐标系统",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "x2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "yField",
          "description": "y轴字段，运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "y2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "zField",
          "description": "z轴字段，用于3d散点图等",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "sortDataByAxis",
          "description": "是否将数据按照数轴排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0"
        }
      ]
    },
    "ISeriesSpec": {
      "description": "系列基础配置规范，定义所有系列通用的配置",
      "directExtends": [
        "IInteractionSpec"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "系列类型",
          "type": "\"line\" | \"area\" | \"bar\" | \"scatter\" | \"pie\" | \"radar\" | \"sankey\" | \"treemap\" | \"sunburst\" | \"gauge\" | \"waterfall\" | \"box\" | \"histogram\" | \"rose\" | \"circularProgress\" | \"linearProgress\" | \"funnel\" | \"map\" | \"wordCloud\" | \"correlation\" | \"heatmap\" | \"liquidFill\" | \"mosaic\" | \"dot\" | \"range-column\"",
          "originalType": "SeriesType",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "name",
          "description": "系列名称",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "id",
          "description": "用户自定义的 series id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "data",
          "description": "系列数据，系列可以配置自身的数据，也可以从chart.data中获取数据",
          "type": "IDataType",
          "originalType": "IDataType",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IDataType"
          ]
        },
        {
          "name": "dataIndex",
          "description": "系列关联的数据索引",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "0"
        },
        {
          "name": "dataId",
          "description": "系列关联的数据id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "dataKey",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要",
          "type": "string | string[] | ((data: any) => string)",
          "originalType": "DataKeyType",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "regionIndex",
          "description": "系列关联的region索引",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "0"
        },
        {
          "name": "regionId",
          "description": "系列关联的region id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "zIndex",
          "description": "z轴层级，只在通过series配置时生效",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "seriesField",
          "description": "分组字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "系列分组",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle",
          "originalType": "ISeriesStyle",
          "required": false,
          "category": "系列分组",
          "isSimple": false,
          "dependencies": [
            "ISeriesStyle"
          ]
        },
        {
          "name": "stack",
          "description": "是否对数据进行堆叠处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stackValue",
          "description": "堆叠时的分组值，stackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "since": "1.4.0"
        },
        {
          "name": "totalLabel",
          "description": "堆叠汇总标签",
          "type": "ITotalLabelSpec",
          "originalType": "ITotalLabelSpec",
          "required": false,
          "category": "数据处理",
          "isSimple": false,
          "dependencies": [
            "ITotalLabelSpec"
          ],
          "since": "1.3.0"
        },
        {
          "name": "percent",
          "description": "是否对数据进行百分比处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stackOffsetSilhouette",
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "invalidType",
          "description": "非合规数据点连接方式。null，undefined等非法数据点连接方式",
          "type": "\"break\" | \"link\" | \"zero\" | \"ignore\"",
          "originalType": "IInvalidType",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "\"break\""
        },
        {
          "name": "animation",
          "description": "是否开启系列动画",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0"
        },
        {
          "name": "morph",
          "description": "morph 动画配置",
          "type": "IMorphSeriesSpec",
          "originalType": "IMorphSeriesSpec",
          "required": false,
          "category": "动画控制",
          "isSimple": false,
          "dependencies": [
            "IMorphSeriesSpec"
          ]
        },
        {
          "name": "support3d",
          "description": "是否支持3d视角",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "3D渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "extensionMark",
          "description": "系列的扩展mark，能够获取系列上的数据",
          "type": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]",
          "originalType": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]",
          "required": false,
          "category": "扩展功能",
          "isSimple": false,
          "dependencies": [
            "EnableMarkType"
          ]
        },
        {
          "name": "tooltip",
          "description": "系列对应的提示信息设置，优先级高于图表的tooltip配置",
          "type": "ISeriesTooltipSpec",
          "originalType": "ISeriesTooltipSpec",
          "required": false,
          "category": "交互提示",
          "isSimple": false,
          "dependencies": [
            "ISeriesTooltipSpec"
          ]
        }
      ]
    },
    "IInteractionSpec": {
      "description": "交互配置规范，定义系列的交互行为",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "hover",
          "description": "hover交互配置",
          "type": "IHoverSpec | boolean",
          "originalType": "IHoverSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "IHoverSpec"
          ]
        },
        {
          "name": "select",
          "description": "选中交互配置",
          "type": "ISelectSpec | boolean",
          "originalType": "ISelectSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "ISelectSpec"
          ]
        },
        {
          "name": "interactions",
          "description": "其他需要按需注册的类型交互",
          "type": "IInteractionItemSpec[]",
          "originalType": "IInteractionItemSpec[]",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "IInteractionItemSpec"
          ]
        }
      ]
    },
    "IAnimationSpec<AreaMarks, AreaAppearPreset>": {
      "description": "面积图动画配置规范，支持 point、line、area 图元的动画",
      "note": "AreaMarks = \"point\" | \"line\" | \"area\", AreaAppearPreset = \"clipIn\" | \"fadeIn\" | \"grow\"",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "入场动画",
          "isSimple": false,
          "dependencies": [
            "IStateAnimateSpec",
            "AreaAppearPreset",
            "IMarkAnimateSpec",
            "AreaMarks"
          ]
        },
        {
          "name": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ]
        },
        {
          "name": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ]
        },
        {
          "name": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ]
        }
      ]
    },
    "IMarkProgressiveConfig": {
      "description": "图元渐进式渲染配置，用于大数据场景的渲染优化",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "large",
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "largeThreshold",
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "progressiveStep",
          "description": "分片长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "progressiveThreshold",
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": []
        }
      ]
    },
    "IDataSamping": {
      "description": "数据采样配置，用于大数据场景的数据优化",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "activePoint",
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "交互优化",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0"
        },
        {
          "name": "sampling",
          "description": "数据采样 - 采样方法",
          "type": "\"lttb\" | \"max\" | \"min\" | \"average\" | \"sum\"",
          "originalType": "ISamplingMethod",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "since": "1.6.0"
        },
        {
          "name": "samplingFactor",
          "description": "数据采样 - 采样系数",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "1",
          "since": "1.6.0"
        }
      ]
    },
    "IMarkOverlap": {
      "description": "图元重叠处理配置，用于优化密集数据的显示效果",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "pointDis",
          "description": "标记点之间的距离，px",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.6.0"
        },
        {
          "name": "pointDisMul",
          "description": "标记点之间的距离， pointSize 的倍数",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "1",
          "since": "1.6.0"
        },
        {
          "name": "pointOverlapTolerance",
          "description": "是否允许标记图形相互覆盖",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.6.0"
        }
      ]
    }
  },
  "inheritanceGraph": {
    "root": "IAreaChartSpec",
    "relationships": [
      {
        "child": "IAreaChartSpec",
        "parent": "ICartesianChartSpec",
        "description": "面积图图表规范，扩展了笛卡尔坐标系图表和面积系列配置"
      },
      {
        "child": "IAreaChartSpec",
        "parent": "IChartExtendsSeriesSpec<IAreaSeriesSpec>",
        "description": "面积图图表规范，扩展了笛卡尔坐标系图表和面积系列配置"
      },
      {
        "child": "ICartesianChartSpec",
        "parent": "IChartSpec",
        "description": "笛卡尔坐标系图表配置规范，扩展了基础图表配置"
      },
      {
        "child": "IChartExtendsSeriesSpec<IAreaSeriesSpec>",
        "parent": "IAreaSeriesSpec (Omit data, morph, stackValue, tooltip)",
        "description": "IAreaSeriesSpec 的扩展配置，排除了 data, morph, stackValue, tooltip 字段"
      },
      {
        "child": "IAreaSeriesSpec",
        "parent": "ICartesianSeriesSpec",
        "description": "面积系列配置规范，定义面积图系列的所有特性"
      },
      {
        "child": "IAreaSeriesSpec",
        "parent": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
        "description": "面积系列配置规范，定义面积图系列的所有特性"
      },
      {
        "child": "IAreaSeriesSpec",
        "parent": "IMarkProgressiveConfig",
        "description": "面积系列配置规范，定义面积图系列的所有特性"
      },
      {
        "child": "IAreaSeriesSpec",
        "parent": "IDataSamping",
        "description": "面积系列配置规范，定义面积图系列的所有特性"
      },
      {
        "child": "IAreaSeriesSpec",
        "parent": "IMarkOverlap",
        "description": "面积系列配置规范，定义面积图系列的所有特性"
      },
      {
        "child": "ICartesianSeriesSpec",
        "parent": "ISeriesSpec",
        "description": "笛卡尔坐标系系列配置规范"
      },
      {
        "child": "ISeriesSpec",
        "parent": "IInteractionSpec",
        "description": "系列基础配置规范，定义所有系列通用的配置"
      }
    ]
  },
  "categoryView": {
    "基础标识": {
      "description": "基础标识相关的配置项",
      "properties": [
        {
          "name": "type",
          "description": "图表类型，面积图固定为 \"area\"",
          "type": "\"area\"",
          "originalType": "\"area\"",
          "required": true,
          "category": "基础标识",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IAreaChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "系列配置": {
      "description": "系列配置相关的配置项",
      "properties": [
        {
          "name": "series",
          "description": "系列配置数组，定义面积图的系列",
          "type": "IAreaSeriesSpec[]",
          "originalType": "IAreaSeriesSpec[]",
          "required": false,
          "category": "系列配置",
          "isSimple": false,
          "dependencies": [
            "IAreaSeriesSpec"
          ],
          "fromInterface": "IAreaChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "布局方向": {
      "description": "布局方向相关的配置项",
      "properties": [
        {
          "name": "direction",
          "description": "图表的方向配置。vertical: 垂直布局，horizontal: 水平布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "布局方向",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ICartesianChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "坐标系统": {
      "description": "坐标系统相关的配置项",
      "properties": [
        {
          "name": "axes",
          "description": "笛卡尔坐标系的坐标轴配置",
          "type": "ICartesianAxisSpec[]",
          "originalType": "ICartesianAxisSpec[]",
          "required": false,
          "category": "坐标系统",
          "isSimple": false,
          "dependencies": [
            "ICartesianAxisSpec"
          ],
          "fromInterface": "ICartesianChartSpec"
        },
        {
          "name": "direction",
          "description": "布局方向，row表示按行布局，col表示按列布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "坐标系统",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 1,
        "complex": 1
      }
    },
    "辅助元素": {
      "description": "辅助元素相关的配置项",
      "properties": [
        {
          "name": "crosshair",
          "description": "十字辅助线配置",
          "type": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "originalType": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "ICartesianCrosshairSpec"
          ],
          "fromInterface": "ICartesianChartSpec"
        },
        {
          "name": "markLine",
          "description": "参考线配置",
          "type": "IMarkLineSpec | IMarkLineSpec[]",
          "originalType": "IMarkLineSpec | IMarkLineSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkLineSpec"
          ],
          "fromInterface": "ICartesianChartSpec"
        },
        {
          "name": "markArea",
          "description": "参考区域配置",
          "type": "IMarkAreaSpec | IMarkAreaSpec[]",
          "originalType": "IMarkAreaSpec | IMarkAreaSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkAreaSpec"
          ],
          "fromInterface": "ICartesianChartSpec"
        },
        {
          "name": "markPoint",
          "description": "参考点配置",
          "type": "IMarkPointSpec | IMarkPointSpec[]",
          "originalType": "IMarkPointSpec | IMarkPointSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkPointSpec"
          ],
          "fromInterface": "ICartesianChartSpec"
        }
      ],
      "stats": {
        "total": 4,
        "simple": 0,
        "complex": 4
      }
    },
    "数据源": {
      "description": "数据源相关的配置项",
      "properties": [
        {
          "name": "data",
          "description": "图表数据配置",
          "type": "IData",
          "originalType": "IData",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IData"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "data",
          "description": "系列数据，系列可以配置自身的数据，也可以从chart.data中获取数据",
          "type": "IDataType",
          "originalType": "IDataType",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IDataType"
          ],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 0,
        "complex": 2
      }
    },
    "画布尺寸": {
      "description": "画布尺寸相关的配置项",
      "properties": [
        {
          "name": "width",
          "description": "画布宽度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "height",
          "description": "画布高度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "autoFit",
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 3,
        "complex": 0
      }
    },
    "布局设置": {
      "description": "布局设置相关的配置项",
      "properties": [
        {
          "name": "padding",
          "description": "图表整体 padding 设置",
          "type": "ILayoutPaddingSpec",
          "originalType": "ILayoutPaddingSpec",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "ILayoutPaddingSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "region",
          "description": "region配置",
          "type": "RegionSpec[]",
          "originalType": "RegionSpec[]",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "RegionSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "layout",
          "description": "布局配置",
          "type": "ILayoutSpec",
          "originalType": "ILayoutSpec",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "ILayoutSpec"
          ],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 0,
        "complex": 3
      }
    },
    "色彩主题": {
      "description": "色彩主题相关的配置项",
      "properties": [
        {
          "name": "color",
          "description": "图表色系配置",
          "type": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">",
          "originalType": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IVisualSpecScale"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "theme",
          "description": "图表上的主题定义。可以直接配置主题名，前提是该主题名已经注册",
          "type": "Omit<ITheme, \"name\"> | string",
          "originalType": "Omit<ITheme, \"name\"> | string",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "ITheme"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "background",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置",
          "type": "IBackgroundSpec",
          "originalType": "IBackgroundSpec",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IBackgroundSpec"
          ],
          "since": "1.11.6",
          "fromInterface": "IChartSpec"
        },
        {
          "name": "scales",
          "description": "全局 scale 配置",
          "type": "IVisualSpecScale<unknown, unknown>[]",
          "originalType": "IVisualSpecScale<unknown, unknown>[]",
          "required": false,
          "category": "色彩主题",
          "isSimple": false,
          "dependencies": [
            "IVisualSpecScale"
          ],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 4,
        "simple": 0,
        "complex": 4
      }
    },
    "图表组件": {
      "description": "图表组件相关的配置项",
      "properties": [
        {
          "name": "title",
          "description": "图表标题配置",
          "type": "ITitleSpec",
          "originalType": "ITitleSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITitleSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "legends",
          "description": "图例配置",
          "type": "ILegendSpec | ILegendSpec[]",
          "originalType": "ILegendSpec | ILegendSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ILegendSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "tooltip",
          "description": "tooltip配置",
          "type": "ITooltipSpec",
          "originalType": "ITooltipSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITooltipSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "dataZoom",
          "description": "缩略轴配置",
          "type": "IDataZoomSpec | IDataZoomSpec[]",
          "originalType": "IDataZoomSpec | IDataZoomSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IDataZoomSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "scrollBar",
          "description": "滚动条配置",
          "type": "IScrollBarSpec | IScrollBarSpec[]",
          "originalType": "IScrollBarSpec | IScrollBarSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IScrollBarSpec"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "player",
          "description": "播放器配置",
          "type": "IPlayer",
          "originalType": "IPlayer",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "IPlayer"
          ],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 6,
        "simple": 0,
        "complex": 6
      }
    },
    "交互功能": {
      "description": "交互功能相关的配置项",
      "properties": [
        {
          "name": "brush",
          "description": "框选配置",
          "type": "IBrushSpec",
          "originalType": "IBrushSpec",
          "required": false,
          "category": "交互功能",
          "isSimple": false,
          "dependencies": [
            "IBrushSpec"
          ],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "系列样式": {
      "description": "系列样式相关的配置项",
      "properties": [
        {
          "name": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle",
          "originalType": "ISeriesStyle",
          "required": false,
          "category": "系列样式",
          "isSimple": false,
          "dependencies": [
            "ISeriesStyle"
          ],
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "动画控制": {
      "description": "动画控制相关的配置项",
      "properties": [
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0",
          "fromInterface": "IChartSpec"
        },
        {
          "name": "animation",
          "description": "是否开启系列动画",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0",
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "morph",
          "description": "morph 动画配置",
          "type": "IMorphSeriesSpec",
          "originalType": "IMorphSeriesSpec",
          "required": false,
          "category": "动画控制",
          "isSimple": false,
          "dependencies": [
            "IMorphSeriesSpec"
          ],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 4,
        "simple": 3,
        "complex": 1
      }
    },
    "数据处理": {
      "description": "数据处理相关的配置项",
      "properties": [
        {
          "name": "stackInverse",
          "description": "堆积时是否逆序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.4.0",
          "fromInterface": "IChartSpec"
        },
        {
          "name": "stackSort",
          "description": "堆积时是否排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.10.4",
          "fromInterface": "IChartSpec"
        },
        {
          "name": "sortDataByAxis",
          "description": "是否将数据按照数轴排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0",
          "fromInterface": "ICartesianSeriesSpec"
        },
        {
          "name": "stack",
          "description": "是否对数据进行堆叠处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "stackValue",
          "description": "堆叠时的分组值，stackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "since": "1.4.0",
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "totalLabel",
          "description": "堆叠汇总标签",
          "type": "ITotalLabelSpec",
          "originalType": "ITotalLabelSpec",
          "required": false,
          "category": "数据处理",
          "isSimple": false,
          "dependencies": [
            "ITotalLabelSpec"
          ],
          "since": "1.3.0",
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "percent",
          "description": "是否对数据进行百分比处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "stackOffsetSilhouette",
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "invalidType",
          "description": "非合规数据点连接方式。null，undefined等非法数据点连接方式",
          "type": "\"break\" | \"link\" | \"zero\" | \"ignore\"",
          "originalType": "IInvalidType",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "\"break\"",
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 9,
        "simple": 8,
        "complex": 1
      }
    },
    "扩展功能": {
      "description": "扩展功能相关的配置项",
      "properties": [
        {
          "name": "customMark",
          "description": "自定义mark",
          "type": "ICustomMarkSpec<EnableMarkType>[]",
          "originalType": "ICustomMarkSpec<EnableMarkType>[]",
          "required": false,
          "category": "扩展功能",
          "isSimple": false,
          "dependencies": [
            "ICustomMarkSpec",
            "EnableMarkType"
          ],
          "fromInterface": "IChartSpec"
        },
        {
          "name": "extensionMark",
          "description": "系列的扩展mark，能够获取系列上的数据",
          "type": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]",
          "originalType": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]",
          "required": false,
          "category": "扩展功能",
          "isSimple": false,
          "dependencies": [
            "EnableMarkType"
          ],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 0,
        "complex": 2
      }
    },
    "响应式": {
      "description": "响应式相关的配置项",
      "properties": [
        {
          "name": "media",
          "description": "媒体查询配置",
          "type": "IMediaQuerySpec",
          "originalType": "IMediaQuerySpec",
          "required": false,
          "category": "响应式",
          "isSimple": false,
          "dependencies": [
            "IMediaQuerySpec"
          ],
          "since": "1.8.0",
          "fromInterface": "IChartSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "系列标识": {
      "description": "系列标识相关的配置项",
      "properties": [
        {
          "name": "type",
          "description": "系列类型，面积系列固定为 \"area\"",
          "type": "\"area\"",
          "originalType": "\"area\"",
          "required": true,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "type",
          "description": "系列类型",
          "type": "\"line\" | \"area\" | \"bar\" | \"scatter\" | \"pie\" | \"radar\" | \"sankey\" | \"treemap\" | \"sunburst\" | \"gauge\" | \"waterfall\" | \"box\" | \"histogram\" | \"rose\" | \"circularProgress\" | \"linearProgress\" | \"funnel\" | \"map\" | \"wordCloud\" | \"correlation\" | \"heatmap\" | \"liquidFill\" | \"mosaic\" | \"dot\" | \"range-column\"",
          "originalType": "SeriesType",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "name",
          "description": "系列名称",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "id",
          "description": "用户自定义的 series id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 4,
        "simple": 4,
        "complex": 0
      }
    },
    "数据映射": {
      "description": "数据映射相关的配置项",
      "properties": [
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": [],
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "yField",
          "description": "y轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": [],
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        },
        {
          "name": "x2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        },
        {
          "name": "yField",
          "description": "y轴字段，运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        },
        {
          "name": "y2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        },
        {
          "name": "zField",
          "description": "z轴字段，用于3d散点图等",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": false,
          "dependencies": [],
          "fromInterface": "ICartesianSeriesSpec"
        }
      ],
      "stats": {
        "total": 7,
        "simple": 2,
        "complex": 5
      }
    },
    "图元样式": {
      "description": "图元样式相关的配置项",
      "properties": [
        {
          "name": "point",
          "description": "点图元配置",
          "type": "IMarkSpec<ISymbolMarkSpec>",
          "originalType": "IMarkSpec<ISymbolMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "ISymbolMarkSpec"
          ],
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "line",
          "description": "线图元配置",
          "type": "IMarkSpec<ILineMarkSpec>",
          "originalType": "IMarkSpec<ILineMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "ILineMarkSpec"
          ],
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "area",
          "description": "面积图元配置",
          "type": "IMarkSpec<IAreaMarkSpec>",
          "originalType": "IMarkSpec<IAreaMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "IAreaMarkSpec"
          ],
          "fromInterface": "IAreaSeriesSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 0,
        "complex": 3
      }
    },
    "标签配置": {
      "description": "标签配置相关的配置项",
      "properties": [
        {
          "name": "label",
          "description": "标签配置，支持 inside-middle 标签位置",
          "type": "IMultiLabelSpec<...>",
          "originalType": "IMultiLabelSpec<...>",
          "required": false,
          "category": "标签配置",
          "isSimple": false,
          "dependencies": [
            "IMultiLabelSpec"
          ],
          "since": "1.13.1",
          "fromInterface": "IAreaSeriesSpec"
        },
        {
          "name": "areaLabel",
          "description": "面积图元标签配置，支持起点和终点位置",
          "type": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }",
          "originalType": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }",
          "required": false,
          "category": "标签配置",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ],
          "since": "1.7.0",
          "fromInterface": "IAreaSeriesSpec"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 0,
        "complex": 2
      }
    },
    "系列行为": {
      "description": "系列行为相关的配置项",
      "properties": [
        {
          "name": "seriesMark",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "type": "\"point\" | \"line\" | \"area\"",
          "originalType": "\"point\" | \"line\" | \"area\"",
          "required": false,
          "category": "系列行为",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "\"area\"",
          "since": "1.2.0",
          "fromInterface": "IAreaSeriesSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "交互增强": {
      "description": "交互增强相关的配置项",
      "properties": [
        {
          "name": "activePoint",
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "交互增强",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0",
          "fromInterface": "IAreaSeriesSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "数据关联": {
      "description": "数据关联相关的配置项",
      "properties": [
        {
          "name": "dataIndex",
          "description": "系列关联的数据索引",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "0",
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "dataId",
          "description": "系列关联的数据id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "dataKey",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要",
          "type": "string | string[] | ((data: any) => string)",
          "originalType": "DataKeyType",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 3,
        "complex": 0
      }
    },
    "布局关联": {
      "description": "布局关联相关的配置项",
      "properties": [
        {
          "name": "regionIndex",
          "description": "系列关联的region索引",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "0",
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "regionId",
          "description": "系列关联的region id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "zIndex",
          "description": "z轴层级，只在通过series配置时生效",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "布局关联",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 3,
        "complex": 0
      }
    },
    "系列分组": {
      "description": "系列分组相关的配置项",
      "properties": [
        {
          "name": "seriesField",
          "description": "分组字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "系列分组",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        },
        {
          "name": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle",
          "originalType": "ISeriesStyle",
          "required": false,
          "category": "系列分组",
          "isSimple": false,
          "dependencies": [
            "ISeriesStyle"
          ],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 1,
        "complex": 1
      }
    },
    "3D渲染": {
      "description": "3D渲染相关的配置项",
      "properties": [
        {
          "name": "support3d",
          "description": "是否支持3d视角",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "3D渲染",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "交互提示": {
      "description": "交互提示相关的配置项",
      "properties": [
        {
          "name": "tooltip",
          "description": "系列对应的提示信息设置，优先级高于图表的tooltip配置",
          "type": "ISeriesTooltipSpec",
          "originalType": "ISeriesTooltipSpec",
          "required": false,
          "category": "交互提示",
          "isSimple": false,
          "dependencies": [
            "ISeriesTooltipSpec"
          ],
          "fromInterface": "ISeriesSpec"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "交互行为": {
      "description": "交互行为相关的配置项",
      "properties": [
        {
          "name": "hover",
          "description": "hover交互配置",
          "type": "IHoverSpec | boolean",
          "originalType": "IHoverSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "IHoverSpec"
          ],
          "fromInterface": "IInteractionSpec"
        },
        {
          "name": "select",
          "description": "选中交互配置",
          "type": "ISelectSpec | boolean",
          "originalType": "ISelectSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "ISelectSpec"
          ],
          "fromInterface": "IInteractionSpec"
        },
        {
          "name": "interactions",
          "description": "其他需要按需注册的类型交互",
          "type": "IInteractionItemSpec[]",
          "originalType": "IInteractionItemSpec[]",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "IInteractionItemSpec"
          ],
          "fromInterface": "IInteractionSpec"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 0,
        "complex": 3
      }
    },
    "入场动画": {
      "description": "入场动画相关的配置项",
      "properties": [
        {
          "name": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "入场动画",
          "isSimple": false,
          "dependencies": [
            "IStateAnimateSpec",
            "AreaAppearPreset",
            "IMarkAnimateSpec",
            "AreaMarks"
          ],
          "fromInterface": "IAnimationSpec<AreaMarks, AreaAppearPreset>"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 0,
        "complex": 1
      }
    },
    "数据动画": {
      "description": "数据动画相关的配置项",
      "properties": [
        {
          "name": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ],
          "fromInterface": "IAnimationSpec<AreaMarks, AreaAppearPreset>"
        },
        {
          "name": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ],
          "fromInterface": "IAnimationSpec<AreaMarks, AreaAppearPreset>"
        },
        {
          "name": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec",
            "AreaMarks"
          ],
          "fromInterface": "IAnimationSpec<AreaMarks, AreaAppearPreset>"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 0,
        "complex": 3
      }
    },
    "大数据渲染": {
      "description": "大数据渲染相关的配置项",
      "properties": [
        {
          "name": "large",
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IMarkProgressiveConfig"
        },
        {
          "name": "largeThreshold",
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IMarkProgressiveConfig"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 2,
        "complex": 0
      }
    },
    "渐进渲染": {
      "description": "渐进渲染相关的配置项",
      "properties": [
        {
          "name": "progressiveStep",
          "description": "分片长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IMarkProgressiveConfig"
        },
        {
          "name": "progressiveThreshold",
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": [],
          "fromInterface": "IMarkProgressiveConfig"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 2,
        "complex": 0
      }
    },
    "交互优化": {
      "description": "交互优化相关的配置项",
      "properties": [
        {
          "name": "activePoint",
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "交互优化",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0",
          "fromInterface": "IDataSamping"
        }
      ],
      "stats": {
        "total": 1,
        "simple": 1,
        "complex": 0
      }
    },
    "数据采样": {
      "description": "数据采样相关的配置项",
      "properties": [
        {
          "name": "sampling",
          "description": "数据采样 - 采样方法",
          "type": "\"lttb\" | \"max\" | \"min\" | \"average\" | \"sum\"",
          "originalType": "ISamplingMethod",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "since": "1.6.0",
          "fromInterface": "IDataSamping"
        },
        {
          "name": "samplingFactor",
          "description": "数据采样 - 采样系数",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "1",
          "since": "1.6.0",
          "fromInterface": "IDataSamping"
        }
      ],
      "stats": {
        "total": 2,
        "simple": 2,
        "complex": 0
      }
    },
    "重叠控制": {
      "description": "重叠控制相关的配置项",
      "properties": [
        {
          "name": "pointDis",
          "description": "标记点之间的距离，px",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.6.0",
          "fromInterface": "IMarkOverlap"
        },
        {
          "name": "pointDisMul",
          "description": "标记点之间的距离， pointSize 的倍数",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "1",
          "since": "1.6.0",
          "fromInterface": "IMarkOverlap"
        },
        {
          "name": "pointOverlapTolerance",
          "description": "是否允许标记图形相互覆盖",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "重叠控制",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.6.0",
          "fromInterface": "IMarkOverlap"
        }
      ],
      "stats": {
        "total": 3,
        "simple": 3,
        "complex": 0
      }
    }
  },
  "dependencyView": {
    "IAreaSeriesSpec": {
      "description": "IAreaSeriesSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaChartSpec",
          "property": "series",
          "description": "系列配置数组，定义面积图的系列",
          "type": "IAreaSeriesSpec[]"
        }
      ]
    },
    "ICartesianAxisSpec": {
      "description": "ICartesianAxisSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ICartesianChartSpec",
          "property": "axes",
          "description": "笛卡尔坐标系的坐标轴配置",
          "type": "ICartesianAxisSpec[]"
        }
      ]
    },
    "ICartesianCrosshairSpec": {
      "description": "ICartesianCrosshairSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ICartesianChartSpec",
          "property": "crosshair",
          "description": "十字辅助线配置",
          "type": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]"
        }
      ]
    },
    "IMarkLineSpec": {
      "description": "IMarkLineSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ICartesianChartSpec",
          "property": "markLine",
          "description": "参考线配置",
          "type": "IMarkLineSpec | IMarkLineSpec[]"
        }
      ]
    },
    "IMarkAreaSpec": {
      "description": "IMarkAreaSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ICartesianChartSpec",
          "property": "markArea",
          "description": "参考区域配置",
          "type": "IMarkAreaSpec | IMarkAreaSpec[]"
        }
      ]
    },
    "IMarkPointSpec": {
      "description": "IMarkPointSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ICartesianChartSpec",
          "property": "markPoint",
          "description": "参考点配置",
          "type": "IMarkPointSpec | IMarkPointSpec[]"
        }
      ]
    },
    "IData": {
      "description": "IData 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "data",
          "description": "图表数据配置",
          "type": "IData"
        }
      ]
    },
    "ILayoutPaddingSpec": {
      "description": "ILayoutPaddingSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "padding",
          "description": "图表整体 padding 设置",
          "type": "ILayoutPaddingSpec"
        }
      ]
    },
    "RegionSpec": {
      "description": "RegionSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "region",
          "description": "region配置",
          "type": "RegionSpec[]"
        }
      ]
    },
    "ILayoutSpec": {
      "description": "ILayoutSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "layout",
          "description": "布局配置",
          "type": "ILayoutSpec"
        }
      ]
    },
    "IVisualSpecScale": {
      "description": "IVisualSpecScale 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "color",
          "description": "图表色系配置",
          "type": "string[] | Omit<IVisualSpecScale<unknown, string>, \"id\">"
        },
        {
          "interface": "IChartSpec",
          "property": "scales",
          "description": "全局 scale 配置",
          "type": "IVisualSpecScale<unknown, unknown>[]"
        }
      ]
    },
    "ITheme": {
      "description": "ITheme 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "theme",
          "description": "图表上的主题定义。可以直接配置主题名，前提是该主题名已经注册",
          "type": "Omit<ITheme, \"name\"> | string"
        }
      ]
    },
    "IBackgroundSpec": {
      "description": "IBackgroundSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "background",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置",
          "type": "IBackgroundSpec"
        }
      ]
    },
    "ITitleSpec": {
      "description": "ITitleSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "title",
          "description": "图表标题配置",
          "type": "ITitleSpec"
        }
      ]
    },
    "ILegendSpec": {
      "description": "ILegendSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "legends",
          "description": "图例配置",
          "type": "ILegendSpec | ILegendSpec[]"
        }
      ]
    },
    "ITooltipSpec": {
      "description": "ITooltipSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "tooltip",
          "description": "tooltip配置",
          "type": "ITooltipSpec"
        }
      ]
    },
    "IDataZoomSpec": {
      "description": "IDataZoomSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "dataZoom",
          "description": "缩略轴配置",
          "type": "IDataZoomSpec | IDataZoomSpec[]"
        }
      ]
    },
    "IScrollBarSpec": {
      "description": "IScrollBarSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "scrollBar",
          "description": "滚动条配置",
          "type": "IScrollBarSpec | IScrollBarSpec[]"
        }
      ]
    },
    "IPlayer": {
      "description": "IPlayer 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "player",
          "description": "播放器配置",
          "type": "IPlayer"
        }
      ]
    },
    "IBrushSpec": {
      "description": "IBrushSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "brush",
          "description": "框选配置",
          "type": "IBrushSpec"
        }
      ]
    },
    "ISeriesStyle": {
      "description": "ISeriesStyle 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle"
        },
        {
          "interface": "ISeriesSpec",
          "property": "seriesStyle",
          "description": "系列样式，仅在图表配置了seriesField时生效",
          "type": "ISeriesStyle"
        }
      ]
    },
    "ICustomMarkSpec": {
      "description": "ICustomMarkSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "customMark",
          "description": "自定义mark",
          "type": "ICustomMarkSpec<EnableMarkType>[]"
        }
      ]
    },
    "EnableMarkType": {
      "description": "EnableMarkType 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "customMark",
          "description": "自定义mark",
          "type": "ICustomMarkSpec<EnableMarkType>[]"
        },
        {
          "interface": "ISeriesSpec",
          "property": "extensionMark",
          "description": "系列的扩展mark，能够获取系列上的数据",
          "type": "(IExtensionMarkSpec<Exclude<EnableMarkType, \"group\">> | IExtensionGroupMarkSpec)[]"
        }
      ]
    },
    "IMediaQuerySpec": {
      "description": "IMediaQuerySpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IChartSpec",
          "property": "media",
          "description": "媒体查询配置",
          "type": "IMediaQuerySpec"
        }
      ]
    },
    "IMarkSpec": {
      "description": "IMarkSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "point",
          "description": "点图元配置",
          "type": "IMarkSpec<ISymbolMarkSpec>"
        },
        {
          "interface": "IAreaSeriesSpec",
          "property": "line",
          "description": "线图元配置",
          "type": "IMarkSpec<ILineMarkSpec>"
        },
        {
          "interface": "IAreaSeriesSpec",
          "property": "area",
          "description": "面积图元配置",
          "type": "IMarkSpec<IAreaMarkSpec>"
        }
      ]
    },
    "ISymbolMarkSpec": {
      "description": "ISymbolMarkSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "point",
          "description": "点图元配置",
          "type": "IMarkSpec<ISymbolMarkSpec>"
        }
      ]
    },
    "ILineMarkSpec": {
      "description": "ILineMarkSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "line",
          "description": "线图元配置",
          "type": "IMarkSpec<ILineMarkSpec>"
        }
      ]
    },
    "IAreaMarkSpec": {
      "description": "IAreaMarkSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "area",
          "description": "面积图元配置",
          "type": "IMarkSpec<IAreaMarkSpec>"
        }
      ]
    },
    "IMultiLabelSpec": {
      "description": "IMultiLabelSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "label",
          "description": "标签配置，支持 inside-middle 标签位置",
          "type": "IMultiLabelSpec<...>"
        }
      ]
    },
    "ILabelSpec": {
      "description": "ILabelSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAreaSeriesSpec",
          "property": "areaLabel",
          "description": "面积图元标签配置，支持起点和终点位置",
          "type": "Omit<ILabelSpec, \"position\"> & { position?: \"start\" | \"end\" }"
        }
      ]
    },
    "IDataType": {
      "description": "IDataType 接口依赖关系",
      "usedBy": [
        {
          "interface": "ISeriesSpec",
          "property": "data",
          "description": "系列数据，系列可以配置自身的数据，也可以从chart.data中获取数据",
          "type": "IDataType"
        }
      ]
    },
    "ITotalLabelSpec": {
      "description": "ITotalLabelSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ISeriesSpec",
          "property": "totalLabel",
          "description": "堆叠汇总标签",
          "type": "ITotalLabelSpec"
        }
      ]
    },
    "IMorphSeriesSpec": {
      "description": "IMorphSeriesSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ISeriesSpec",
          "property": "morph",
          "description": "morph 动画配置",
          "type": "IMorphSeriesSpec"
        }
      ]
    },
    "ISeriesTooltipSpec": {
      "description": "ISeriesTooltipSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "ISeriesSpec",
          "property": "tooltip",
          "description": "系列对应的提示信息设置，优先级高于图表的tooltip配置",
          "type": "ISeriesTooltipSpec"
        }
      ]
    },
    "IHoverSpec": {
      "description": "IHoverSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IInteractionSpec",
          "property": "hover",
          "description": "hover交互配置",
          "type": "IHoverSpec | boolean"
        }
      ]
    },
    "ISelectSpec": {
      "description": "ISelectSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IInteractionSpec",
          "property": "select",
          "description": "选中交互配置",
          "type": "ISelectSpec | boolean"
        }
      ]
    },
    "IInteractionItemSpec": {
      "description": "IInteractionItemSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IInteractionSpec",
          "property": "interactions",
          "description": "其他需要按需注册的类型交互",
          "type": "IInteractionItemSpec[]"
        }
      ]
    },
    "IStateAnimateSpec": {
      "description": "IStateAnimateSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>"
        }
      ]
    },
    "AreaAppearPreset": {
      "description": "AreaAppearPreset 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>"
        }
      ]
    },
    "IMarkAnimateSpec": {
      "description": "IMarkAnimateSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        }
      ]
    },
    "AreaMarks": {
      "description": "AreaMarks 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<AreaAppearPreset> | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        }
      ]
    },
    "ICommonStateAnimateSpec": {
      "description": "ICommonStateAnimateSpec 接口依赖关系",
      "usedBy": [
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        },
        {
          "interface": "IAnimationSpec<AreaMarks, AreaAppearPreset>",
          "property": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<AreaMarks>"
        }
      ]
    }
  },
  "complexTypeDefinitions": {
    "IAreaSeriesSpec": {
      "description": "IAreaSeriesSpec 接口配置",
      "typescriptCode": "interface IAreaSeriesSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "ICartesianAxisSpec": {
      "description": "笛卡尔坐标轴配置",
      "typescriptCode": "interface ICartesianAxisSpec {\n  /** 坐标轴位置 */\n  orient: \"left\" | \"right\" | \"top\" | \"bottom\";\n  /** 坐标轴类型 */\n  type?: \"linear\" | \"band\" | \"point\" | \"time\" | \"log\";\n  /** 坐标轴数据域 */\n  domain?: { [key: string]: any } | string[];\n  /** 坐标轴像素范围 */\n  range?: { [key: string]: any };\n  /** 坐标轴标题 */\n  title?: {\n  visible?: boolean;\n  text?: string;\n  subtext?: string;\n  align?: \"left\" | \"center\" | \"right\";\n  textStyle?: {\n    fontSize?: number;\n    fontWeight?: string | number;\n    fill?: string;\n    lineHeight?: number;\n  };\n  subtextStyle?: {\n    fontSize?: number;\n    fill?: string;\n    lineHeight?: number;\n  };\n  padding?: number | number[];\n};\n  /** 坐标轴标签 */\n  label?: {\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n};\n  /** 刻度线配置 */\n  tick?: { [key: string]: any };\n  /** 网格线配置 */\n  grid?: { [key: string]: any };\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "orient",
          "type": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "required": true,
          "description": "坐标轴位置",
          "expandedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "resolvedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "type",
          "type": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "required": false,
          "description": "坐标轴类型",
          "expandedType": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "resolvedType": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "domain",
          "type": "[number, number] | string[]",
          "required": false,
          "description": "坐标轴数据域",
          "expandedType": "{ [key: string]: any } | string[]",
          "resolvedType": "[number, number] | string[]",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "range",
          "type": "[number, number]",
          "required": false,
          "description": "坐标轴像素范围",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "[number, number]",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "title",
          "type": "ITitleSpec",
          "required": false,
          "description": "坐标轴标题",
          "expandedType": "{\n  visible?: boolean;\n  text?: string;\n  subtext?: string;\n  align?: \"left\" | \"center\" | \"right\";\n  textStyle?: {\n    fontSize?: number;\n    fontWeight?: string | number;\n    fill?: string;\n    lineHeight?: number;\n  };\n  subtextStyle?: {\n    fontSize?: number;\n    fill?: string;\n    lineHeight?: number;\n  };\n  padding?: number | number[];\n}",
          "resolvedType": "ITitleSpec",
          "isSimple": false,
          "dependencies": [
            "ITitleSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "坐标轴标签",
          "expandedType": "{\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        },
        {
          "name": "tick",
          "type": "ITickSpec",
          "required": false,
          "description": "刻度线配置",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITickSpec",
          "isSimple": false,
          "dependencies": [
            "ITickSpec"
          ]
        },
        {
          "name": "grid",
          "type": "IGridSpec",
          "required": false,
          "description": "网格线配置",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "IGridSpec",
          "isSimple": false,
          "dependencies": [
            "IGridSpec"
          ]
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ICartesianCrosshairSpec": {
      "description": "笛卡尔坐标系十字辅助线配置",
      "typescriptCode": "interface ICartesianCrosshairSpec {\n  /** x轴字段名 */\n  xField?: string;\n  /** y轴字段名 */\n  yField?: string;\n  /** 触发方式 */\n  trigger?: \"hover\" | \"click\" | \"none\";\n  /** 十字线样式配置 */\n  line?: {\n  stroke?: string;\n  lineWidth?: number;\n  lineDash?: number[];\n  opacity?: number;\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n};\n  /** 标签配置 */\n  label?: {\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n};\n  /** 容器元素 */\n  container?: string | { [key: string]: any };\n}",
      "properties": [
        {
          "name": "xField",
          "type": "string",
          "required": false,
          "description": "x轴字段名",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "yField",
          "type": "string",
          "required": false,
          "description": "y轴字段名",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "trigger",
          "type": "\"hover\" | \"click\" | \"none\"",
          "required": false,
          "description": "触发方式",
          "expandedType": "\"hover\" | \"click\" | \"none\"",
          "resolvedType": "\"hover\" | \"click\" | \"none\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "line",
          "type": "ILineMarkSpec",
          "required": false,
          "description": "十字线样式配置",
          "expandedType": "{\n  stroke?: string;\n  lineWidth?: number;\n  lineDash?: number[];\n  opacity?: number;\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n}",
          "resolvedType": "ILineMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ILineMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        },
        {
          "name": "container",
          "type": "string | HTMLElement",
          "required": false,
          "description": "容器元素",
          "expandedType": "string | { [key: string]: any }",
          "resolvedType": "string | HTMLElement",
          "isSimple": false,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IMarkLineSpec": {
      "description": "参考线配置",
      "typescriptCode": "interface IMarkLineSpec {\n  /** 参考线坐标点 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 数据处理流程 */\n  process?: { [key: string]: any }[];\n  /** 线条样式 */\n  line?: {\n  stroke?: string;\n  lineWidth?: number;\n  lineDash?: number[];\n  opacity?: number;\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n};\n  /** 标签配置 */\n  label?: {\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n};\n  /** 连接方向 */\n  connectDirection?: \"x\" | \"y\";\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "参考线坐标点",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "process",
          "type": "IDataPointProcess[]",
          "required": false,
          "description": "数据处理流程",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "IDataPointProcess[]",
          "isSimple": false,
          "dependencies": [
            "IDataPointProcess"
          ]
        },
        {
          "name": "line",
          "type": "ILineMarkSpec",
          "required": false,
          "description": "线条样式",
          "expandedType": "{\n  stroke?: string;\n  lineWidth?: number;\n  lineDash?: number[];\n  opacity?: number;\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n}",
          "resolvedType": "ILineMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ILineMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        },
        {
          "name": "connectDirection",
          "type": "\"x\" | \"y\"",
          "required": false,
          "description": "连接方向",
          "expandedType": "\"x\" | \"y\"",
          "resolvedType": "\"x\" | \"y\"",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IMarkAreaSpec": {
      "description": "参考区域配置",
      "typescriptCode": "interface IMarkAreaSpec {\n  /** 区域坐标点 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 数据处理流程 */\n  process?: { [key: string]: any }[];\n  /** 区域样式 */\n  area?: {\n  fill?: string;\n  fillOpacity?: number;\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  lineDash?: number[];\n};\n  /** 标签配置 */\n  label?: {\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n};\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "区域坐标点",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "process",
          "type": "IDataPointProcess[]",
          "required": false,
          "description": "数据处理流程",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "IDataPointProcess[]",
          "isSimple": false,
          "dependencies": [
            "IDataPointProcess"
          ]
        },
        {
          "name": "area",
          "type": "IAreaMarkSpec",
          "required": false,
          "description": "区域样式",
          "expandedType": "{\n  fill?: string;\n  fillOpacity?: number;\n  stroke?: string;\n  strokeOpacity?: number;\n  lineWidth?: number;\n  lineDash?: number[];\n}",
          "resolvedType": "IAreaMarkSpec",
          "isSimple": false,
          "dependencies": [
            "IAreaMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IMarkPointSpec": {
      "description": "参考点配置",
      "typescriptCode": "interface IMarkPointSpec {\n  /** 参考点坐标 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 数据处理流程 */\n  process?: { [key: string]: any }[];\n  /** 点样式 */\n  symbol?: {\n  symbolType?: \"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\" | \"cross\";\n  size?: number;\n  fill?: string;\n  stroke?: string;\n  lineWidth?: number;\n  opacity?: number;\n  fillOpacity?: number;\n  strokeOpacity?: number;\n};\n  /** 标签配置 */\n  label?: {\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n};\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "参考点坐标",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "process",
          "type": "IDataPointProcess[]",
          "required": false,
          "description": "数据处理流程",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "IDataPointProcess[]",
          "isSimple": false,
          "dependencies": [
            "IDataPointProcess"
          ]
        },
        {
          "name": "symbol",
          "type": "ISymbolMarkSpec",
          "required": false,
          "description": "点样式",
          "expandedType": "{\n  symbolType?: \"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\" | \"cross\";\n  size?: number;\n  fill?: string;\n  stroke?: string;\n  lineWidth?: number;\n  opacity?: number;\n  fillOpacity?: number;\n  strokeOpacity?: number;\n}",
          "resolvedType": "ISymbolMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ISymbolMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  visible?: boolean;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  offset?: number | { x?: number; y?: number };\n  style?: {\n    fontSize?: number;\n    fontFamily?: string;\n    fontWeight?: string | number;\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n    textAlign?: \"left\" | \"center\" | \"right\";\n    textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  };\n  formatter?: string | ((value: any, datum?: any) => string);\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IData": {
      "description": "数据配置",
      "typescriptCode": "interface IData {\n  /** 数据集ID */\n  id?: { [key: string]: any };\n  /** 静态数据值 */\n  values?: any[];\n  /** 字段类型定义 */\n  fields?: { [key: string]: any } | \"string\" | { [key: string]: any };\n  /** 数据解析器 */\n  parser?: { [key: string]: any };\n  /** 数据转换流程 */\n  transforms?: { [key: string]: any }[];\n}",
      "properties": [
        {
          "name": "id",
          "type": "StringOrNumber",
          "required": false,
          "description": "数据集ID",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "string | number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "values",
          "type": "any[]",
          "required": false,
          "description": "静态数据值",
          "expandedType": "any[]",
          "resolvedType": "any[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fields",
          "type": "{ [key: string]: { type: \"number\" | \"string\" | \"boolean\" } }",
          "required": false,
          "description": "字段类型定义",
          "expandedType": "{ [key: string]: any } | \"string\" | { [key: string]: any }",
          "resolvedType": "{ [key: string]: { type: \"number\" | \"string\" | \"boolean\" } }",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "parser",
          "type": "IDataParser",
          "required": false,
          "description": "数据解析器",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "IDataParser",
          "isSimple": false,
          "dependencies": [
            "IDataParser"
          ]
        },
        {
          "name": "transforms",
          "type": "IDataTransform[]",
          "required": false,
          "description": "数据转换流程",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "IDataTransform[]",
          "isSimple": false,
          "dependencies": [
            "IDataTransform"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ILayoutPaddingSpec": {
      "description": "布局内边距配置",
      "typescriptCode": "interface ILayoutPaddingSpec {\n  /** 左边距 */\n  left?: number;\n  /** 右边距 */\n  right?: number;\n  /** 上边距 */\n  top?: number;\n  /** 下边距 */\n  bottom?: number;\n}",
      "properties": [
        {
          "name": "left",
          "type": "number",
          "required": false,
          "description": "左边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "right",
          "type": "number",
          "required": false,
          "description": "右边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "top",
          "type": "number",
          "required": false,
          "description": "上边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "bottom",
          "type": "number",
          "required": false,
          "description": "下边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "RegionSpec": {
      "description": "RegionSpec 接口配置",
      "typescriptCode": "interface RegionSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "ILayoutSpec": {
      "description": "布局配置",
      "typescriptCode": "interface ILayoutSpec {\n  /** 布局类型 */\n  type?: \"grid\" | \"normal\";\n  /** 网格列数 */\n  col?: number;\n  /** 网格行数 */\n  row?: number;\n  /** 布局元素 */\n  elements?: { [key: string]: any }[];\n}",
      "properties": [
        {
          "name": "type",
          "type": "\"grid\" | \"normal\"",
          "required": false,
          "description": "布局类型",
          "expandedType": "\"grid\" | \"normal\"",
          "resolvedType": "\"grid\" | \"normal\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "col",
          "type": "number",
          "required": false,
          "description": "网格列数",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "row",
          "type": "number",
          "required": false,
          "description": "网格行数",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "elements",
          "type": "ILayoutElement[]",
          "required": false,
          "description": "布局元素",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "ILayoutElement[]",
          "isSimple": false,
          "dependencies": [
            "ILayoutElement"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IVisualSpecScale": {
      "description": "IVisualSpecScale 接口配置",
      "typescriptCode": "interface IVisualSpecScale {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "ITheme": {
      "description": "ITheme 接口配置",
      "typescriptCode": "interface ITheme {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IBackgroundSpec": {
      "description": "背景配置",
      "typescriptCode": "interface IBackgroundSpec {\n  /** 填充色 */\n  fill?: string;\n  /** 圆角半径 */\n  cornerRadius?: number;\n  /** 边框色 */\n  stroke?: string;\n  /** 边框宽度 */\n  lineWidth?: number;\n}",
      "properties": [
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "cornerRadius",
          "type": "number",
          "required": false,
          "description": "圆角半径",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ITitleSpec": {
      "description": "标题配置",
      "typescriptCode": "interface ITitleSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标题文本 */\n  text?: string;\n  /** 副标题文本 */\n  subtext?: string;\n  /** 对齐方式 */\n  align?: \"left\" | \"center\" | \"right\";\n  /** 主标题文本样式 */\n  textStyle?: { [key: string]: any };\n  /** 副标题文本样式 */\n  subtextStyle?: { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "text",
          "type": "string",
          "required": false,
          "description": "标题文本",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "subtext",
          "type": "string",
          "required": false,
          "description": "副标题文本",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "align",
          "type": "\"left\" | \"center\" | \"right\"",
          "required": false,
          "description": "对齐方式",
          "expandedType": "\"left\" | \"center\" | \"right\"",
          "resolvedType": "\"left\" | \"center\" | \"right\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "textStyle",
          "type": "ITextMarkSpec",
          "required": false,
          "description": "主标题文本样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITextMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITextMarkSpec"
          ]
        },
        {
          "name": "subtextStyle",
          "type": "ITextMarkSpec",
          "required": false,
          "description": "副标题文本样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITextMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITextMarkSpec"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ILegendSpec": {
      "description": "图例配置",
      "typescriptCode": "interface ILegendSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 图例位置 */\n  orient?: \"left\" | \"right\" | \"top\" | \"bottom\";\n  /** 图例对齐位置 */\n  position?: \"start\" | \"middle\" | \"end\";\n  /** 图例项配置 */\n  item?: { [key: string]: any };\n  /** 分页器配置 */\n  pager?: { [key: string]: any };\n  /** 图例标题 */\n  title?: { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "orient",
          "type": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "required": false,
          "description": "图例位置",
          "expandedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "resolvedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"start\" | \"middle\" | \"end\"",
          "required": false,
          "description": "图例对齐位置",
          "expandedType": "\"start\" | \"middle\" | \"end\"",
          "resolvedType": "\"start\" | \"middle\" | \"end\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "item",
          "type": "ILegendItemSpec",
          "required": false,
          "description": "图例项配置",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ILegendItemSpec",
          "isSimple": false,
          "dependencies": [
            "ILegendItemSpec"
          ]
        },
        {
          "name": "pager",
          "type": "ILegendPagerSpec",
          "required": false,
          "description": "分页器配置",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ILegendPagerSpec",
          "isSimple": false,
          "dependencies": [
            "ILegendPagerSpec"
          ]
        },
        {
          "name": "title",
          "type": "ILegendTitleSpec",
          "required": false,
          "description": "图例标题",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ILegendTitleSpec",
          "isSimple": false,
          "dependencies": [
            "ILegendTitleSpec"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ITooltipSpec": {
      "description": "提示框配置",
      "typescriptCode": "interface ITooltipSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 触发方式 */\n  trigger?: \"hover\" | \"click\" | \"none\";\n  /** 提示框样式 */\n  mark?: { [key: string]: any };\n  /** 提示框内容配置 */\n  content?: { [key: string]: any }[];\n  /** 偏移量 */\n  offset?: { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "trigger",
          "type": "\"hover\" | \"click\" | \"none\"",
          "required": false,
          "description": "触发方式",
          "expandedType": "\"hover\" | \"click\" | \"none\"",
          "resolvedType": "\"hover\" | \"click\" | \"none\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "mark",
          "type": "ITooltipMarkSpec",
          "required": false,
          "description": "提示框样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITooltipMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITooltipMarkSpec"
          ]
        },
        {
          "name": "content",
          "type": "ITooltipContentSpec[]",
          "required": false,
          "description": "提示框内容配置",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "ITooltipContentSpec[]",
          "isSimple": false,
          "dependencies": [
            "ITooltipContentSpec"
          ]
        },
        {
          "name": "offset",
          "type": "{ x: number; y: number }",
          "required": false,
          "description": "偏移量",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "{ x: number; y: number }",
          "isSimple": false,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IDataZoomSpec": {
      "description": "IDataZoomSpec 接口配置",
      "typescriptCode": "interface IDataZoomSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IScrollBarSpec": {
      "description": "IScrollBarSpec 接口配置",
      "typescriptCode": "interface IScrollBarSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IPlayer": {
      "description": "IPlayer 接口配置",
      "typescriptCode": "interface IPlayer {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IBrushSpec": {
      "description": "IBrushSpec 接口配置",
      "typescriptCode": "interface IBrushSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "ISeriesStyle": {
      "description": "系列样式配置",
      "typescriptCode": "interface ISeriesStyle {\n  /** 填充色 */\n  fill?: string;\n  /** 边框色 */\n  stroke?: string;\n  /** 线宽 */\n  lineWidth?: number;\n  /** 透明度 */\n  opacity?: number;\n}",
      "properties": [
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "线宽",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ICustomMarkSpec": {
      "description": "ICustomMarkSpec 接口配置",
      "typescriptCode": "interface ICustomMarkSpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "EnableMarkType": {
      "description": "EnableMarkType 接口配置",
      "typescriptCode": "interface EnableMarkType {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IMediaQuerySpec": {
      "description": "IMediaQuerySpec 接口配置",
      "typescriptCode": "interface IMediaQuerySpec {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IMarkSpec": {
      "description": "图元标记配置基类",
      "typescriptCode": "interface IMarkSpec {\n  /** 是否可见 */\n  visible?: boolean;\n  /** 是否可交互 */\n  interactive?: boolean;\n  /** 图元样式配置（泛型） */\n  style?: { [key: string]: any };\n  /** 状态样式配置 */\n  state?: { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "interactive",
          "type": "boolean",
          "required": false,
          "description": "是否可交互",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "T",
          "required": false,
          "description": "图元样式配置（泛型）",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "T",
          "isSimple": false,
          "dependencies": [
            "T"
          ]
        },
        {
          "name": "state",
          "type": "{ [stateName: string]: T }",
          "required": false,
          "description": "状态样式配置",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "{ [stateName: string]: T }",
          "isSimple": false,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ISymbolMarkSpec": {
      "description": "符号图元样式配置",
      "typescriptCode": "interface ISymbolMarkSpec {\n  /** 符号类型 */\n  symbolType?: \"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\";\n  /** 符号大小 */\n  size?: number;\n  /** 填充色 */\n  fill?: string;\n  /** 边框色 */\n  stroke?: string;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 透明度 */\n  opacity?: number;\n}",
      "properties": [
        {
          "name": "symbolType",
          "type": "\"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\"",
          "required": false,
          "description": "符号类型",
          "expandedType": "\"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\"",
          "resolvedType": "\"circle\" | \"square\" | \"diamond\" | \"triangle\" | \"star\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "size",
          "type": "number",
          "required": false,
          "description": "符号大小",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ILineMarkSpec": {
      "description": "线图元样式配置",
      "typescriptCode": "interface ILineMarkSpec {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条宽度 */\n  lineWidth?: number;\n  /** 虚线样式 */\n  lineDash?: number[];\n  /** 透明度 */\n  opacity?: number;\n  /** 线条端点样式 */\n  lineCap?: \"butt\" | \"round\" | \"square\";\n}",
      "properties": [
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "线条颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "线条宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineDash",
          "type": "number[]",
          "required": false,
          "description": "虚线样式",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineCap",
          "type": "\"butt\" | \"round\" | \"square\"",
          "required": false,
          "description": "线条端点样式",
          "expandedType": "\"butt\" | \"round\" | \"square\"",
          "resolvedType": "\"butt\" | \"round\" | \"square\"",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IAreaMarkSpec": {
      "description": "面积图元样式配置",
      "typescriptCode": "interface IAreaMarkSpec {\n  /** 填充色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n}",
      "properties": [
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fillOpacity",
          "type": "number",
          "required": false,
          "description": "填充透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "边框透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IMultiLabelSpec": {
      "description": "多标签配置",
      "typescriptCode": "interface IMultiLabelSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\" | \"inside-middle\";\n  /** 偏移距离 */\n  offset?: number;\n  /** 文本样式 */\n  style?: { [key: string]: any };\n  /** 智能反色 */\n  smartInvert?: boolean;\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\" | \"inside-middle\"",
          "required": false,
          "description": "标签位置",
          "expandedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\" | \"inside-middle\"",
          "resolvedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\" | \"inside-middle\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "offset",
          "type": "number",
          "required": false,
          "description": "偏移距离",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "ITextMarkSpec",
          "required": false,
          "description": "文本样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITextMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITextMarkSpec"
          ]
        },
        {
          "name": "smartInvert",
          "type": "boolean",
          "required": false,
          "description": "智能反色",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ILabelSpec": {
      "description": "标签配置",
      "typescriptCode": "interface ILabelSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n  /** 文本样式 */\n  style?: { [key: string]: any };\n  /** 格式化函数 */\n  formatter?: string | { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "required": false,
          "description": "标签位置",
          "expandedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "resolvedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "offset",
          "type": "number",
          "required": false,
          "description": "偏移距离",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "ITextMarkSpec",
          "required": false,
          "description": "文本样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITextMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITextMarkSpec"
          ]
        },
        {
          "name": "formatter",
          "type": "string | ((value: any) => string)",
          "required": false,
          "description": "格式化函数",
          "expandedType": "string | { [key: string]: any }",
          "resolvedType": "string | ((value: any) => string)",
          "isSimple": false,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IDataType": {
      "description": "数据类型配置",
      "typescriptCode": "interface IDataType {\n  /** 数据集ID */\n  id?: { [key: string]: any };\n  /** 数据值 */\n  values?: any[];\n  /** 数据变换 */\n  transforms?: { [key: string]: any }[];\n}",
      "properties": [
        {
          "name": "id",
          "type": "StringOrNumber",
          "required": false,
          "description": "数据集ID",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "string | number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "values",
          "type": "any[]",
          "required": false,
          "description": "数据值",
          "expandedType": "any[]",
          "resolvedType": "any[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "transforms",
          "type": "IDataTransform[]",
          "required": false,
          "description": "数据变换",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "IDataTransform[]",
          "isSimple": false,
          "dependencies": [
            "IDataTransform"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ITotalLabelSpec": {
      "description": "汇总标签配置",
      "typescriptCode": "interface ITotalLabelSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"middle\" | \"bottom\";\n  /** 文本样式 */\n  style?: { [key: string]: any };\n  /** 格式化函数 */\n  formatter?: string | { [key: string]: any };\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"top\" | \"middle\" | \"bottom\"",
          "required": false,
          "description": "标签位置",
          "expandedType": "\"top\" | \"middle\" | \"bottom\"",
          "resolvedType": "\"top\" | \"middle\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "ITextMarkSpec",
          "required": false,
          "description": "文本样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITextMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITextMarkSpec"
          ]
        },
        {
          "name": "formatter",
          "type": "string | ((value: any) => string)",
          "required": false,
          "description": "格式化函数",
          "expandedType": "string | { [key: string]: any }",
          "resolvedType": "string | ((value: any) => string)",
          "isSimple": false,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IMorphSeriesSpec": {
      "description": "变形动画配置",
      "typescriptCode": "interface IMorphSeriesSpec {\n  /** 是否启用 */\n  enable?: boolean;\n  /** 变形关键字段 */\n  morphKey?: string;\n  /** 变形元素关键字段 */\n  morphElementKey?: string;\n}",
      "properties": [
        {
          "name": "enable",
          "type": "boolean",
          "required": false,
          "description": "是否启用",
          "defaultValue": "false",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "morphKey",
          "type": "string",
          "required": false,
          "description": "变形关键字段",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "morphElementKey",
          "type": "string",
          "required": false,
          "description": "变形元素关键字段",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ISeriesTooltipSpec": {
      "description": "系列提示框配置",
      "typescriptCode": "interface ISeriesTooltipSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 提示框样式 */\n  mark?: { [key: string]: any };\n  /** 内容配置 */\n  content?: { [key: string]: any }[];\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "mark",
          "type": "ITooltipMarkSpec",
          "required": false,
          "description": "提示框样式",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "ITooltipMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ITooltipMarkSpec"
          ]
        },
        {
          "name": "content",
          "type": "ITooltipContentSpec[]",
          "required": false,
          "description": "内容配置",
          "expandedType": "{ [key: string]: any }[]",
          "resolvedType": "ITooltipContentSpec[]",
          "isSimple": false,
          "dependencies": [
            "ITooltipContentSpec"
          ]
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IHoverSpec": {
      "description": "悬停交互配置",
      "typescriptCode": "interface IHoverSpec {\n  /** 是否启用 */\n  enable?: boolean;\n  /** 悬停时模糊其他元素 */\n  blurOthersOnHover?: boolean;\n  /** 禁用激活状态 */\n  disableActiveState?: boolean;\n}",
      "properties": [
        {
          "name": "enable",
          "type": "boolean",
          "required": false,
          "description": "是否启用",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "blurOthersOnHover",
          "type": "boolean",
          "required": false,
          "description": "悬停时模糊其他元素",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "disableActiveState",
          "type": "boolean",
          "required": false,
          "description": "禁用激活状态",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "ISelectSpec": {
      "description": "选择交互配置",
      "typescriptCode": "interface ISelectSpec {\n  /** 是否启用 */\n  enable?: boolean;\n  /** 选择模式 */\n  mode?: \"single\" | \"multiple\";\n  /** 反向选择 */\n  reverseSelect?: boolean;\n}",
      "properties": [
        {
          "name": "enable",
          "type": "boolean",
          "required": false,
          "description": "是否启用",
          "defaultValue": "true",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "mode",
          "type": "\"single\" | \"multiple\"",
          "required": false,
          "description": "选择模式",
          "expandedType": "\"single\" | \"multiple\"",
          "resolvedType": "\"single\" | \"multiple\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "reverseSelect",
          "type": "boolean",
          "required": false,
          "description": "反向选择",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IInteractionItemSpec": {
      "description": "交互项配置",
      "typescriptCode": "interface IInteractionItemSpec {\n  /** 交互类型 */\n  type: string;\n  /** 交互配置 */\n  config?: any;\n}",
      "properties": [
        {
          "name": "type",
          "type": "string",
          "required": true,
          "description": "交互类型",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "config",
          "type": "any",
          "required": false,
          "description": "交互配置",
          "expandedType": "any",
          "resolvedType": "any",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "IStateAnimateSpec": {
      "description": "状态动画配置",
      "typescriptCode": "interface IStateAnimateSpec {\n  /** 动画时长 */\n  duration?: number;\n  /** 缓动函数 */\n  easing?: string;\n  /** 延迟时间 */\n  delay?: number;\n}",
      "properties": [
        {
          "name": "duration",
          "type": "number",
          "required": false,
          "description": "动画时长",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "easing",
          "type": "string",
          "required": false,
          "description": "缓动函数",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "delay",
          "type": "number",
          "required": false,
          "description": "延迟时间",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "AreaAppearPreset": {
      "description": "AreaAppearPreset 接口配置",
      "typescriptCode": "interface AreaAppearPreset {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "IMarkAnimateSpec": {
      "description": "图元动画配置",
      "typescriptCode": "interface IMarkAnimateSpec {\n  /** 动画时长 */\n  duration?: number;\n  /** 缓动函数 */\n  easing?: string;\n  /** 延迟时间 */\n  delay?: number;\n  /** 是否循环 */\n  loop?: boolean;\n}",
      "properties": [
        {
          "name": "duration",
          "type": "number",
          "required": false,
          "description": "动画时长",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "easing",
          "type": "string",
          "required": false,
          "description": "缓动函数",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "delay",
          "type": "number",
          "required": false,
          "description": "延迟时间",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "loop",
          "type": "boolean",
          "required": false,
          "description": "是否循环",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    },
    "AreaMarks": {
      "description": "AreaMarks 接口配置",
      "typescriptCode": "interface AreaMarks {\n  [key: string]: any;\n}",
      "properties": [],
      "note": "此类型定义需要从源码中进一步解析",
      "usageNote": "使用通用对象类型，具体属性需要根据实际需求定义"
    },
    "ICommonStateAnimateSpec": {
      "description": "通用状态动画配置",
      "typescriptCode": "interface ICommonStateAnimateSpec {\n  /** 动画时长 */\n  duration?: number;\n  /** 缓动函数 */\n  easing?: string;\n  /** 延迟时间 */\n  delay?: number;\n}",
      "properties": [
        {
          "name": "duration",
          "type": "number",
          "required": false,
          "description": "动画时长",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "easing",
          "type": "string",
          "required": false,
          "description": "缓动函数",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "delay",
          "type": "number",
          "required": false,
          "description": "延迟时间",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "usageNote": "可以直接使用 typescriptCode 中的接口定义进行代码生成"
    }
  },
  "summary": {
    "coreInterfaces": [
      "IAreaChartSpec",
      "ICartesianChartSpec",
      "IChartSpec"
    ],
    "seriesInterfaces": [
      "IAreaSeriesSpec",
      "ICartesianSeriesSpec",
      "ISeriesSpec",
      "IInteractionSpec"
    ],
    "enhancementInterfaces": [
      "IAnimationSpec<AreaMarks, AreaAppearPreset>",
      "IMarkProgressiveConfig",
      "IDataSamping",
      "IMarkOverlap"
    ],
    "typeAnalysis": {
      "simpleTypeRatio": "48%",
      "complexTypeRatio": "52%",
      "mostDependedTypes": [
        {
          "type": "IMarkAnimateSpec",
          "usageCount": 4
        },
        {
          "type": "AreaMarks",
          "usageCount": 4
        },
        {
          "type": "IMarkSpec",
          "usageCount": 3
        },
        {
          "type": "ICommonStateAnimateSpec",
          "usageCount": 3
        },
        {
          "type": "IVisualSpecScale",
          "usageCount": 2
        }
      ],
      "totalComplexTypesWithDefinitions": 42
    }
  },
  "codeGenerationGuide": {
    "purpose": "此配置专为大模型生成 VChart 面积图代码而设计",
    "usage": {
      "simpleTypes": "可直接使用的基础类型，无需额外定义",
      "complexTypes": "需要参考 complexTypeDefinitions 中的详细定义",
      "dependencies": "每个属性的 dependencies 数组列出了所需的复杂类型",
      "inheritance": "通过 inheritanceTree 了解接口继承关系"
    },
    "recommendations": [
      "优先使用简单类型属性，降低代码复杂度",
      "复杂类型属性需要参考对应的类型定义",
      "根据功能需求选择合适的 category 分类下的属性",
      "注意版本兼容性，检查 since 字段标注的版本要求"
    ]
  }
}