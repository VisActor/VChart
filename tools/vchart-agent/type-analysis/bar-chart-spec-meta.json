{
  "typeName": "IBarChartSpec",
  "description": "柱状图图表配置规范的完整实现分析",
  "inheritanceTree": {
    "IBarChartSpec": {
      "description": "柱状图图表规范，扩展了笛卡尔坐标系图表和柱状系列配置",
      "directExtends": [
        "ICartesianChartSpec",
        "IChartExtendsSeriesSpec<IBarSeriesSpec>"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "图表类型，柱状图固定为 \"bar\"",
          "type": "\"bar\"",
          "originalType": "\"bar\"",
          "required": true,
          "category": "基础标识",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "series",
          "description": "系列配置数组，定义柱状图的系列",
          "type": "IBarSeriesSpec[]",
          "originalType": "IBarSeriesSpec[]",
          "required": false,
          "category": "系列配置",
          "isSimple": false,
          "dependencies": [
            "IBarSeriesSpec"
          ]
        },
        {
          "name": "autoBandSize",
          "description": "是否开启自动 bandSize。如果开启，会根据传入的 barWidth 等配置自动计算 bandSize",
          "type": "boolean | { extend: number }",
          "originalType": "boolean | { extend: number }",
          "required": false,
          "category": "布局优化",
          "isSimple": false,
          "dependencies": [
            "{ extend: number }"
          ],
          "since": "1.10.0"
        }
      ]
    },
    "ICartesianChartSpec": {
      "description": "笛卡尔坐标系图表配置规范，扩展了基础图表配置",
      "directExtends": [
        "IChartSpec"
      ],
      "ownProperties": [
        {
          "name": "direction",
          "description": "图表的方向配置。vertical: 垂直布局，horizontal: 水平布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "布局方向",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "axes",
          "description": "笛卡尔坐标系的坐标轴配置",
          "type": "ICartesianAxisSpec[]",
          "originalType": "ICartesianAxisSpec[]",
          "required": false,
          "category": "坐标系统",
          "isSimple": false,
          "dependencies": [
            "ICartesianAxisSpec"
          ]
        },
        {
          "name": "crosshair",
          "description": "十字辅助线配置",
          "type": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "originalType": "ICartesianCrosshairSpec | ICartesianCrosshairSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "ICartesianCrosshairSpec"
          ]
        },
        {
          "name": "markLine",
          "description": "参考线配置",
          "type": "IMarkLineSpec | IMarkLineSpec[]",
          "originalType": "IMarkLineSpec | IMarkLineSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkLineSpec"
          ]
        },
        {
          "name": "markArea",
          "description": "参考区域配置",
          "type": "IMarkAreaSpec | IMarkAreaSpec[]",
          "originalType": "IMarkAreaSpec | IMarkAreaSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkAreaSpec"
          ]
        },
        {
          "name": "markPoint",
          "description": "参考点配置",
          "type": "IMarkPointSpec | IMarkPointSpec[]",
          "originalType": "IMarkPointSpec | IMarkPointSpec[]",
          "required": false,
          "category": "辅助元素",
          "isSimple": false,
          "dependencies": [
            "IMarkPointSpec"
          ]
        }
      ]
    },
    "IChartSpec": {
      "description": "图表基础配置规范，包含图表的核心功能配置",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "data",
          "description": "图表数据配置",
          "type": "IData",
          "originalType": "IData",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IData"
          ]
        },
        {
          "name": "width",
          "description": "画布宽度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "height",
          "description": "画布高度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "autoFit",
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "画布尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "padding",
          "description": "图表整体 padding 设置",
          "type": "ILayoutPaddingSpec",
          "originalType": "ILayoutPaddingSpec",
          "required": false,
          "category": "布局设置",
          "isSimple": false,
          "dependencies": [
            "ILayoutPaddingSpec"
          ]
        },
        {
          "name": "title",
          "description": "图表标题配置",
          "type": "ITitleSpec",
          "originalType": "ITitleSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITitleSpec"
          ]
        },
        {
          "name": "legends",
          "description": "图例配置",
          "type": "ILegendSpec | ILegendSpec[]",
          "originalType": "ILegendSpec | ILegendSpec[]",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ILegendSpec"
          ]
        },
        {
          "name": "tooltip",
          "description": "tooltip配置",
          "type": "ITooltipSpec",
          "originalType": "ITooltipSpec",
          "required": false,
          "category": "图表组件",
          "isSimple": false,
          "dependencies": [
            "ITooltipSpec"
          ]
        },
        {
          "name": "animation",
          "description": "是否开启动画",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0"
        },
        {
          "name": "stackInverse",
          "description": "堆积时是否逆序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.4.0"
        },
        {
          "name": "stackSort",
          "description": "堆积时是否排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.10.4"
        }
      ]
    },
    "IChartExtendsSeriesSpec<IBarSeriesSpec>": {
      "description": "IBarSeriesSpec 的扩展配置，排除了 data, morph, stackValue, tooltip 字段",
      "note": "type IChartExtendsSeriesSpec<T extends ISeriesSpec> = Omit<T, \"data\" | \"morph\" | \"stackValue\" | \"tooltip\">",
      "directExtends": [
        "IBarSeriesSpec (Omit data, morph, stackValue, tooltip)"
      ],
      "ownProperties": []
    },
    "IBarSeriesSpec": {
      "description": "柱状系列配置规范，定义柱状图系列的所有特性",
      "directExtends": [
        "ICartesianSeriesSpec",
        "IAnimationSpec<BarMarks, BarAppearPreset>",
        "IMarkProgressiveConfig",
        "IDataSamping"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "系列类型，柱状系列固定为 \"bar\"",
          "type": "\"bar\"",
          "originalType": "\"bar\"",
          "required": true,
          "category": "系列标识",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "yField",
          "description": "y轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "bar",
          "description": "柱体图元配置",
          "type": "IMarkSpec<IRectMarkSpec>",
          "originalType": "IMarkSpec<IRectMarkSpec>",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "IRectMarkSpec"
          ]
        },
        {
          "name": "barBackground",
          "description": "柱状背景图元配置",
          "type": "IMarkSpec<IRectMarkSpec> & IBarBackgroundSpec",
          "originalType": "IMarkSpec<IRectMarkSpec> & IBarBackgroundSpec",
          "required": false,
          "category": "图元样式",
          "isSimple": false,
          "dependencies": [
            "IMarkSpec",
            "IRectMarkSpec",
            "IBarBackgroundSpec"
          ],
          "since": "1.6.0"
        },
        {
          "name": "label",
          "description": "标签配置，支持柱图特有的位置配置",
          "type": "IMultiLabelSpec",
          "originalType": "IMultiLabelSpec",
          "required": false,
          "category": "标签配置",
          "isSimple": false,
          "dependencies": [
            "IMultiLabelSpec"
          ]
        },
        {
          "name": "barWidth",
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比",
          "type": "number | string",
          "originalType": "number | string",
          "required": false,
          "category": "柱体尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "barMinWidth",
          "description": "柱体最小宽度",
          "type": "number | string",
          "originalType": "number | string",
          "required": false,
          "category": "柱体尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "barMaxWidth",
          "description": "柱体最大宽度",
          "type": "number | string",
          "originalType": "number | string",
          "required": false,
          "category": "柱体尺寸",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "barMinHeight",
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "柱体尺寸",
          "isSimple": true,
          "dependencies": [],
          "since": "1.4.0"
        },
        {
          "name": "barGapInGroup",
          "description": "分组柱图中各个分组内的柱子间距",
          "type": "number | string | (number | string)[]",
          "originalType": "number | string | (number | string)[]",
          "required": false,
          "category": "柱体间距",
          "isSimple": false,
          "dependencies": [
            "(number",
            "string)"
          ],
          "since": "1.2.0"
        },
        {
          "name": "barGap",
          "description": "柱条间 gap 值",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "柱体间距",
          "isSimple": true,
          "dependencies": [],
          "since": "1.13.11"
        },
        {
          "name": "stackCornerRadius",
          "description": "堆叠柱整体的圆角，支持回调配置",
          "type": "number | number[] | IStackCornerRadiusCallback",
          "originalType": "number | number[] | IStackCornerRadiusCallback",
          "required": false,
          "category": "堆叠样式",
          "isSimple": false,
          "dependencies": [
            "IStackCornerRadiusCallback"
          ],
          "since": "1.10.0"
        }
      ]
    },
    "ICartesianSeriesSpec": {
      "description": "笛卡尔坐标系系列配置规范",
      "directExtends": [
        "ISeriesSpec"
      ],
      "ownProperties": [
        {
          "name": "direction",
          "description": "布局方向，row表示按行布局，col表示按列布局",
          "type": "\"vertical\" | \"horizontal\"",
          "originalType": "DirectionType",
          "required": false,
          "category": "坐标系统",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "xField",
          "description": "x轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "x2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "yField",
          "description": "y轴字段",
          "type": "string | string[]",
          "originalType": "string | string[]",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "y2Field",
          "description": "用于区间数据，声明区间末尾的数据字段",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "数据映射",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "sortDataByAxis",
          "description": "是否将数据按照数轴排序",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "false",
          "since": "1.3.0"
        }
      ]
    },
    "ISeriesSpec": {
      "description": "系列基础配置规范，定义所有系列通用的配置",
      "directExtends": [
        "IInteractionSpec"
      ],
      "ownProperties": [
        {
          "name": "type",
          "description": "系列类型",
          "type": "\"line\" | \"area\" | \"bar\" | \"scatter\" | \"pie\" | \"radar\" | \"sankey\" | \"treemap\" | \"sunburst\" | \"gauge\" | \"waterfall\" | \"box\" | \"histogram\" | \"rose\" | \"circularProgress\" | \"linearProgress\" | \"funnel\" | \"map\" | \"wordCloud\" | \"correlation\" | \"heatmap\" | \"liquidFill\" | \"mosaic\" | \"dot\" | \"range-column\"",
          "originalType": "SeriesType",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "name",
          "description": "系列名称",
          "type": "string",
          "originalType": "string",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "id",
          "description": "用户自定义的 series id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "系列标识",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "data",
          "description": "系列数据，系列可以配置自身的数据，也可以从chart.data中获取数据",
          "type": "IDataType",
          "originalType": "IDataType",
          "required": false,
          "category": "数据源",
          "isSimple": false,
          "dependencies": [
            "IDataType"
          ]
        },
        {
          "name": "dataIndex",
          "description": "系列关联的数据索引",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "0"
        },
        {
          "name": "dataId",
          "description": "系列关联的数据id",
          "type": "string | number",
          "originalType": "StringOrNumber",
          "required": false,
          "category": "数据关联",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stack",
          "description": "是否对数据进行堆叠处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "percent",
          "description": "是否对数据进行百分比处理",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "invalidType",
          "description": "非合规数据点连接方式",
          "type": "\"break\" | \"link\" | \"zero\" | \"ignore\"",
          "originalType": "IInvalidType",
          "required": false,
          "category": "数据处理",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "\"break\""
        },
        {
          "name": "animation",
          "description": "是否开启系列动画",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "animationThreshold",
          "description": "自动关闭动画的阀值",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "动画控制",
          "isSimple": true,
          "dependencies": [],
          "since": "1.2.0"
        }
      ]
    },
    "IInteractionSpec": {
      "description": "交互配置规范，定义系列的交互行为",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "hover",
          "description": "hover交互配置",
          "type": "IHoverSpec | boolean",
          "originalType": "IHoverSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "IHoverSpec"
          ]
        },
        {
          "name": "select",
          "description": "选中交互配置",
          "type": "ISelectSpec | boolean",
          "originalType": "ISelectSpec | boolean",
          "required": false,
          "category": "交互行为",
          "isSimple": false,
          "dependencies": [
            "ISelectSpec"
          ]
        }
      ]
    },
    "IAnimationSpec<BarMarks, BarAppearPreset>": {
      "description": "柱状图动画配置规范，支持 bar 图元的动画",
      "note": "BarMarks = \"bar\", BarAppearPreset = \"grow\" | \"fadeIn\" | \"scaleIn\"",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "animationAppear",
          "description": "图表入场动画，支持配置图表内置不同动画效果",
          "type": "boolean | IStateAnimateSpec<BarAppearPreset> | IMarkAnimateSpec<BarMarks>",
          "originalType": "boolean | IStateAnimateSpec<BarAppearPreset> | IMarkAnimateSpec<BarMarks>",
          "required": false,
          "category": "入场动画",
          "isSimple": false,
          "dependencies": [
            "IStateAnimateSpec",
            "IMarkAnimateSpec"
          ]
        },
        {
          "name": "animationEnter",
          "description": "数据更新 - 新增数据动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec"
          ]
        },
        {
          "name": "animationUpdate",
          "description": "数据更新 - 数据更新动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec"
          ]
        },
        {
          "name": "animationExit",
          "description": "数据更新 - 数据删除动画",
          "type": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "originalType": "boolean | ICommonStateAnimateSpec | IMarkAnimateSpec<BarMarks>",
          "required": false,
          "category": "数据动画",
          "isSimple": false,
          "dependencies": [
            "ICommonStateAnimateSpec",
            "IMarkAnimateSpec"
          ]
        }
      ]
    },
    "IMarkProgressiveConfig": {
      "description": "图元渐进式渲染配置，用于大数据场景的渲染优化",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "large",
          "description": "是否开启大数据渲染模式",
          "type": "boolean",
          "originalType": "boolean",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "largeThreshold",
          "description": "开启大数据渲染优化的阀值",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "大数据渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "progressiveStep",
          "description": "分片长度",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "progressiveThreshold",
          "description": "开启分片渲染的阀值",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "渐进渲染",
          "isSimple": true,
          "dependencies": []
        }
      ]
    },
    "IDataSamping": {
      "description": "数据采样配置，用于大数据场景的数据优化",
      "directExtends": [],
      "ownProperties": [
        {
          "name": "sampling",
          "description": "数据采样 - 采样方法",
          "type": "\"lttb\" | \"max\" | \"min\" | \"average\" | \"sum\"",
          "originalType": "ISamplingMethod",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "since": "1.6.0"
        },
        {
          "name": "samplingFactor",
          "description": "数据采样 - 采样系数",
          "type": "number",
          "originalType": "number",
          "required": false,
          "category": "数据采样",
          "isSimple": true,
          "dependencies": [],
          "defaultValue": "1",
          "since": "1.6.0"
        }
      ]
    }
  },
  "timestamp": "2025-08-04T03:20:18.005Z",
  "version": "1.0.0",
  "complexTypeDefinitions": {
    "ICartesianCrosshairSpec": {
      "description": "笛卡尔坐标系十字辅助线配置",
      "typescriptCode": "interface ICartesianCrosshairSpec {\n  /** 是否和tooltip保持同步 */\n  followTooltip?: boolean | Partial<ITooltipActiveTypeAsKeys<boolean, boolean, boolean>>;\n  /** 触发方式 */\n  trigger?: {\n  /** 触发方式 */\n  trigger: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n};\n  /** 隐藏crosshair的触发方式 */\n  triggerOff?: {\n  /** 触发方式 */\n  trigger: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n} | { [key: string]: any } | number;\n  /** 点击后锁定 */\n  lockAfterClick?: boolean;\n  /** crosshair 文本的显示层级 */\n  labelZIndex?: number;\n  /** crosshair 辅助图形的显示层级 */\n  gridZIndex?: number;\n  /** 笛卡尔坐标系下 x 轴上 crosshair 配置 */\n  xField?: {\n  /** 声明 crosshair 绑定的轴索引 */\n  bindingAxesIndex?: number[];\n  /** crosshair 初始化显示信息 */\n  defaultSelect?: {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n};\n  /** 是否可见 */\n  visible: boolean;\n  /** crosshair 辅助图形配置 */\n  line?: {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">;\n  /** crosshair 文本配置 */\n  label?: {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n};\n};\n  /** 笛卡尔坐标系下 y 轴上 crosshair 配置 */\n  yField?: {\n  /** 声明 crosshair 绑定的轴索引 */\n  bindingAxesIndex?: number[];\n  /** crosshair 初始化显示信息 */\n  defaultSelect?: {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n};\n  /** 是否可见 */\n  visible: boolean;\n  /** crosshair 辅助图形配置 */\n  line?: {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">;\n  /** crosshair 文本配置 */\n  label?: {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n};\n};\n}",
      "properties": [
        {
          "name": "followTooltip",
          "type": "boolean | Partial<ITooltipActiveTypeAsKeys<boolean, boolean, boolean>>",
          "required": false,
          "description": "是否和tooltip保持同步",
          "expandedType": "boolean | Partial<ITooltipActiveTypeAsKeys<boolean, boolean, boolean>>",
          "resolvedType": "boolean | Partial<ITooltipActiveTypeAsKeys<boolean, boolean, boolean>>",
          "isSimple": false,
          "dependencies": [
            "Partial",
            "ITooltipActiveTypeAsKeys"
          ]
        },
        {
          "name": "trigger",
          "type": "CrossHairTrigger",
          "required": false,
          "description": "触发方式",
          "expandedType": "{\n  /** 触发方式 */\n  trigger: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n}",
          "resolvedType": "CrossHairTrigger",
          "isSimple": false,
          "dependencies": [
            "CrossHairTrigger"
          ]
        },
        {
          "name": "triggerOff",
          "type": "CrossHairTrigger | \"none\" | number",
          "required": false,
          "description": "隐藏crosshair的触发方式",
          "expandedType": "{\n  /** 触发方式 */\n  trigger: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n} | { [key: string]: any } | number",
          "resolvedType": "CrossHairTrigger | \"none\" | number",
          "isSimple": false,
          "dependencies": [
            "CrossHairTrigger"
          ]
        },
        {
          "name": "lockAfterClick",
          "type": "boolean",
          "required": false,
          "description": "点击后锁定",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "labelZIndex",
          "type": "number",
          "required": false,
          "description": "crosshair 文本的显示层级",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "gridZIndex",
          "type": "number",
          "required": false,
          "description": "crosshair 辅助图形的显示层级",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "xField",
          "type": "ICrosshairCategoryFieldSpec",
          "required": false,
          "description": "笛卡尔坐标系下 x 轴上 crosshair 配置",
          "expandedType": "{\n  /** 声明 crosshair 绑定的轴索引 */\n  bindingAxesIndex?: number[];\n  /** crosshair 初始化显示信息 */\n  defaultSelect?: {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n};\n  /** 是否可见 */\n  visible: boolean;\n  /** crosshair 辅助图形配置 */\n  line?: {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">;\n  /** crosshair 文本配置 */\n  label?: {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n};\n}",
          "resolvedType": "ICrosshairCategoryFieldSpec",
          "isSimple": false,
          "dependencies": [
            "ICrosshairCategoryFieldSpec"
          ]
        },
        {
          "name": "yField",
          "type": "ICrosshairCategoryFieldSpec",
          "required": false,
          "description": "笛卡尔坐标系下 y 轴上 crosshair 配置",
          "expandedType": "{\n  /** 声明 crosshair 绑定的轴索引 */\n  bindingAxesIndex?: number[];\n  /** crosshair 初始化显示信息 */\n  defaultSelect?: {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n};\n  /** 是否可见 */\n  visible: boolean;\n  /** crosshair 辅助图形配置 */\n  line?: {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">;\n  /** crosshair 文本配置 */\n  label?: {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n};\n}",
          "resolvedType": "ICrosshairCategoryFieldSpec",
          "isSimple": false,
          "dependencies": [
            "ICrosshairCategoryFieldSpec"
          ]
        }
      ],
      "note": "包含 8 个属性，类型已完全展开",
      "usageNote": "ICartesianCrosshairSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "CrossHairTrigger": {
      "description": "crosshair 触发方式",
      "typescriptCode": "interface CrossHairTrigger {\n  /** 触发方式 */\n  trigger: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n}",
      "properties": [
        {
          "name": "trigger",
          "type": "\"click\" | \"hover\" | [\"click\", \"hover\"]",
          "required": true,
          "description": "触发方式",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }",
          "resolvedType": "\"click\" | \"hover\" | [\"click\", \"hover\"]",
          "isSimple": false,
          "dependencies": [
            "[\"click\", \"hover\"]"
          ]
        }
      ],
      "note": "包含 1 个属性，类型已完全展开",
      "usageNote": "CrossHairTrigger 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairCategoryFieldSpec": {
      "description": "crosshair 分类字段配置",
      "typescriptCode": "interface ICrosshairCategoryFieldSpec {\n  /** 声明 crosshair 绑定的轴索引 */\n  bindingAxesIndex?: number[];\n  /** crosshair 初始化显示信息 */\n  defaultSelect?: {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n};\n  /** 是否可见 */\n  visible: boolean;\n  /** crosshair 辅助图形配置 */\n  line?: {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">;\n  /** crosshair 文本配置 */\n  label?: {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n};\n}",
      "properties": [
        {
          "name": "bindingAxesIndex",
          "type": "number[]",
          "required": false,
          "description": "声明 crosshair 绑定的轴索引",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "defaultSelect",
          "type": "ICrosshairDefaultSelect",
          "required": false,
          "description": "crosshair 初始化显示信息",
          "expandedType": "{\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n}",
          "resolvedType": "ICrosshairDefaultSelect",
          "isSimple": false,
          "dependencies": [
            "ICrosshairDefaultSelect"
          ]
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": true,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "line",
          "type": "ICrosshairLineSpec | Omit<ICrosshairRectSpec, \"width\">",
          "required": false,
          "description": "crosshair 辅助图形配置",
          "expandedType": "{\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n} | Omit<ICrosshairRectSpec, \"width\">",
          "resolvedType": "ICrosshairLineSpec | Omit<ICrosshairRectSpec, \"width\">",
          "isSimple": false,
          "dependencies": [
            "ICrosshairLineSpec",
            "Omit",
            "ICrosshairRectSpec"
          ]
        },
        {
          "name": "label",
          "type": "ICrosshairLabelSpec",
          "required": false,
          "description": "crosshair 文本配置",
          "expandedType": "{\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n}",
          "resolvedType": "ICrosshairLabelSpec",
          "isSimple": false,
          "dependencies": [
            "ICrosshairLabelSpec"
          ]
        }
      ],
      "note": "包含 5 个属性，类型已完全展开",
      "usageNote": "ICrosshairCategoryFieldSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairDefaultSelect": {
      "description": "crosshair 默认选择配置",
      "typescriptCode": "interface ICrosshairDefaultSelect {\n  /** 声明要显示数据的轴索引 */\n  axisIndex: number;\n  /** 声明显示的数据 */\n  datum: string | number;\n}",
      "properties": [
        {
          "name": "axisIndex",
          "type": "number",
          "required": true,
          "description": "声明要显示数据的轴索引",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "datum",
          "type": "StringOrNumber",
          "required": true,
          "description": "声明显示的数据",
          "expandedType": "string | number",
          "resolvedType": "StringOrNumber",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 2 个属性，类型已完全展开",
      "usageNote": "ICrosshairDefaultSelect 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairLineSpec": {
      "description": "crosshair 线条配置",
      "typescriptCode": "interface ICrosshairLineSpec {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为line */\n  type?: { [key: string]: any };\n  /** 线宽 */\n  width?: number;\n  /** 极坐标系下是否平滑 */\n  smooth?: boolean;\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n};\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示辅助图形",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "type",
          "type": "\"line\"",
          "required": false,
          "description": "辅助图形的类型设置为line",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "\"line\"",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "width",
          "type": "number",
          "required": false,
          "description": "线宽",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "smooth",
          "type": "boolean",
          "required": false,
          "description": "极坐标系下是否平滑",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "ICrosshairLineStyle",
          "required": false,
          "description": "辅助图形的样式配置",
          "expandedType": "{\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n}",
          "resolvedType": "ICrosshairLineStyle",
          "isSimple": false,
          "dependencies": [
            "ICrosshairLineStyle"
          ]
        }
      ],
      "note": "包含 5 个属性，类型已完全展开",
      "usageNote": "ICrosshairLineSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairRectSpec": {
      "description": "crosshair 矩形配置",
      "typescriptCode": "interface ICrosshairRectSpec {\n  /** 是否显示辅助图形 */\n  visible?: boolean;\n  /** 辅助图形的类型设置为rect */\n  type?: { [key: string]: any };\n  /** 矩形宽度 */\n  width?: number | string | { [key: string]: any };\n  /** 辅助图形的样式配置 */\n  style?: {\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 边框虚线配置 */\n  lineDash?: number[];\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 圆角半径 */\n  cornerRadius?: number | number[];\n};\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示辅助图形",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "type",
          "type": "\"rect\"",
          "required": false,
          "description": "辅助图形的类型设置为rect",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "\"rect\"",
          "isSimple": false,
          "dependencies": []
        },
        {
          "name": "width",
          "type": "number | string | ICrosshairRectWidthCallback",
          "required": false,
          "description": "矩形宽度",
          "expandedType": "number | string | { [key: string]: any }",
          "resolvedType": "number | string | ICrosshairRectWidthCallback",
          "isSimple": false,
          "dependencies": [
            "ICrosshairRectWidthCallback"
          ]
        },
        {
          "name": "style",
          "type": "ICrosshairRectStyle",
          "required": false,
          "description": "辅助图形的样式配置",
          "expandedType": "{\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 边框虚线配置 */\n  lineDash?: number[];\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 圆角半径 */\n  cornerRadius?: number | number[];\n}",
          "resolvedType": "ICrosshairRectStyle",
          "isSimple": false,
          "dependencies": [
            "ICrosshairRectStyle"
          ]
        }
      ],
      "note": "包含 4 个属性，类型已完全展开",
      "usageNote": "ICrosshairRectSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairLineStyle": {
      "description": "crosshair 线条样式",
      "typescriptCode": "interface ICrosshairLineStyle {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条宽度 */\n  lineWidth?: number;\n}",
      "properties": [
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "线条颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "线条透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "整体透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineDash",
          "type": "number[]",
          "required": false,
          "description": "虚线配置",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "线条宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 5 个属性，类型已完全展开",
      "usageNote": "ICrosshairLineStyle 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairRectStyle": {
      "description": "crosshair 矩形样式",
      "typescriptCode": "interface ICrosshairRectStyle {\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 边框虚线配置 */\n  lineDash?: number[];\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 圆角半径 */\n  cornerRadius?: number | number[];\n}",
      "properties": [
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "边框透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "整体透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineDash",
          "type": "number[]",
          "required": false,
          "description": "边框虚线配置",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fillOpacity",
          "type": "number",
          "required": false,
          "description": "填充透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "cornerRadius",
          "type": "number | number[]",
          "required": false,
          "description": "圆角半径",
          "expandedType": "number | number[]",
          "resolvedType": "number | number[]",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 8 个属性，类型已完全展开",
      "usageNote": "ICrosshairRectStyle 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairLabelSpec": {
      "description": "crosshair 标签配置",
      "typescriptCode": "interface ICrosshairLabelSpec {\n  /** 十字准星辅助标签是否展示 */\n  visible?: boolean;\n  /** label 文本格式化方法 */\n  formatMethod?: { [key: string]: any } | { [key: string]: any } | string[];\n  /** 格式化模板 */\n  formatter?: string | string[];\n  /** 文本样式配置 */\n  style?: Partial<ITextMarkSpec>;\n  /** 文本背景相关配置 */\n  labelBackground?: {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n};\n  /** 文本是否跟随轴标签的角度旋转 */\n  syncAxisLabelAngle?: boolean;\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "十字准星辅助标签是否展示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "formatMethod",
          "type": "(text: StringOrNumber | string[]) => string | string[]",
          "required": false,
          "description": "label 文本格式化方法",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | string[]",
          "resolvedType": "(text: StringOrNumber | string[]) => string | string[]",
          "isSimple": false,
          "dependencies": [
            "(text: StringOrNumber",
            "string[]) => string"
          ]
        },
        {
          "name": "formatter",
          "type": "string | string[]",
          "required": false,
          "description": "格式化模板",
          "expandedType": "string | string[]",
          "resolvedType": "string | string[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "style",
          "type": "Partial<ITextMarkSpec>",
          "required": false,
          "description": "文本样式配置",
          "expandedType": "Partial<ITextMarkSpec>",
          "resolvedType": "Partial<ITextMarkSpec>",
          "isSimple": false,
          "dependencies": [
            "Partial",
            "ITextMarkSpec"
          ]
        },
        {
          "name": "labelBackground",
          "type": "ICrosshairLabelBackgroundSpec",
          "required": false,
          "description": "文本背景相关配置",
          "expandedType": "{\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n}",
          "resolvedType": "ICrosshairLabelBackgroundSpec",
          "isSimple": false,
          "dependencies": [
            "ICrosshairLabelBackgroundSpec"
          ]
        },
        {
          "name": "syncAxisLabelAngle",
          "type": "boolean",
          "required": false,
          "description": "文本是否跟随轴标签的角度旋转",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 6 个属性，类型已完全展开",
      "usageNote": "ICrosshairLabelSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICrosshairLabelBackgroundSpec": {
      "description": "crosshair 标签背景配置",
      "typescriptCode": "interface ICrosshairLabelBackgroundSpec {\n  /** 是否显示背景 */\n  visible?: boolean;\n  /** 最小宽度，像素值 */\n  minWidth?: number;\n  /** 最大宽度，像素值 */\n  maxWidth?: number;\n  /** 内部边距 */\n  padding?: { [key: string]: any } | number | number[];\n  /** 标签背景的样式配置 */\n  style?: Partial<IRectMarkSpec>;\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示背景",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "minWidth",
          "type": "number",
          "required": false,
          "description": "最小宽度，像素值",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "maxWidth",
          "type": "number",
          "required": false,
          "description": "最大宽度，像素值",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "padding",
          "type": "IPadding | number | number[]",
          "required": false,
          "description": "内部边距",
          "expandedType": "{ [key: string]: any } | number | number[]",
          "resolvedType": "IPadding | number | number[]",
          "isSimple": false,
          "dependencies": [
            "IPadding"
          ]
        },
        {
          "name": "style",
          "type": "Partial<IRectMarkSpec>",
          "required": false,
          "description": "标签背景的样式配置",
          "expandedType": "Partial<IRectMarkSpec>",
          "resolvedType": "Partial<IRectMarkSpec>",
          "isSimple": false,
          "dependencies": [
            "Partial",
            "IRectMarkSpec"
          ]
        }
      ],
      "note": "包含 5 个属性，类型已完全展开",
      "usageNote": "ICrosshairLabelBackgroundSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ITextMarkSpec": {
      "description": "文本图元样式配置",
      "typescriptCode": "interface ITextMarkSpec {\n  /** 字体大小 */\n  fontSize?: number;\n  /** 字体系列 */\n  fontFamily?: string;\n  /** 字体粗细 */\n  fontWeight?: string | number;\n  /** 字体样式 */\n  fontStyle?: \"normal\" | \"italic\" | \"oblique\";\n  /** 文本颜色 */\n  fill?: string;\n  /** 文本描边颜色 */\n  stroke?: string;\n  /** 描边宽度 */\n  lineWidth?: number;\n  /** 水平对齐 */\n  textAlign?: \"left\" | \"center\" | \"right\";\n  /** 垂直对齐 */\n  textBaseline?: \"top\" | \"middle\" | \"bottom\";\n  /** 行高 */\n  lineHeight?: number;\n  /** 透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "fontSize",
          "type": "number",
          "required": false,
          "description": "字体大小",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fontFamily",
          "type": "string",
          "required": false,
          "description": "字体系列",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fontWeight",
          "type": "string | number",
          "required": false,
          "description": "字体粗细",
          "expandedType": "string | number",
          "resolvedType": "string | number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fontStyle",
          "type": "\"normal\" | \"italic\" | \"oblique\"",
          "required": false,
          "description": "字体样式",
          "expandedType": "\"normal\" | \"italic\" | \"oblique\"",
          "resolvedType": "\"normal\" | \"italic\" | \"oblique\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "文本颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "文本描边颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "描边宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "textAlign",
          "type": "\"left\" | \"center\" | \"right\"",
          "required": false,
          "description": "水平对齐",
          "expandedType": "\"left\" | \"center\" | \"right\"",
          "resolvedType": "\"left\" | \"center\" | \"right\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "textBaseline",
          "type": "\"top\" | \"middle\" | \"bottom\"",
          "required": false,
          "description": "垂直对齐",
          "expandedType": "\"top\" | \"middle\" | \"bottom\"",
          "resolvedType": "\"top\" | \"middle\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineHeight",
          "type": "number",
          "required": false,
          "description": "行高",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 12 个属性，类型已完全展开",
      "usageNote": "ITextMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMarkLineSpec": {
      "description": "参考线配置",
      "typescriptCode": "interface IMarkLineSpec {\n  /** 参考线坐标点 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 线条样式 */\n  line?: {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 线条宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条端点样式 */\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  /** 线条连接样式 */\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n};\n  /** 标签配置 */\n  label?: {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n};\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "参考线坐标点",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": [
            "{ x?: number",
            "string; y?: number",
            "string }"
          ]
        },
        {
          "name": "line",
          "type": "ILineMarkSpec",
          "required": false,
          "description": "线条样式",
          "expandedType": "{\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 线条宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条端点样式 */\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  /** 线条连接样式 */\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
          "resolvedType": "ILineMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ILineMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IMarkLineSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMarkAreaSpec": {
      "description": "参考区域配置",
      "typescriptCode": "interface IMarkAreaSpec {\n  /** 区域坐标点 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 区域样式 */\n  area?: {\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n};\n  /** 标签配置 */\n  label?: {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n};\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "区域坐标点",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": [
            "{ x?: number",
            "string; y?: number",
            "string }"
          ]
        },
        {
          "name": "area",
          "type": "IAreaMarkSpec",
          "required": false,
          "description": "区域样式",
          "expandedType": "{\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
          "resolvedType": "IAreaMarkSpec",
          "isSimple": false,
          "dependencies": [
            "IAreaMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IMarkAreaSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMarkPointSpec": {
      "description": "参考点配置",
      "typescriptCode": "interface IMarkPointSpec {\n  /** 参考点坐标 */\n  coordinates?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any }[];\n  /** 点样式 */\n  symbol?: {\n  /** 符号类型 */\n  symbolType?: \"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\";\n  /** 符号大小 */\n  size?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n};\n  /** 标签配置 */\n  label?: {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n};\n}",
      "properties": [
        {
          "name": "coordinates",
          "type": "{ x?: number | string; y?: number | string }[]",
          "required": false,
          "description": "参考点坐标",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }[]",
          "resolvedType": "{ x?: number | string; y?: number | string }[]",
          "isSimple": false,
          "dependencies": [
            "{ x?: number",
            "string; y?: number",
            "string }"
          ]
        },
        {
          "name": "symbol",
          "type": "ISymbolMarkSpec",
          "required": false,
          "description": "点样式",
          "expandedType": "{\n  /** 符号类型 */\n  symbolType?: \"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\";\n  /** 符号大小 */\n  size?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
          "resolvedType": "ISymbolMarkSpec",
          "isSimple": false,
          "dependencies": [
            "ISymbolMarkSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "标签配置",
          "expandedType": "{\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IMarkPointSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ICartesianAxisSpec": {
      "description": "笛卡尔坐标轴配置",
      "typescriptCode": "interface ICartesianAxisSpec {\n  /** 坐标轴位置 */\n  orient: \"left\" | \"right\" | \"top\" | \"bottom\";\n  /** 坐标轴类型 */\n  type?: \"linear\" | \"band\" | \"point\" | \"time\" | \"log\";\n  /** 坐标轴数据域 */\n  domain?: { [key: string]: any } | string[];\n  /** 坐标轴像素范围 */\n  range?: { [key: string]: any };\n  /** 坐标轴标题 */\n  title?: {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标题文本 */\n  text?: string;\n  /** 副标题文本 */\n  subtext?: string;\n  /** 对齐方式 */\n  align?: \"left\" | \"center\" | \"right\";\n};\n  /** 坐标轴标签 */\n  label?: {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n};\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "orient",
          "type": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "required": true,
          "description": "坐标轴位置",
          "expandedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "resolvedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "type",
          "type": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "required": false,
          "description": "坐标轴类型",
          "expandedType": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "resolvedType": "\"linear\" | \"band\" | \"point\" | \"time\" | \"log\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "domain",
          "type": "[number, number] | string[]",
          "required": false,
          "description": "坐标轴数据域",
          "expandedType": "{ [key: string]: any } | string[]",
          "resolvedType": "[number, number] | string[]",
          "isSimple": false,
          "dependencies": [
            "[number, number]"
          ]
        },
        {
          "name": "range",
          "type": "[number, number]",
          "required": false,
          "description": "坐标轴像素范围",
          "expandedType": "{ [key: string]: any }",
          "resolvedType": "[number, number]",
          "isSimple": false,
          "dependencies": [
            "[number, number]"
          ]
        },
        {
          "name": "title",
          "type": "ITitleSpec",
          "required": false,
          "description": "坐标轴标题",
          "expandedType": "{\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标题文本 */\n  text?: string;\n  /** 副标题文本 */\n  subtext?: string;\n  /** 对齐方式 */\n  align?: \"left\" | \"center\" | \"right\";\n}",
          "resolvedType": "ITitleSpec",
          "isSimple": false,
          "dependencies": [
            "ITitleSpec"
          ]
        },
        {
          "name": "label",
          "type": "ILabelSpec",
          "required": false,
          "description": "坐标轴标签",
          "expandedType": "{\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n}",
          "resolvedType": "ILabelSpec",
          "isSimple": false,
          "dependencies": [
            "ILabelSpec"
          ]
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 7 个属性，类型已完全展开",
      "usageNote": "ICartesianAxisSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ILineMarkSpec": {
      "description": "线条图元样式配置",
      "typescriptCode": "interface ILineMarkSpec {\n  /** 线条颜色 */\n  stroke?: string;\n  /** 线条透明度 */\n  strokeOpacity?: number;\n  /** 线条宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 线条端点样式 */\n  lineCap?: \"butt\" | \"round\" | \"square\";\n  /** 线条连接样式 */\n  lineJoin?: \"miter\" | \"round\" | \"bevel\";\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "线条颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "线条透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "线条宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineDash",
          "type": "number[]",
          "required": false,
          "description": "虚线配置",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineCap",
          "type": "\"butt\" | \"round\" | \"square\"",
          "required": false,
          "description": "线条端点样式",
          "expandedType": "\"butt\" | \"round\" | \"square\"",
          "resolvedType": "\"butt\" | \"round\" | \"square\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineJoin",
          "type": "\"miter\" | \"round\" | \"bevel\"",
          "required": false,
          "description": "线条连接样式",
          "expandedType": "\"miter\" | \"round\" | \"bevel\"",
          "resolvedType": "\"miter\" | \"round\" | \"bevel\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "整体透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 8 个属性，类型已完全展开",
      "usageNote": "ILineMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IAreaMarkSpec": {
      "description": "区域图元样式配置",
      "typescriptCode": "interface IAreaMarkSpec {\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 虚线配置 */\n  lineDash?: number[];\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fillOpacity",
          "type": "number",
          "required": false,
          "description": "填充透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "边框透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineDash",
          "type": "number[]",
          "required": false,
          "description": "虚线配置",
          "expandedType": "number[]",
          "resolvedType": "number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "整体透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 8 个属性，类型已完全展开",
      "usageNote": "IAreaMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ISymbolMarkSpec": {
      "description": "符号图元样式配置",
      "typescriptCode": "interface ISymbolMarkSpec {\n  /** 符号类型 */\n  symbolType?: \"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\";\n  /** 符号大小 */\n  size?: number;\n  /** 填充颜色 */\n  fill?: string;\n  /** 填充透明度 */\n  fillOpacity?: number;\n  /** 边框颜色 */\n  stroke?: string;\n  /** 边框透明度 */\n  strokeOpacity?: number;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 整体透明度 */\n  opacity?: number;\n  /** 是否可见 */\n  visible?: boolean;\n}",
      "properties": [
        {
          "name": "symbolType",
          "type": "\"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\"",
          "required": false,
          "description": "符号类型",
          "expandedType": "\"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\"",
          "resolvedType": "\"circle\" | \"square\" | \"triangle\" | \"diamond\" | \"cross\" | \"arrow\" | \"wedge\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "size",
          "type": "number",
          "required": false,
          "description": "符号大小",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fillOpacity",
          "type": "number",
          "required": false,
          "description": "填充透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框颜色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "strokeOpacity",
          "type": "number",
          "required": false,
          "description": "边框透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "整体透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 9 个属性，类型已完全展开",
      "usageNote": "ISymbolMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMarkSpec": {
      "description": "通用图元配置规范",
      "typescriptCode": "interface IMarkSpec {\n  /** 是否可见 */\n  visible?: boolean;\n  /** 图层层级 */\n  zIndex?: number;\n  /** 是否可交互 */\n  interactive?: boolean;\n  /** 图元状态样式 */\n  state?: {\n  /** 悬浮状态样式 */\n  hover?: any;\n  /** 选中状态样式 */\n  selected?: any;\n  /** 禁用状态样式 */\n  disabled?: any;\n};\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否可见",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "zIndex",
          "type": "number",
          "required": false,
          "description": "图层层级",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "interactive",
          "type": "boolean",
          "required": false,
          "description": "是否可交互",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "state",
          "type": "IMarkStateSpec",
          "required": false,
          "description": "图元状态样式",
          "expandedType": "{\n  /** 悬浮状态样式 */\n  hover?: any;\n  /** 选中状态样式 */\n  selected?: any;\n  /** 禁用状态样式 */\n  disabled?: any;\n}",
          "resolvedType": "IMarkStateSpec",
          "isSimple": false,
          "dependencies": [
            "IMarkStateSpec"
          ]
        }
      ],
      "note": "包含 4 个属性，类型已完全展开",
      "usageNote": "IMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMarkStateSpec": {
      "description": "图元状态样式配置",
      "typescriptCode": "interface IMarkStateSpec {\n  /** 悬浮状态样式 */\n  hover?: any;\n  /** 选中状态样式 */\n  selected?: any;\n  /** 禁用状态样式 */\n  disabled?: any;\n}",
      "properties": [
        {
          "name": "hover",
          "type": "any",
          "required": false,
          "description": "悬浮状态样式",
          "expandedType": "any",
          "resolvedType": "any",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "selected",
          "type": "any",
          "required": false,
          "description": "选中状态样式",
          "expandedType": "any",
          "resolvedType": "any",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "disabled",
          "type": "any",
          "required": false,
          "description": "禁用状态样式",
          "expandedType": "any",
          "resolvedType": "any",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IMarkStateSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IRectMarkSpec": {
      "description": "矩形图元样式配置，用于柱状图柱体",
      "typescriptCode": "interface IRectMarkSpec {\n  /** 填充色 */\n  fill?: string;\n  /** 边框色 */\n  stroke?: string;\n  /** 边框宽度 */\n  lineWidth?: number;\n  /** 透明度 */\n  opacity?: number;\n  /** 圆角半径 */\n  cornerRadius?: number | number[];\n  /** 宽度 */\n  width?: number;\n  /** 高度 */\n  height?: number;\n}",
      "properties": [
        {
          "name": "fill",
          "type": "string",
          "required": false,
          "description": "填充色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "stroke",
          "type": "string",
          "required": false,
          "description": "边框色",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "lineWidth",
          "type": "number",
          "required": false,
          "description": "边框宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "opacity",
          "type": "number",
          "required": false,
          "description": "透明度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "cornerRadius",
          "type": "number | number[]",
          "required": false,
          "description": "圆角半径",
          "expandedType": "number | number[]",
          "resolvedType": "number | number[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "width",
          "type": "number",
          "required": false,
          "description": "宽度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "height",
          "type": "number",
          "required": false,
          "description": "高度",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 7 个属性，类型已完全展开",
      "usageNote": "IRectMarkSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IBarBackgroundSpec": {
      "description": "柱状背景图元配置",
      "typescriptCode": "interface IBarBackgroundSpec {\n  /** 决定柱状背景图元显示层级，例如在分组柱状图中的组级别 */\n  fieldLevel?: number;\n}",
      "properties": [
        {
          "name": "fieldLevel",
          "type": "number",
          "required": false,
          "description": "决定柱状背景图元显示层级，例如在分组柱状图中的组级别",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 1 个属性，类型已完全展开",
      "usageNote": "IBarBackgroundSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IStackCornerRadiusCallback": {
      "description": "堆叠柱圆角回调函数配置",
      "typescriptCode": "interface IStackCornerRadiusCallback {\n  /** 圆角回调函数 */\n  callback: { [key: string]: any } | number[];\n}",
      "properties": [
        {
          "name": "callback",
          "type": "(attr: IRectGraphicAttribute, datum: Datum, ctx: ISeriesMarkAttributeContext) => number | number[]",
          "required": true,
          "description": "圆角回调函数",
          "expandedType": "{ [key: string]: any } | number[]",
          "resolvedType": "(attr: IRectGraphicAttribute, datum: Datum, ctx: ISeriesMarkAttributeContext) => number | number[]",
          "isSimple": false,
          "dependencies": [
            "(attr: IRectGraphicAttribute, datum: Datum, ctx: ISeriesMarkAttributeContext) => number"
          ]
        }
      ],
      "note": "包含 1 个属性，类型已完全展开",
      "usageNote": "IStackCornerRadiusCallback 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IData": {
      "description": "数据配置",
      "typescriptCode": "interface IData {\n  /** 数据集ID */\n  id?: string | number;\n  /** 静态数据值 */\n  values?: any[];\n  /** 字段类型定义 */\n  fields?: { [key: string]: any } | { [key: string]: any } | { [key: string]: any };\n}",
      "properties": [
        {
          "name": "id",
          "type": "StringOrNumber",
          "required": false,
          "description": "数据集ID",
          "expandedType": "string | number",
          "resolvedType": "StringOrNumber",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "values",
          "type": "any[]",
          "required": false,
          "description": "静态数据值",
          "expandedType": "any[]",
          "resolvedType": "any[]",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "fields",
          "type": "{ [key: string]: { type: \"number\" | \"string\" | \"boolean\" } }",
          "required": false,
          "description": "字段类型定义",
          "expandedType": "{ [key: string]: any } | { [key: string]: any } | { [key: string]: any }",
          "resolvedType": "{ [key: string]: { type: \"number\" | \"string\" | \"boolean\" } }",
          "isSimple": false,
          "dependencies": [
            "{ [key: string]: { type: \"number\""
          ]
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IData 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ILayoutPaddingSpec": {
      "description": "布局内边距配置",
      "typescriptCode": "interface ILayoutPaddingSpec {\n  /** 左边距 */\n  left?: number;\n  /** 右边距 */\n  right?: number;\n  /** 上边距 */\n  top?: number;\n  /** 下边距 */\n  bottom?: number;\n}",
      "properties": [
        {
          "name": "left",
          "type": "number",
          "required": false,
          "description": "左边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "right",
          "type": "number",
          "required": false,
          "description": "右边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "top",
          "type": "number",
          "required": false,
          "description": "上边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "bottom",
          "type": "number",
          "required": false,
          "description": "下边距",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 4 个属性，类型已完全展开",
      "usageNote": "ILayoutPaddingSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ITitleSpec": {
      "description": "标题配置",
      "typescriptCode": "interface ITitleSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标题文本 */\n  text?: string;\n  /** 副标题文本 */\n  subtext?: string;\n  /** 对齐方式 */\n  align?: \"left\" | \"center\" | \"right\";\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "text",
          "type": "string",
          "required": false,
          "description": "标题文本",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "subtext",
          "type": "string",
          "required": false,
          "description": "副标题文本",
          "expandedType": "string",
          "resolvedType": "string",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "align",
          "type": "\"left\" | \"center\" | \"right\"",
          "required": false,
          "description": "对齐方式",
          "expandedType": "\"left\" | \"center\" | \"right\"",
          "resolvedType": "\"left\" | \"center\" | \"right\"",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 4 个属性，类型已完全展开",
      "usageNote": "ITitleSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ILegendSpec": {
      "description": "图例配置",
      "typescriptCode": "interface ILegendSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 图例位置 */\n  orient?: \"left\" | \"right\" | \"top\" | \"bottom\";\n  /** 图例对齐位置 */\n  position?: \"start\" | \"middle\" | \"end\";\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "orient",
          "type": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "required": false,
          "description": "图例位置",
          "expandedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "resolvedType": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"start\" | \"middle\" | \"end\"",
          "required": false,
          "description": "图例对齐位置",
          "expandedType": "\"start\" | \"middle\" | \"end\"",
          "resolvedType": "\"start\" | \"middle\" | \"end\"",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "ILegendSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ITooltipSpec": {
      "description": "提示框配置",
      "typescriptCode": "interface ITooltipSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 触发方式 */\n  trigger?: \"hover\" | \"click\" | \"none\";\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "trigger",
          "type": "\"hover\" | \"click\" | \"none\"",
          "required": false,
          "description": "触发方式",
          "expandedType": "\"hover\" | \"click\" | \"none\"",
          "resolvedType": "\"hover\" | \"click\" | \"none\"",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 2 个属性，类型已完全展开",
      "usageNote": "ITooltipSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "ILabelSpec": {
      "description": "标签配置",
      "typescriptCode": "interface ILabelSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置 */\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n  /** 偏移距离 */\n  offset?: number;\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "required": false,
          "description": "标签位置",
          "expandedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "resolvedType": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "offset",
          "type": "number",
          "required": false,
          "description": "偏移距离",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "ILabelSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    },
    "IMultiLabelSpec": {
      "description": "多标签配置，支持柱图的复杂标签位置",
      "typescriptCode": "interface IMultiLabelSpec {\n  /** 是否显示 */\n  visible?: boolean;\n  /** 标签位置，支持柱图特有位置 */\n  position?: \"outside\" | \"top\" | \"bottom\" | \"left\" | \"right\" | \"inside\" | \"inside-top\" | \"inside-bottom\" | \"inside-right\" | \"inside-left\" | \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\";\n  /** 偏移距离 */\n  offset?: number;\n}",
      "properties": [
        {
          "name": "visible",
          "type": "boolean",
          "required": false,
          "description": "是否显示",
          "expandedType": "boolean",
          "resolvedType": "boolean",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "position",
          "type": "\"outside\" | \"top\" | \"bottom\" | \"left\" | \"right\" | \"inside\" | \"inside-top\" | \"inside-bottom\" | \"inside-right\" | \"inside-left\" | \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\"",
          "required": false,
          "description": "标签位置，支持柱图特有位置",
          "expandedType": "\"outside\" | \"top\" | \"bottom\" | \"left\" | \"right\" | \"inside\" | \"inside-top\" | \"inside-bottom\" | \"inside-right\" | \"inside-left\" | \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\"",
          "resolvedType": "\"outside\" | \"top\" | \"bottom\" | \"left\" | \"right\" | \"inside\" | \"inside-top\" | \"inside-bottom\" | \"inside-right\" | \"inside-left\" | \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\"",
          "isSimple": true,
          "dependencies": []
        },
        {
          "name": "offset",
          "type": "number",
          "required": false,
          "description": "偏移距离",
          "expandedType": "number",
          "resolvedType": "number",
          "isSimple": true,
          "dependencies": []
        }
      ],
      "note": "包含 3 个属性，类型已完全展开",
      "usageNote": "IMultiLabelSpec 的完整类型定义，所有子类型已展开便于大模型理解"
    }
  },
  "statistics": {
    "totalInterfaces": 11,
    "totalProperties": 63,
    "simpleTypes": 0,
    "complexTypes": 30
  }
}