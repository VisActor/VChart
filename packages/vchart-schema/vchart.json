{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "anyOf": [
    {
      "$ref": "#/definitions/IBarChartSpec"
    },
    {
      "$ref": "#/definitions/IBar3dChartSpec"
    },
    {
      "$ref": "#/definitions/IBoxPlotChartSpec"
    },
    {
      "$ref": "#/definitions/ICirclePackingChartSpec"
    },
    {
      "$ref": "#/definitions/IRangeColumnChartSpec"
    },
    {
      "$ref": "#/definitions/IRangeColumn3dChartSpec"
    },
    {
      "$ref": "#/definitions/IRangeAreaChartSpec"
    },
    {
      "$ref": "#/definitions/ICommonChartSpec"
    },
    {
      "$ref": "#/definitions/IFunnelChartSpec"
    },
    {
      "$ref": "#/definitions/IFunnel3dChartSpec"
    },
    {
      "$ref": "#/definitions/IGaugeChartSpec"
    },
    {
      "$ref": "#/definitions/IHeatmapChartSpec"
    },
    {
      "$ref": "#/definitions/IHistogramChartSpec"
    },
    {
      "$ref": "#/definitions/IHistogram3dChartSpec"
    },
    {
      "$ref": "#/definitions/ILineChartSpec"
    },
    {
      "$ref": "#/definitions/IMapChartSpec"
    },
    {
      "$ref": "#/definitions/IPieChartSpec"
    },
    {
      "$ref": "#/definitions/IPie3dChartSpec"
    },
    {
      "$ref": "#/definitions/ICircularProgressChartSpec"
    },
    {
      "$ref": "#/definitions/ILinearProgressChartSpec"
    },
    {
      "$ref": "#/definitions/IRadarChartSpec"
    },
    {
      "$ref": "#/definitions/IRoseChartSpec"
    },
    {
      "$ref": "#/definitions/ISankeyChartSpec"
    },
    {
      "$ref": "#/definitions/IScatterChartSpec"
    },
    {
      "$ref": "#/definitions/ISequenceChartSpec"
    },
    {
      "$ref": "#/definitions/ISunburstChartSpec"
    },
    {
      "$ref": "#/definitions/ITreemapChartSpec"
    },
    {
      "$ref": "#/definitions/IWaterfallChartSpec"
    },
    {
      "$ref": "#/definitions/ICorrelationChartSpec"
    },
    {
      "$ref": "#/definitions/IWordCloudChartSpec"
    },
    {
      "$ref": "#/definitions/IWordCloud3dChartSpec"
    },
    {
      "$ref": "#/definitions/IAreaChartSpec"
    }
  ],
  "definitions": {
    "ArcLabelAlignType": {
      "enum": [
        "arc",
        "edge",
        "labelLine"
      ],
      "type": "string"
    },
    "ArcLabelStrategyType": {
      "enum": [
        "none",
        "priority",
        "vertical"
      ],
      "type": "string"
    },
    "Attr": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "baseURI": {
          "type": "string"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "localName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "ownerElement": {
          "$ref": "#/definitions/Element"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "prefix": {
          "type": "string"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "specified": {
          "type": "boolean"
        },
        "textContent": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "baseURI",
        "childNodes",
        "firstChild",
        "isConnected",
        "lastChild",
        "localName",
        "name",
        "namespaceURI",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "ownerDocument",
        "ownerElement",
        "parentElement",
        "parentNode",
        "prefix",
        "previousSibling",
        "specified",
        "textContent",
        "value"
      ],
      "type": "object"
    },
    "AxisLabelOverlap": {
      "properties": {
        "autoHide": {
          "type": "boolean"
        },
        "autoHideMethod": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "enum": [
                "greedy",
                "parity"
              ],
              "type": "string"
            }
          ]
        },
        "autoHideSeparation": {
          "type": "number"
        },
        "autoLimit": {
          "type": "boolean"
        },
        "autoRotate": {
          "type": "boolean"
        },
        "autoRotateAngle": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "layoutFunc": {
          "typeof": "function"
        },
        "limitEllipsis": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AxisType": {
      "enum": [
        "band",
        "linear",
        "log",
        "ordinal",
        "point",
        "symlog",
        "time"
      ],
      "type": "string"
    },
    "BarProp": {
      "properties": {
        "visible": {
          "type": "boolean"
        }
      },
      "required": [
        "visible"
      ],
      "type": "object"
    },
    "BoxPlotShaftShape": {
      "enum": [
        "bar",
        "line"
      ],
      "type": "string"
    },
    "BuildInTransformOptions": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "CSSRule": {
      "properties": {
        "CHARSET_RULE": {
          "type": "number"
        },
        "FONT_FACE_RULE": {
          "type": "number"
        },
        "IMPORT_RULE": {
          "type": "number"
        },
        "KEYFRAMES_RULE": {
          "type": "number"
        },
        "KEYFRAME_RULE": {
          "type": "number"
        },
        "MEDIA_RULE": {
          "type": "number"
        },
        "NAMESPACE_RULE": {
          "type": "number"
        },
        "PAGE_RULE": {
          "type": "number"
        },
        "STYLE_RULE": {
          "type": "number"
        },
        "SUPPORTS_RULE": {
          "type": "number"
        },
        "cssText": {
          "type": "string"
        },
        "parentRule": {
          "$ref": "#/definitions/CSSRule"
        },
        "parentStyleSheet": {
          "$ref": "#/definitions/CSSStyleSheet"
        },
        "type": {
          "type": "number"
        }
      },
      "required": [
        "CHARSET_RULE",
        "FONT_FACE_RULE",
        "IMPORT_RULE",
        "KEYFRAMES_RULE",
        "KEYFRAME_RULE",
        "MEDIA_RULE",
        "NAMESPACE_RULE",
        "PAGE_RULE",
        "STYLE_RULE",
        "SUPPORTS_RULE",
        "cssText",
        "parentRule",
        "parentStyleSheet",
        "type"
      ],
      "type": "object"
    },
    "CSSStyleSheet": {
      "properties": {
        "cssRules": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/CSSRule"
            }
          },
          "type": "object"
        },
        "disabled": {
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "media": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ownerNode": {
          "anyOf": [
            {
              "$ref": "#/definitions/Element"
            },
            {
              "$ref": "#/definitions/ProcessingInstruction"
            }
          ]
        },
        "ownerRule": {
          "$ref": "#/definitions/CSSRule"
        },
        "parentStyleSheet": {
          "$ref": "#/definitions/CSSStyleSheet"
        },
        "rules": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/CSSRule"
            }
          },
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "cssRules",
        "disabled",
        "href",
        "media",
        "ownerNode",
        "ownerRule",
        "parentStyleSheet",
        "rules",
        "title",
        "type"
      ],
      "type": "object"
    },
    "CacheStorage": {
      "type": "object"
    },
    "CanvasGradient": {
      "type": "object"
    },
    "CanvasLineCap": {
      "enum": [
        "butt",
        "round",
        "square"
      ],
      "type": "string"
    },
    "CanvasLineJoin": {
      "enum": [
        "bevel",
        "miter",
        "round"
      ],
      "type": "string"
    },
    "CanvasPattern": {
      "type": "object"
    },
    "CanvasTextAlign": {
      "enum": [
        "center",
        "end",
        "left",
        "right",
        "start"
      ],
      "type": "string"
    },
    "CanvasTextBaseline": {
      "enum": [
        "alphabetic",
        "bottom",
        "hanging",
        "ideographic",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "ChildNode": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "baseURI": {
          "type": "string"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "baseURI",
        "childNodes",
        "firstChild",
        "isConnected",
        "lastChild",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "previousSibling",
        "textContent"
      ],
      "type": "object"
    },
    "Clipboard": {
      "type": "object"
    },
    "ColorScheme": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "description": "渐进式数据色板：由多个色板组成，应用时会依次调用色板的 `isAvailable` 回调，如果当前回调返回 true 则立即应用对应色板",
          "items": {
            "$ref": "#/definitions/IProgressiveDataSchemeCase<string>"
          },
          "type": "array"
        }
      ]
    },
    "ColorSchemeItem": {
      "anyOf": [
        {
          "$ref": "#/definitions/IGradientLinear"
        },
        {
          "$ref": "#/definitions/IGradientRadial"
        },
        {
          "$ref": "#/definitions/IGradientConical"
        },
        {
          "type": "string"
        }
      ]
    },
    "CommonParseOptions": {
      "properties": {
        "clone": {
          "default": true,
          "description": "是否需要对数据进行 clone，默认为 true。\n如果考虑性能，你可以将其关闭，但是这会带了一些副作用，即我们会对传入的数据进行修改（不会对原有字段及值修改，只会在原有数据基础上添加一些字段）。",
          "since": "1.3.0",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ControllerTypeEnum": {
      "enum": [
        "backward",
        "forward",
        "pause",
        "start"
      ],
      "type": "string"
    },
    "ConvertToMarkStyleSpec<IArc3dMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IArc3dMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IArcMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IArcMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IArcMarkSpec>_2": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IAreaMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "orient": {
          "$ref": "#/definitions/VisualType<\"horizontal\"|\"vertical\">"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IAreaMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "orient": {
          "$ref": "#/definitions/VisualType<\"horizontal\"|\"vertical\">"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IBoxPlotMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "boxFill": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "盒子填充颜色，为空则不填充"
        },
        "boxWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "box宽度"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "box描边宽度"
        },
        "max": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_4"
        },
        "median": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_2"
        },
        "min": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "q1": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_1"
        },
        "q3": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_3"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "shaftFillOpacity": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "中轴线透明度，仅当shaftType=bar时生效"
        },
        "shaftShape": {
          "$ref": "#/definitions/VisualType<BoxPlotShaftShape>",
          "description": "中轴线类型"
        },
        "shaftWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "最大最小值宽度"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IBoxPlotMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "boxFill": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "盒子填充颜色，为空则不填充"
        },
        "boxWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "box宽度"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "box描边宽度"
        },
        "max": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_4"
        },
        "median": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_2"
        },
        "min": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "q1": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_1"
        },
        "q3": {
          "$ref": "#/definitions/VisualType<(datum:Datum)=>number>_3"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "shaftFillOpacity": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "中轴线透明度，仅当shaftType=bar时生效"
        },
        "shaftShape": {
          "$ref": "#/definitions/VisualType<BoxPlotShaftShape>",
          "description": "中轴线类型"
        },
        "shaftWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "最大最小值宽度"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IGroupMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "clip": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IGroupMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "clip": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IImageMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "image": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "repeatX": {
          "$ref": "#/definitions/VisualType<IRepeatType>"
        },
        "repeatY": {
          "$ref": "#/definitions/VisualType<IRepeatType>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "required": [
        "image"
      ],
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IImageMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "image": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "repeatX": {
          "$ref": "#/definitions/VisualType<IRepeatType>"
        },
        "repeatY": {
          "$ref": "#/definitions/VisualType<IRepeatType>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "required": [
        "image"
      ],
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ILineMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/VisualType<LineStrokeCap>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineJoin": {
          "$ref": "#/definitions/VisualType<LineStrokeJoin>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "miterLimit": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeBoundsBuffer": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ILineMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/VisualType<LineStrokeCap>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineJoin": {
          "$ref": "#/definitions/VisualType<LineStrokeJoin>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "miterLimit": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeBoundsBuffer": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ILineMarkSpec>_2": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/VisualType<LineStrokeCap>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineJoin": {
          "$ref": "#/definitions/VisualType<LineStrokeJoin>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "miterLimit": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeBoundsBuffer": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ILinkPathMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "align": {
          "$ref": "#/definitions/VisualType<\"center\"|\"end\"|\"start\">"
        },
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "backgroundStyle": {},
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curvature": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "direction": {
          "$ref": "#/definitions/VisualType<\"radial\"|\"horizontal\"|\"vertical\"|\"LR\"|\"RL\"|\"TB\"|\"BL\">"
        },
        "endArrow": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pathType": {
          "$ref": "#/definitions/VisualType<\"line\"|\"polyline\"|\"smooth\">"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "ratio": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "the ratio of normal style path"
        },
        "round": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "round all the coordinates"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startArrow": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "thickness": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x0": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y0": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ILinkPathMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "align": {
          "$ref": "#/definitions/VisualType<\"center\"|\"end\"|\"start\">"
        },
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "backgroundStyle": {},
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curvature": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "direction": {
          "$ref": "#/definitions/VisualType<\"radial\"|\"horizontal\"|\"vertical\"|\"LR\"|\"RL\"|\"TB\"|\"BL\">"
        },
        "endArrow": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pathType": {
          "$ref": "#/definitions/VisualType<\"line\"|\"polyline\"|\"smooth\">"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "ratio": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "the ratio of normal style path"
        },
        "round": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "round all the coordinates"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startArrow": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "thickness": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x0": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y0": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPathMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "path": {
          "$ref": "#/definitions/VisualType<string>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "smoothScale": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPathMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "path": {
          "$ref": "#/definitions/VisualType<string>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "smoothScale": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPolygonMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "points": {
          "$ref": "#/definitions/VisualType<IPoint[]>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPolygonMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "points": {
          "$ref": "#/definitions/VisualType<IPoint[]>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IProgressArcMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerPadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "进度条内侧 padding（接受负值）"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerPadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "进度条外侧 padding（接受负值）"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IProgressArcMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "autoCapConical": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cap": {
          "$ref": "#/definitions/VisualType<boolean|[boolean,boolean]>",
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "arc的中心点偏移距离"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "endAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "innerPadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "进度条内侧 padding（接受负值）"
        },
        "innerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "outerPadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "进度条外侧 padding（接受负值）"
        },
        "outerRadius": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "padAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "startAngle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPyramid3dMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "points": {
          "$ref": "#/definitions/VisualType<IPoint[]>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IPyramid3dMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "points": {
          "$ref": "#/definitions/VisualType<IPoint[]>"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRect3dMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "length": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRect3dMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "length": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRectMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRectMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRectMarkSpec>_2": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cornerRadius": {
          "$ref": "#/definitions/VisualType<number|number[]>",
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "height": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "width": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRippleMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "ripple": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "波纹密度ripple\nripple 取值范为[0,1]"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "size": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "水波纹最大半径"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRippleMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "ripple": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "波纹密度ripple\nripple 取值范为[0,1]"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "size": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "水波纹最大半径"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRuleMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/VisualType<LineStrokeCap>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineJoin": {
          "$ref": "#/definitions/VisualType<LineStrokeJoin>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "miterLimit": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeBoundsBuffer": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRuleMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "curveType": {
          "$ref": "#/definitions/VisualType<InterpolateType>"
        },
        "defined": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/VisualType<LineStrokeCap>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineJoin": {
          "$ref": "#/definitions/VisualType<LineStrokeJoin>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "miterLimit": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeBoundsBuffer": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "x1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y1": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRuleMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ILineMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>_2",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRectMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IGroupMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IImageMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IArcMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPathMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IBoxPlotMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ISymbolMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IAreaMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRect3dMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IArc3dMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ILinkPathMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRippleMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IProgressArcMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPolygonMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPyramid3dMarkSpec>_1",
          "description": "style格式转换"
        }
      ],
      "description": "style格式转换"
    },
    "ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRuleMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ILineMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>_1",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRectMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IImageMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IArcMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPathMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IBoxPlotMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ISymbolMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IAreaMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRect3dMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IArc3dMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ILinkPathMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRippleMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IProgressArcMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPolygonMarkSpec>",
          "description": "style格式转换"
        },
        {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IPyramid3dMarkSpec>",
          "description": "style格式转换"
        }
      ],
      "description": "style格式转换"
    },
    "ConvertToMarkStyleSpec<ISymbolMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "dx": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "dy": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "shape": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "对外声明使用shape，vrender图形属性对应的是shape"
        },
        "size": {
          "$ref": "#/definitions/VisualType<number|number[]>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "symbolType": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "FIXME:  vrender Symbol接收的图形属性，暂时都申明一下"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ISymbolMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "dx": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "dy": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "shape": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "对外声明使用shape，vrender图形属性对应的是shape"
        },
        "size": {
          "$ref": "#/definitions/VisualType<number|number[]>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "symbolType": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "FIXME:  vrender Symbol接收的图形属性，暂时都申明一下"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ITextMarkSpec>": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "direction": {
          "$ref": "#/definitions/VisualType<\"horizontal\"|\"vertical\">",
          "default": "'horizontal'",
          "description": "文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'"
        },
        "dx": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "x 方向偏移"
        },
        "dy": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "y 方向偏移"
        },
        "ellipsis": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "文字超出 maxLineWidth 后的省略符"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fontFamily": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体"
        },
        "fontSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "字号"
        },
        "fontStyle": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体样式"
        },
        "fontWeight": {
          "$ref": "#/definitions/VisualType<FontWeight>",
          "description": "字重"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineBreak": {
          "$ref": "#/definitions/VisualType<string>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineHeight": {
          "$ref": "#/definitions/VisualType<string|number>",
          "description": "行高（1.3.1 版本新增字符串类型表示比例值，如\"150%\"）",
          "since": "1.3.1"
        },
        "lineThrough": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "中划线"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "maxLineWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "文字的最大长度"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "poptip": {
          "$ref": "#/definitions/VisualType<PopTipAttributes>",
          "description": "poptip 相关配置"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "text": {
          "$ref": "#/definitions/VisualType<Function|string[]|StringOrNumber|IRichTextCharacter[]>",
          "description": "文字内容"
        },
        "textAlign": {
          "$ref": "#/definitions/VisualType<TextAlignType>",
          "description": "文字对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/VisualType<TextBaselineType>",
          "description": "文字居中方式"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "type": {
          "$ref": "#/definitions/VisualType<\"text\"|\"html\"|\"rich\">",
          "default": "'text'",
          "description": "文字类型\n可选，'html', 'rich', 'text'"
        },
        "underline": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "下划线"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ITextMarkSpec>_1": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "direction": {
          "$ref": "#/definitions/VisualType<\"horizontal\"|\"vertical\">",
          "default": "'horizontal'",
          "description": "文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'"
        },
        "dx": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "x 方向偏移"
        },
        "dy": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "y 方向偏移"
        },
        "ellipsis": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "文字超出 maxLineWidth 后的省略符"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fontFamily": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体"
        },
        "fontSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "字号"
        },
        "fontStyle": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体样式"
        },
        "fontWeight": {
          "$ref": "#/definitions/VisualType<FontWeight>",
          "description": "字重"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineBreak": {
          "$ref": "#/definitions/VisualType<string>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineHeight": {
          "$ref": "#/definitions/VisualType<string|number>",
          "description": "行高（1.3.1 版本新增字符串类型表示比例值，如\"150%\"）",
          "since": "1.3.1"
        },
        "lineThrough": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "中划线"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "maxLineWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "文字的最大长度"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "poptip": {
          "$ref": "#/definitions/VisualType<PopTipAttributes>",
          "description": "poptip 相关配置"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "text": {
          "$ref": "#/definitions/VisualType<Function|string[]|StringOrNumber|IRichTextCharacter[]>",
          "description": "文字内容"
        },
        "textAlign": {
          "$ref": "#/definitions/VisualType<TextAlignType>",
          "description": "文字对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/VisualType<TextBaselineType>",
          "description": "文字居中方式"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "type": {
          "$ref": "#/definitions/VisualType<\"text\"|\"html\"|\"rich\">",
          "default": "'text'",
          "description": "文字类型\n可选，'html', 'rich', 'text'"
        },
        "underline": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "下划线"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "ConvertToMarkStyleSpec<ITextMarkSpec>_2": {
      "description": "style格式转换",
      "properties": {
        "alpha": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "anchor": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "anchor3d": {
          "$ref": "#/definitions/VisualType<[number,number]>"
        },
        "angle": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "background": {
          "$ref": "#/definitions/VisualType<string|HTMLCanvasElement|HTMLImageElement>"
        },
        "beta": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "boundsMode": {
          "$ref": "#/definitions/VisualType<\"accurate\"|\"imprecise\">"
        },
        "cursor": {
          "$ref": "#/definitions/VisualType<Cursor>"
        },
        "direction": {
          "$ref": "#/definitions/VisualType<\"horizontal\"|\"vertical\">",
          "default": "'horizontal'",
          "description": "文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'"
        },
        "dx": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "x 方向偏移"
        },
        "dy": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "y 方向偏移"
        },
        "ellipsis": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "文字超出 maxLineWidth 后的省略符"
        },
        "fill": {
          "$ref": "#/definitions/VisualType<false|IColorKey|IGradient|VisualType<string>>"
        },
        "fillOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "fontFamily": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体"
        },
        "fontSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "字号"
        },
        "fontStyle": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "字体样式"
        },
        "fontWeight": {
          "$ref": "#/definitions/VisualType<FontWeight>",
          "description": "字重"
        },
        "innerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "内边框"
        },
        "lineBreak": {
          "$ref": "#/definitions/VisualType<string>"
        },
        "lineDash": {
          "$ref": "#/definitions/VisualType<number[]>"
        },
        "lineDashOffset": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "lineHeight": {
          "$ref": "#/definitions/VisualType<string|number>",
          "description": "行高（1.3.1 版本新增字符串类型表示比例值，如\"150%\"）",
          "since": "1.3.1"
        },
        "lineThrough": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "中划线"
        },
        "lineWidth": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "maxLineWidth": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "文字的最大长度"
        },
        "opacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "outerBorder": {
          "$ref": "#/definitions/VisualType<IBorder>",
          "description": "外边框"
        },
        "pickMode": {
          "$ref": "#/definitions/VisualType<\"custom\"|\"accurate\"|\"imprecise\">",
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式"
        },
        "poptip": {
          "$ref": "#/definitions/VisualType<PopTipAttributes>",
          "description": "poptip 相关配置"
        },
        "scaleCenter": {
          "$ref": "#/definitions/VisualType<[string|number,string|number]>",
          "description": "图形缩放中心",
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心"
        },
        "scaleX": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "scaleY": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "stroke": {
          "$ref": "#/definitions/VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        "strokeOpacity": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "text": {
          "$ref": "#/definitions/VisualType<Function|string[]|StringOrNumber|IRichTextCharacter[]>",
          "description": "文字内容"
        },
        "textAlign": {
          "$ref": "#/definitions/VisualType<TextAlignType>",
          "description": "文字对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/VisualType<TextBaselineType>",
          "description": "文字居中方式"
        },
        "texture": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的类型"
        },
        "textureColor": {
          "$ref": "#/definitions/VisualType<string>",
          "description": "纹理的颜色"
        },
        "texturePadding": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理之间空隙的大小"
        },
        "textureSize": {
          "$ref": "#/definitions/VisualType<number>",
          "description": "纹理单元的大小"
        },
        "type": {
          "$ref": "#/definitions/VisualType<\"text\"|\"html\"|\"rich\">",
          "default": "'text'",
          "description": "文字类型\n可选，'html', 'rich', 'text'"
        },
        "underline": {
          "$ref": "#/definitions/VisualType<boolean>",
          "description": "下划线"
        },
        "visible": {
          "$ref": "#/definitions/VisualType<boolean>"
        },
        "x": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "y": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "z": {
          "$ref": "#/definitions/VisualType<number>"
        },
        "zIndex": {
          "$ref": "#/definitions/VisualType<number>"
        }
      },
      "type": "object"
    },
    "CoordinateType": {
      "enum": [
        "cartesian",
        "geo",
        "none",
        "polar"
      ],
      "type": "string"
    },
    "CredentialsContainer": {
      "type": "object"
    },
    "CrossHairTrigger": {
      "anyOf": [
        {
          "items": [
            {
              "const": "click",
              "type": "string"
            },
            {
              "const": "hover",
              "type": "string"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        {
          "enum": [
            "click",
            "hover"
          ],
          "type": "string"
        }
      ]
    },
    "Crypto": {
      "properties": {
        "subtle": {
          "$ref": "#/definitions/SubtleCrypto"
        }
      },
      "required": [
        "subtle"
      ],
      "type": "object"
    },
    "Cursor": {
      "enum": [
        "alias",
        "all-scroll",
        "auto",
        "cell",
        "col-resize",
        "context-menu",
        "copy",
        "crosshair",
        "default",
        "e-resize",
        "ew-resize",
        "grab",
        "grabbing",
        "help",
        "move",
        "n-resize",
        "ne-resize",
        "nesw-resize",
        "no-drop",
        "none",
        "not-allowed",
        "ns-resize",
        "nw-resize",
        "nwse-resize",
        "pointer",
        "progress",
        "row-resize",
        "s-resize",
        "se-resize",
        "sw-resize",
        "text",
        "vertical-text",
        "w-resize",
        "wait",
        "zoom-in",
        "zoom-out"
      ],
      "type": "string"
    },
    "Cursor_1": {
      "enum": [
        "alias",
        "all-scroll",
        "auto",
        "cell",
        "col-resize",
        "context-menu",
        "copy",
        "crosshair",
        "default",
        "e-resize",
        "ew-resize",
        "grab",
        "grabbing",
        "help",
        "move",
        "n-resize",
        "ne-resize",
        "nesw-resize",
        "no-drop",
        "none",
        "not-allowed",
        "ns-resize",
        "nw-resize",
        "nwse-resize",
        "pointer",
        "progress",
        "row-resize",
        "s-resize",
        "se-resize",
        "sw-resize",
        "text",
        "vertical-text",
        "w-resize",
        "wait",
        "zoom-in",
        "zoom-out"
      ],
      "type": "string"
    },
    "CustomElementRegistry": {
      "type": "object"
    },
    "DATAVIEW_TYPE": {
      "enum": [
        "bytejson",
        "dsv",
        "geo",
        "geo-graticule",
        "graph",
        "hex",
        "table",
        "tree"
      ],
      "type": "string"
    },
    "DOMImplementation": {
      "type": "object"
    },
    "DOMMatrix": {
      "properties": {
        "a": {
          "type": "number"
        },
        "b": {
          "type": "number"
        },
        "c": {
          "type": "number"
        },
        "d": {
          "type": "number"
        },
        "e": {
          "type": "number"
        },
        "f": {
          "type": "number"
        },
        "is2D": {
          "type": "boolean"
        },
        "isIdentity": {
          "type": "boolean"
        },
        "m11": {
          "type": "number"
        },
        "m12": {
          "type": "number"
        },
        "m13": {
          "type": "number"
        },
        "m14": {
          "type": "number"
        },
        "m21": {
          "type": "number"
        },
        "m22": {
          "type": "number"
        },
        "m23": {
          "type": "number"
        },
        "m24": {
          "type": "number"
        },
        "m31": {
          "type": "number"
        },
        "m32": {
          "type": "number"
        },
        "m33": {
          "type": "number"
        },
        "m34": {
          "type": "number"
        },
        "m41": {
          "type": "number"
        },
        "m42": {
          "type": "number"
        },
        "m43": {
          "type": "number"
        },
        "m44": {
          "type": "number"
        }
      },
      "required": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "is2D",
        "isIdentity",
        "m11",
        "m12",
        "m13",
        "m14",
        "m21",
        "m22",
        "m23",
        "m24",
        "m31",
        "m32",
        "m33",
        "m34",
        "m41",
        "m42",
        "m43",
        "m44"
      ],
      "type": "object"
    },
    "DOMPointReadOnly": {
      "properties": {
        "w": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        }
      },
      "required": [
        "w",
        "x",
        "y",
        "z"
      ],
      "type": "object"
    },
    "DOMRect": {
      "properties": {
        "bottom": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "left": {
          "type": "number"
        },
        "right": {
          "type": "number"
        },
        "top": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "bottom",
        "height",
        "left",
        "right",
        "top",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "DOMRectReadOnly": {
      "properties": {
        "bottom": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "left": {
          "type": "number"
        },
        "right": {
          "type": "number"
        },
        "top": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "bottom",
        "height",
        "left",
        "right",
        "top",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "DOMStringMap": {
      "additionalProperties": {
        "type": "string"
      },
      "type": "object"
    },
    "DataKeyType": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "type": "string"
        }
      ]
    },
    "DataSet": {
      "properties": {
        "_callMap": {
          "$ref": "#/definitions/Map<Function,(...args:any[])=>void>"
        },
        "dataViewMap": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/DataView"
            }
          },
          "type": "object"
        },
        "isDataSet": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/IDataSetOptions"
        },
        "parserMap": {
          "$ref": "#/definitions/Record<string,any>"
        },
        "target": {},
        "transformMap": {
          "$ref": "#/definitions/Record<string,any>"
        }
      },
      "required": [
        "_callMap",
        "dataViewMap",
        "isDataSet",
        "name",
        "parserMap",
        "target",
        "transformMap"
      ],
      "type": "object"
    },
    "DataView": {
      "properties": {
        "_diffData": {},
        "_diffKeys": {},
        "_diffMap": {
          "$ref": "#/definitions/Map<string,any>"
        },
        "_diffRank": {
          "type": "number"
        },
        "_fields": {
          "$ref": "#/definitions/IFields"
        },
        "cloneParseData": {},
        "dataSet": {
          "$ref": "#/definitions/DataSet"
        },
        "executeTransform": {},
        "history": {
          "type": "boolean"
        },
        "historyData": {
          "items": {},
          "type": "array"
        },
        "isDataView": {
          "type": "boolean"
        },
        "isLastTransform": {},
        "isRunning": {
          "type": "boolean"
        },
        "latestData": {},
        "latestDataAUD": {
          "typeof": "function"
        },
        "markRunning": {
          "typeof": "function"
        },
        "name": {
          "type": [
            "string",
            "number"
          ]
        },
        "options": {
          "$ref": "#/definitions/IDataViewOptions"
        },
        "parseOption": {
          "$ref": "#/definitions/IParserOptions"
        },
        "parserData": {},
        "rawData": {},
        "reRunAllTransform": {
          "typeof": "function"
        },
        "resetTransformData": {},
        "target": {},
        "transformsArr": {
          "items": {
            "$ref": "#/definitions/ITransformOptions"
          },
          "type": "array"
        },
        "type": {
          "$ref": "#/definitions/DATAVIEW_TYPE"
        }
      },
      "required": [
        "_diffData",
        "_diffKeys",
        "_diffMap",
        "_diffRank",
        "_fields",
        "cloneParseData",
        "dataSet",
        "executeTransform",
        "history",
        "historyData",
        "isDataView",
        "isLastTransform",
        "isRunning",
        "latestData",
        "latestDataAUD",
        "markRunning",
        "name",
        "parseOption",
        "parserData",
        "rawData",
        "reRunAllTransform",
        "resetTransformData",
        "target",
        "transformsArr",
        "type"
      ],
      "type": "object"
    },
    "DirectionType": {
      "enum": [
        "horizontal",
        "vertical"
      ],
      "type": "string"
    },
    "DirectionType_1": {
      "description": "播放方向\ndefault 默认的\nreverse 反方向",
      "enum": [
        "default",
        "reverse"
      ],
      "type": "string"
    },
    "Document": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "URL": {
          "type": "string"
        },
        "activeElement": {
          "$ref": "#/definitions/Element"
        },
        "adoptedStyleSheets": {
          "items": {
            "$ref": "#/definitions/CSSStyleSheet"
          },
          "type": "array"
        },
        "alinkColor": {
          "type": "string"
        },
        "all": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "anchors": {
          "items": {
            "$ref": "#/definitions/HTMLAnchorElement"
          },
          "type": "array"
        },
        "applets": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "baseURI": {
          "type": "string"
        },
        "bgColor": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/HTMLElement"
        },
        "characterSet": {
          "type": "string"
        },
        "charset": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "compatMode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "cookie": {
          "type": "string"
        },
        "currentScript": {
          "$ref": "#/definitions/HTMLOrSVGScriptElement"
        },
        "defaultView": {
          "allOf": [
            {
              "$ref": "#/definitions/Window"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "designMode": {
          "type": "string"
        },
        "dir": {
          "type": "string"
        },
        "doctype": {
          "$ref": "#/definitions/DocumentType"
        },
        "documentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "documentURI": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "embeds": {
          "items": {
            "$ref": "#/definitions/HTMLEmbedElement"
          },
          "type": "array"
        },
        "fgColor": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "fonts": {
          "$ref": "#/definitions/FontFaceSet"
        },
        "forms": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z0-9]+$": {
                "$ref": "#/definitions/Element"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "fullscreen": {
          "type": "boolean"
        },
        "fullscreenElement": {
          "$ref": "#/definitions/Element"
        },
        "fullscreenEnabled": {
          "type": "boolean"
        },
        "head": {
          "$ref": "#/definitions/HTMLHeadElement"
        },
        "hidden": {
          "type": "boolean"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/HTMLImageElement"
          },
          "type": "array"
        },
        "implementation": {
          "$ref": "#/definitions/DOMImplementation"
        },
        "inputEncoding": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "lastModified": {
          "type": "string"
        },
        "linkColor": {
          "type": "string"
        },
        "links": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/HTMLAnchorElement"
              },
              {
                "$ref": "#/definitions/HTMLAreaElement"
              }
            ]
          },
          "type": "array"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointerlockchange": {
          "typeof": "function"
        },
        "onpointerlockerror": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreadystatechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvisibilitychange": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "ownerDocument": {
          "type": "null"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "pictureInPictureElement": {
          "$ref": "#/definitions/Element"
        },
        "pictureInPictureEnabled": {
          "type": "boolean"
        },
        "plugins": {
          "items": {
            "$ref": "#/definitions/HTMLEmbedElement"
          },
          "type": "array"
        },
        "pointerLockElement": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "readyState": {
          "$ref": "#/definitions/DocumentReadyState"
        },
        "referrer": {
          "type": "string"
        },
        "rootElement": {
          "$ref": "#/definitions/SVGSVGElement"
        },
        "scripts": {
          "items": {
            "$ref": "#/definitions/HTMLScriptElement"
          },
          "type": "array"
        },
        "scrollingElement": {
          "$ref": "#/definitions/Element"
        },
        "styleSheets": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/CSSStyleSheet"
            }
          },
          "type": "object"
        },
        "textContent": {
          "type": "string"
        },
        "timeline": {
          "$ref": "#/definitions/DocumentTimeline"
        },
        "title": {
          "type": "string"
        },
        "visibilityState": {
          "$ref": "#/definitions/DocumentVisibilityState"
        },
        "vlinkColor": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "URL",
        "activeElement",
        "adoptedStyleSheets",
        "alinkColor",
        "all",
        "anchors",
        "applets",
        "baseURI",
        "bgColor",
        "body",
        "characterSet",
        "charset",
        "childElementCount",
        "childNodes",
        "children",
        "compatMode",
        "contentType",
        "cookie",
        "currentScript",
        "defaultView",
        "designMode",
        "dir",
        "doctype",
        "documentElement",
        "documentURI",
        "domain",
        "embeds",
        "fgColor",
        "firstChild",
        "firstElementChild",
        "fonts",
        "forms",
        "fullscreen",
        "fullscreenElement",
        "fullscreenEnabled",
        "head",
        "hidden",
        "images",
        "implementation",
        "inputEncoding",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "lastModified",
        "linkColor",
        "links",
        "location",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointerlockchange",
        "onpointerlockerror",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreadystatechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvisibilitychange",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "pictureInPictureElement",
        "pictureInPictureEnabled",
        "plugins",
        "pointerLockElement",
        "previousSibling",
        "readyState",
        "referrer",
        "rootElement",
        "scripts",
        "scrollingElement",
        "styleSheets",
        "textContent",
        "timeline",
        "title",
        "visibilityState",
        "vlinkColor"
      ],
      "type": "object"
    },
    "DocumentReadyState": {
      "enum": [
        "complete",
        "interactive",
        "loading"
      ],
      "type": "string"
    },
    "DocumentTimeline": {
      "properties": {
        "currentTime": {
          "type": "number"
        }
      },
      "required": [
        "currentTime"
      ],
      "type": "object"
    },
    "DocumentType": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "baseURI": {
          "type": "string"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "name": {
          "type": "string"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "publicId": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "baseURI",
        "childNodes",
        "firstChild",
        "isConnected",
        "lastChild",
        "name",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "previousSibling",
        "publicId",
        "systemId",
        "textContent"
      ],
      "type": "object"
    },
    "DocumentVisibilityState": {
      "enum": [
        "hidden",
        "visible"
      ],
      "type": "string"
    },
    "EasingType": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "enum": [
            "",
            "backIn",
            "backInOut",
            "backOut",
            "bounceIn",
            "bounceInOut",
            "bounceOut",
            "circIn",
            "circInOut",
            "circOut",
            "cubicIn",
            "cubicInOut",
            "cubicOut",
            "elasticIn",
            "elasticInOut",
            "elasticOut",
            "expoIn",
            "expoInOut",
            "expoOut",
            "linear",
            "quadIn",
            "quadInOut",
            "quadOut",
            "quartIn",
            "quartInOut",
            "quartOut",
            "quintIn",
            "quintInOut",
            "quintOut",
            "sineIn",
            "sineInOut",
            "sineOut"
          ],
          "type": "string"
        }
      ]
    },
    "Element": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "id": {
          "type": "string"
        },
        "innerHTML": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "firstChild",
        "firstElementChild",
        "id",
        "innerHTML",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onfullscreenchange",
        "onfullscreenerror",
        "outerHTML",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "tagName",
        "textContent"
      ],
      "type": "object"
    },
    "ElementSpec": {
      "anyOf": [
        {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        }
      ]
    },
    "Event": {
      "properties": {
        "AT_TARGET": {
          "type": "number"
        },
        "BUBBLING_PHASE": {
          "type": "number"
        },
        "CAPTURING_PHASE": {
          "type": "number"
        },
        "NONE": {
          "type": "number"
        },
        "bubbles": {
          "type": "boolean"
        },
        "cancelBubble": {
          "type": "boolean"
        },
        "cancelable": {
          "type": "boolean"
        },
        "composed": {
          "type": "boolean"
        },
        "currentTarget": {
          "$ref": "#/definitions/EventTarget"
        },
        "defaultPrevented": {
          "type": "boolean"
        },
        "eventPhase": {
          "type": "number"
        },
        "isTrusted": {
          "type": "boolean"
        },
        "returnValue": {
          "type": "boolean"
        },
        "srcElement": {
          "$ref": "#/definitions/EventTarget"
        },
        "target": {
          "$ref": "#/definitions/EventTarget"
        },
        "timeStamp": {
          "type": "number"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "AT_TARGET",
        "BUBBLING_PHASE",
        "CAPTURING_PHASE",
        "NONE",
        "bubbles",
        "cancelBubble",
        "cancelable",
        "composed",
        "currentTarget",
        "defaultPrevented",
        "eventPhase",
        "isTrusted",
        "returnValue",
        "srcElement",
        "target",
        "timeStamp",
        "type"
      ],
      "type": "object"
    },
    "EventCounts": {
      "type": "object"
    },
    "EventTarget": {
      "type": "object"
    },
    "External": {
      "type": "object"
    },
    "FontFaceSet": {
      "properties": {
        "onloading": {
          "typeof": "function"
        },
        "onloadingdone": {
          "typeof": "function"
        },
        "onloadingerror": {
          "typeof": "function"
        },
        "ready": {
          "$ref": "#/definitions/Promise<FontFaceSet>"
        },
        "status": {
          "$ref": "#/definitions/FontFaceSetLoadStatus"
        }
      },
      "required": [
        "onloading",
        "onloadingdone",
        "onloadingerror",
        "ready",
        "status"
      ],
      "type": "object"
    },
    "FontFaceSetLoadStatus": {
      "enum": [
        "loaded",
        "loading"
      ],
      "type": "string"
    },
    "FontWeight": {
      "enum": [
        100,
        200,
        300,
        400,
        500,
        600,
        700,
        800,
        900,
        "bold",
        "bolder",
        "lighter",
        "normal"
      ]
    },
    "Function": {
      "properties": {
        "arguments": {},
        "caller": {
          "$ref": "#/definitions/Function"
        },
        "length": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "prototype": {}
      },
      "required": [
        "arguments",
        "caller",
        "length",
        "name",
        "prototype"
      ],
      "type": "object"
    },
    "Functional<\"center\"|\"left\"|\"right\"|\"bottom\"|\"top\"|\"top-right\"|\"top-left\"|\"bottom-right\"|\"bottom-left\">": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "enum": [
            "bottom",
            "bottom-left",
            "bottom-right",
            "center",
            "left",
            "right",
            "top",
            "top-left",
            "top-right"
          ],
          "type": "string"
        }
      ]
    },
    "Geolocation": {
      "type": "object"
    },
    "GradientPropValue<number>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "number"
        }
      ],
      "description": "gradient"
    },
    "GraphicType": {
      "enum": [
        "arc",
        "arc3d",
        "area",
        "circle",
        "ellipse",
        "glyph",
        "group",
        "image",
        "line",
        "path",
        "polygon",
        "pyramid3d",
        "rect",
        "rect3d",
        "richtext",
        "shadowroot",
        "symbol",
        "text"
      ],
      "type": "string"
    },
    "HTMLAnchorElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "charset": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "coords": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "download": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hash": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "hreflang": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "origin": {
          "type": "string"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "password": {
          "type": "string"
        },
        "pathname": {
          "type": "string"
        },
        "ping": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "protocol": {
          "type": "string"
        },
        "referrerPolicy": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "relList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "rev": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "search": {
          "type": "string"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "shape": {
          "type": "string"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "charset",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "coords",
        "dataset",
        "dir",
        "download",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "hash",
        "hidden",
        "host",
        "hostname",
        "href",
        "hreflang",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "name",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "origin",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "password",
        "pathname",
        "ping",
        "port",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "protocol",
        "referrerPolicy",
        "rel",
        "relList",
        "rev",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "search",
        "shadowRoot",
        "shape",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "target",
        "text",
        "textContent",
        "title",
        "translate",
        "type",
        "username"
      ],
      "type": "object"
    },
    "HTMLAreaElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "coords": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "download": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hash": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "noHref": {
          "type": "boolean"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "origin": {
          "type": "string"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "password": {
          "type": "string"
        },
        "pathname": {
          "type": "string"
        },
        "ping": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "protocol": {
          "type": "string"
        },
        "referrerPolicy": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "relList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "search": {
          "type": "string"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "shape": {
          "type": "string"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "alt",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "coords",
        "dataset",
        "dir",
        "download",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "hash",
        "hidden",
        "host",
        "hostname",
        "href",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "noHref",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "origin",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "password",
        "pathname",
        "ping",
        "port",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "protocol",
        "referrerPolicy",
        "rel",
        "relList",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "search",
        "shadowRoot",
        "shape",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "target",
        "textContent",
        "title",
        "translate",
        "username"
      ],
      "type": "object"
    },
    "HTMLCanvasElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "height": {
          "type": "number"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "dataset",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "height",
        "hidden",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate",
        "width"
      ],
      "type": "object"
    },
    "HTMLElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "dataset",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "hidden",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate"
      ],
      "type": "object"
    },
    "HTMLEmbedElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "align": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "height": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "src": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "width": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "align",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "dataset",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "height",
        "hidden",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "name",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "src",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate",
        "type",
        "width"
      ],
      "type": "object"
    },
    "HTMLHeadElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "dataset",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "hidden",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate"
      ],
      "type": "object"
    },
    "HTMLImageElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "align": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "border": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "complete": {
          "type": "boolean"
        },
        "contentEditable": {
          "type": "string"
        },
        "crossOrigin": {
          "type": "string"
        },
        "currentSrc": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "decoding": {
          "enum": [
            "async",
            "auto",
            "sync"
          ],
          "type": "string"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "height": {
          "type": "number"
        },
        "hidden": {
          "type": "boolean"
        },
        "hspace": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "isMap": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "loading": {
          "enum": [
            "eager",
            "lazy"
          ],
          "type": "string"
        },
        "localName": {
          "type": "string"
        },
        "longDesc": {
          "type": "string"
        },
        "lowsrc": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "naturalHeight": {
          "type": "number"
        },
        "naturalWidth": {
          "type": "number"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "referrerPolicy": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "sizes": {
          "type": "string"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "src": {
          "type": "string"
        },
        "srcset": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "useMap": {
          "type": "string"
        },
        "vspace": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "align",
        "alt",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "border",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "complete",
        "contentEditable",
        "crossOrigin",
        "currentSrc",
        "dataset",
        "decoding",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "height",
        "hidden",
        "hspace",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "isMap",
        "lang",
        "lastChild",
        "lastElementChild",
        "loading",
        "localName",
        "longDesc",
        "lowsrc",
        "name",
        "namespaceURI",
        "naturalHeight",
        "naturalWidth",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "referrerPolicy",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "sizes",
        "slot",
        "spellcheck",
        "src",
        "srcset",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate",
        "useMap",
        "vspace",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "HTMLOrSVGScriptElement": {
      "anyOf": [
        {
          "$ref": "#/definitions/HTMLScriptElement"
        },
        {
          "$ref": "#/definitions/SVGScriptElement"
        }
      ]
    },
    "HTMLScriptElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "async": {
          "type": "boolean"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "charset": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "crossOrigin": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "defer": {
          "type": "boolean"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hidden": {
          "type": "boolean"
        },
        "htmlFor": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "integrity": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "noModule": {
          "type": "boolean"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "referrerPolicy": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "src": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "async",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "charset",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "crossOrigin",
        "dataset",
        "defer",
        "dir",
        "draggable",
        "enterKeyHint",
        "event",
        "firstChild",
        "firstElementChild",
        "hidden",
        "htmlFor",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "integrity",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "noModule",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "referrerPolicy",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "src",
        "style",
        "tabIndex",
        "tagName",
        "text",
        "textContent",
        "title",
        "translate",
        "type"
      ],
      "type": "object"
    },
    "HTMLSlotElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "accessKey": {
          "type": "string"
        },
        "accessKeyLabel": {
          "type": "string"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autocapitalize": {
          "type": "string"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {
          "type": "string"
        },
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "contentEditable": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "dir": {
          "type": "string"
        },
        "draggable": {
          "type": "boolean"
        },
        "enterKeyHint": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inert": {
          "type": "boolean"
        },
        "innerHTML": {
          "type": "string"
        },
        "innerText": {
          "type": "string"
        },
        "inputMode": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "isContentEditable": {
          "type": "boolean"
        },
        "lang": {
          "type": "string"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "offsetHeight": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetParent": {
          "$ref": "#/definitions/Element"
        },
        "offsetTop": {
          "type": "number"
        },
        "offsetWidth": {
          "type": "number"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "outerText": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "spellcheck": {
          "type": "boolean"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "translate": {
          "type": "boolean"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "accessKey",
        "accessKeyLabel",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autocapitalize",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "contentEditable",
        "dataset",
        "dir",
        "draggable",
        "enterKeyHint",
        "firstChild",
        "firstElementChild",
        "hidden",
        "id",
        "inert",
        "innerHTML",
        "innerText",
        "inputMode",
        "isConnected",
        "isContentEditable",
        "lang",
        "lastChild",
        "lastElementChild",
        "localName",
        "name",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "offsetHeight",
        "offsetLeft",
        "offsetParent",
        "offsetTop",
        "offsetWidth",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "outerText",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "spellcheck",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "title",
        "translate"
      ],
      "type": "object"
    },
    "History": {
      "properties": {
        "length": {
          "type": "number"
        },
        "scrollRestoration": {
          "$ref": "#/definitions/ScrollRestoration"
        },
        "state": {}
      },
      "required": [
        "length",
        "scrollRestoration",
        "state"
      ],
      "type": "object"
    },
    "IAnimationChannelAttrs": {
      "type": "object"
    },
    "IAnimationConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/IAnimationTimeline"
        },
        {
          "$ref": "#/definitions/IAnimationTypeConfig"
        }
      ]
    },
    "IAnimationControlOptions": {
      "properties": {
        "immediatelyApply": {
          "type": "boolean"
        },
        "stopWhenStateChange": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IAnimationCustomConstructor": {
      "type": "object"
    },
    "IAnimationEffect": {
      "properties": {
        "channel": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationChannelAttrs"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "custom": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IAnimationCustomConstructor"
            }
          ]
        },
        "customParameters": {},
        "easing": {
          "$ref": "#/definitions/EasingType"
        },
        "options": {},
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IAnimationSpec<\"bar\",BarAppearPreset>": {
      "properties": {
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        }
      },
      "type": "object"
    },
    "IAnimationTimeSlice": {
      "properties": {
        "delay": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "delayAfter": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "duration": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "effects": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationEffect"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationEffect"
              },
              "type": "array"
            }
          ]
        }
      },
      "required": [
        "effects"
      ],
      "type": "object"
    },
    "IAnimationTimeline": {
      "properties": {
        "controlOptions": {
          "$ref": "#/definitions/IAnimationControlOptions"
        },
        "id": {
          "type": "string"
        },
        "loop": {
          "$ref": "#/definitions/MarkFunctionValueType<number|boolean>"
        },
        "oneByOne": {
          "$ref": "#/definitions/MarkFunctionValueType<number|boolean>"
        },
        "partitioner": {
          "typeof": "function"
        },
        "sort": {
          "typeof": "function"
        },
        "startTime": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "timeSlices": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeSlice"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationTimeSlice"
              },
              "type": "array"
            }
          ]
        },
        "totalTime": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        }
      },
      "required": [
        "timeSlices"
      ],
      "type": "object"
    },
    "IAnimationTypeConfig": {
      "properties": {
        "channel": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationChannelAttrs"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "controlOptions": {
          "$ref": "#/definitions/IAnimationControlOptions"
        },
        "custom": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IAnimationCustomConstructor"
            }
          ]
        },
        "customParameters": {},
        "delay": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "delayAfter": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "duration": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "easing": {
          "$ref": "#/definitions/EasingType"
        },
        "loop": {
          "type": [
            "number",
            "boolean"
          ]
        },
        "oneByOne": {
          "$ref": "#/definitions/MarkFunctionValueType<number|boolean>"
        },
        "options": {},
        "startTime": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "totalTime": {
          "$ref": "#/definitions/MarkFunctionValueType<number>"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IArc3dMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "autoCapConical": {
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效",
          "type": "boolean"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "description": "arc的中心点偏移距离",
          "type": "number"
        },
        "cornerRadius": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "innerRadius": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "outerRadius": {
          "type": "number"
        },
        "padAngle": {
          "type": "number"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IArcLabelLayoutSpec": {
      "properties": {
        "align": {
          "$ref": "#/definitions/ArcLabelAlignType"
        },
        "strategy": {
          "$ref": "#/definitions/ArcLabelStrategyType",
          "default": "'priority'",
          "description": "标签布局策略"
        },
        "tangentConstraint": {
          "default": true,
          "description": "是否启用切线约束",
          "type": "boolean"
        },
        "textAlign": {
          "$ref": "#/definitions/ArcLabelAlignType",
          "default": "'arc'",
          "description": "标签对齐方式"
        }
      },
      "type": "object"
    },
    "IArcLabelLineSpec": {
      "properties": {
        "customShape": {
          "typeof": "function"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "line1MinLength": {
          "default": 20,
          "description": "引导线 line1 部分最小长度",
          "type": "number"
        },
        "line2MinLength": {
          "default": 10,
          "description": "引导线 line2 部分最小长度",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "smooth": {
          "default": false,
          "description": "引导线是否光滑",
          "since": "1.4.0",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<ILineMarkSpec>|IMarkStateSpec<ILineMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ILineMarkSpec>_2",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "visible": {
          "default": true,
          "description": "是否显示引导线",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IArcLabelSpec": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "centerOffset": {
          "description": "中心点偏移距离",
          "type": "number"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "coverEnable": {
          "default": false,
          "description": "是否允许标签重叠",
          "type": "boolean"
        },
        "customLayoutFunc": {
          "typeof": "function"
        },
        "customOverlapFunc": {
          "typeof": "function"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "formatter": {
          "description": "字符串模版\n用{}包裹变量名的字符串模版, 变量名取自数据属性值\n在饼图中支持配置百分比, {_percent_}\neg: 'type={type},value={value},percent={_percent_}'",
          "since": "1.7.0",
          "type": "string"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "labelLayout": {
          "description": "标签布局",
          "enum": [
            "region",
            "series"
          ],
          "type": "string"
        },
        "layout": {
          "$ref": "#/definitions/IArcLabelLayoutSpec",
          "description": "标签布局配置"
        },
        "layoutArcGap": {
          "default": 6,
          "description": "扇区间标签的间隔",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "line": {
          "$ref": "#/definitions/IArcLabelLineSpec",
          "description": "标签引导线样式"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "default": "'outside'",
          "description": "标签布局方式",
          "enum": [
            "inside",
            "outside"
          ],
          "type": "string"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "rotate": {
          "default": true,
          "description": "是否允许标签旋转",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "showRule": {
          "default": "'all'",
          "description": "标签内容显示规则",
          "enum": [
            "all",
            "headAndTail",
            "max",
            "min",
            "minAndMax"
          ],
          "type": "string"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "spaceWidth": {
          "default": 5,
          "description": "文字与引导线间隔宽度",
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "标签文字样式"
        },
        "support3d": {
          "description": "是否支持3D",
          "type": "boolean"
        },
        "textType": {
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IArcMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "autoCapConical": {
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效",
          "type": "boolean"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "description": "arc的中心点偏移距离",
          "type": "number"
        },
        "cornerRadius": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "innerRadius": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "outerRadius": {
          "type": "number"
        },
        "padAngle": {
          "type": "number"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IAreaChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "areaLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "面积图元标签配置",
          "since": "1.7.0"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IAreaSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "area",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IAreaMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "curveType": {
          "$ref": "#/definitions/InterpolateType"
        },
        "defined": {
          "type": "boolean"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "orient": {
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IAreaSegment": {
      "properties": {
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        }
      },
      "required": [
        "points"
      ],
      "type": "object"
    },
    "IAreaSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "areaLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "面积图元标签配置",
          "since": "1.7.0"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "area",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IAreaSeriesTheme": {
      "properties": {
        "area": {
          "$ref": "#/definitions/Partial<IMarkTheme<IAreaMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILineLikeLabelSpec>"
        },
        "line": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>"
        },
        "point": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "IAxisCommonTheme": {
      "properties": {
        "domainLine": {
          "$ref": "#/definitions/IDomainLine",
          "description": "轴线配置"
        },
        "grid": {
          "$ref": "#/definitions/IGrid",
          "description": "网格线配置"
        },
        "label": {
          "$ref": "#/definitions/ILabel",
          "description": "轴标签配置"
        },
        "subGrid": {
          "$ref": "#/definitions/IGrid",
          "description": "网格线配置"
        },
        "subTick": {
          "$ref": "#/definitions/ISubTick",
          "description": "轴刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "title": {
          "$ref": "#/definitions/ITitle",
          "description": "轴标题配置"
        }
      },
      "type": "object"
    },
    "IAxisItem<IRectMarkSpec>": {
      "properties": {
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IAxisItem<ISymbolMarkSpec>": {
      "properties": {
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IBackgroundSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/IBackgroundStyleSpec"
        },
        {
          "type": "string"
        }
      ]
    },
    "IBackgroundStyleSpec": {
      "allOf": [
        {
          "additionalProperties": false,
          "description": "style格式转换",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IBandAxisSpec": {
      "properties": {
        "bandPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "同时设置轴的 paddingInner 和 paddingOuter\n**因为有可能存在多层 scale( xField 设置成了数组，即分组场景），所以支持了数组类型，用于多层 scale 的 bandPadding 配置**"
        },
        "bandPosition": {
          "default": 0.5,
          "description": "`bandPosition` 是一个可选参数，用于指定数据点在 band 轴上的位置。它的含义是确定数据点在 band 轴上的位置偏移量，相对于 band 轴的起始位置。\n`bandPosition` 的取值范围是从 0 到 1，其中 0 表示数据点位于 band 轴的起始位置，1 表示数据点位于 band 轴的结束位置。",
          "type": "number"
        },
        "domain": {
          "description": "配置离散轴的数值范围",
          "items": {
            "$ref": "#/definitions/StringOrNumber"
          },
          "since": "1.1.0",
          "type": "array"
        },
        "paddingInner": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0.1,
          "description": "band 轴的内边距\n** 因为有可能存在多层 scale( xField 设置成了数组，即分组场景），所以支持了数组类型，用于多层 scale 的 paddingInner 配置**"
        },
        "paddingOuter": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0.3,
          "description": "band 轴的外边距\n** 因为有可能存在多层 scale( xField 设置成了数组，即分组场景），所以支持了数组类型，用于多层 scale 的 paddingOuter 配置**"
        },
        "trimPadding": {
          "default": false,
          "description": "是否去除 band 轴两端的留白，如果为 true，则两端的 padding 为 0，\n**并且 bandPadding、paddingInner 和 paddingOuter 的设置将被忽略**。",
          "since": "1.7.0",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IBar3dChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IBar3dSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "bar3d",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\ny轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IBar3dSeriesSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IBarSeriesSpec,\"type\">"
        },
        {
          "$ref": "#/definitions/ICartesianSeriesSpec"
        },
        {
          "$ref": "#/definitions/IAnimationSpec<\"bar\",BarAppearPreset>"
        }
      ]
    },
    "IBar3dSeriesTheme": {
      "properties": {
        "bar3d": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRect3dMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        }
      },
      "type": "object"
    },
    "IBarChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IBarSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "bar",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IBarSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "bar",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IBarSeriesTheme": {
      "properties": {
        "bar": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度",
          "type": "number"
        },
        "barWidth": {
          "description": "柱体宽度",
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        }
      },
      "type": "object"
    },
    "IBaseLayoutSpec": {
      "properties": {
        "type": {
          "const": "base",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IBorder": {
      "description": "border",
      "properties": {
        "distance": {
          "type": [
            "string",
            "number"
          ]
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        }
      },
      "required": [
        "distance"
      ],
      "type": "object"
    },
    "IBounds": {
      "properties": {
        "add": {
          "typeof": "function"
        },
        "alignsWith": {
          "typeof": "function"
        },
        "clear": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "contains": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "copy": {
          "typeof": "function"
        },
        "empty": {
          "typeof": "function"
        },
        "encloses": {
          "typeof": "function"
        },
        "equals": {
          "typeof": "function"
        },
        "expand": {
          "typeof": "function"
        },
        "height": {
          "typeof": "function"
        },
        "intersect": {
          "typeof": "function"
        },
        "intersects": {
          "typeof": "function"
        },
        "rotate": {
          "typeof": "function"
        },
        "round": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleX": {
          "typeof": "function"
        },
        "scaleY": {
          "typeof": "function"
        },
        "set": {
          "typeof": "function"
        },
        "setValue": {
          "typeof": "function"
        },
        "transformWithMatrix": {
          "typeof": "function"
        },
        "translate": {
          "typeof": "function"
        },
        "union": {
          "typeof": "function"
        },
        "width": {
          "typeof": "function"
        },
        "x1": {
          "type": "number"
        },
        "x2": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "y2": {
          "type": "number"
        }
      },
      "required": [
        "add",
        "alignsWith",
        "clear",
        "clone",
        "contains",
        "containsPoint",
        "copy",
        "empty",
        "encloses",
        "equals",
        "expand",
        "height",
        "intersect",
        "intersects",
        "rotate",
        "round",
        "scale",
        "scaleX",
        "scaleY",
        "set",
        "setValue",
        "transformWithMatrix",
        "translate",
        "union",
        "width",
        "x1",
        "x2",
        "y1",
        "y2"
      ],
      "type": "object"
    },
    "IBoundsLike": {
      "properties": {
        "x1": {
          "type": "number"
        },
        "x2": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "y2": {
          "type": "number"
        }
      },
      "required": [
        "x1",
        "x2",
        "y1",
        "y2"
      ],
      "type": "object"
    },
    "IBoxPlotChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "boxPlot": {
          "$ref": "#/definitions/IMarkSpec<IBoxPlotMarkSpec>",
          "description": "图元配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "maxField": {
          "description": "最大值字段",
          "type": "string"
        },
        "medianField": {
          "description": "中位数字段",
          "type": "string"
        },
        "minField": {
          "description": "最小值字段",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outliersField": {
          "description": "异常值字段",
          "type": "string"
        },
        "outliersStyle": {
          "$ref": "#/definitions/IOutlierMarkSpec",
          "description": "异常值样式配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "q1Field": {
          "description": "q1字段",
          "type": "string"
        },
        "q3Field": {
          "description": "q3字段",
          "type": "string"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IBoxPlotSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "boxPlot",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段（direction=vertical时生效）"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段（direction=horizontal时生效）"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IBoxPlotMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boxFill": {
          "description": "盒子填充颜色，为空则不填充",
          "type": "string"
        },
        "boxWidth": {
          "description": "box宽度",
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "description": "box描边宽度",
          "type": "number"
        },
        "max": {
          "typeof": "function"
        },
        "median": {
          "typeof": "function"
        },
        "min": {
          "typeof": "function"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "q1": {
          "typeof": "function"
        },
        "q3": {
          "typeof": "function"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "shaftFillOpacity": {
          "description": "中轴线透明度，仅当shaftType=bar时生效",
          "type": "number"
        },
        "shaftShape": {
          "$ref": "#/definitions/BoxPlotShaftShape",
          "description": "中轴线类型"
        },
        "shaftWidth": {
          "description": "最大最小值宽度",
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IBoxPlotSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "boxPlot": {
          "$ref": "#/definitions/IMarkSpec<IBoxPlotMarkSpec>",
          "description": "图元配置"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "maxField": {
          "description": "最大值字段",
          "type": "string"
        },
        "medianField": {
          "description": "中位数字段",
          "type": "string"
        },
        "minField": {
          "description": "最小值字段",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outliersField": {
          "description": "异常值字段",
          "type": "string"
        },
        "outliersStyle": {
          "$ref": "#/definitions/IOutlierMarkSpec",
          "description": "异常值样式配置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "q1Field": {
          "description": "q1字段",
          "type": "string"
        },
        "q3Field": {
          "description": "q3字段",
          "type": "string"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "boxPlot",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段（direction=vertical时生效）"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段（direction=horizontal时生效）"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IBoxPlotSeriesTheme": {
      "properties": {
        "boxPlot": {
          "$ref": "#/definitions/Partial<IMarkTheme<IBoxPlotMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        }
      },
      "type": "object"
    },
    "IBrushMode": {
      "enum": [
        "multiple",
        "single"
      ],
      "type": "string"
    },
    "IBrushSpec": {
      "properties": {
        "brushLinkSeriesId": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "刷取联动的seriesId"
        },
        "brushLinkSeriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "刷取联动的seriesIndex"
        },
        "brushMode": {
          "$ref": "#/definitions/IBrushMode",
          "default": "'single'",
          "description": "框选模式"
        },
        "brushMoved": {
          "default": true,
          "description": "是否可被平移",
          "type": "boolean"
        },
        "brushType": {
          "$ref": "#/definitions/IBrushType",
          "default": "'rect'",
          "description": "框选类型"
        },
        "delayTime": {
          "default": 10,
          "description": "事件触发延迟时长",
          "type": "number"
        },
        "delayType": {
          "$ref": "#/definitions/IDelayType",
          "default": "'throttle'",
          "description": "事件触发延迟类型"
        },
        "id": {
          "description": "组件 id",
          "type": "string"
        },
        "inBrush": {
          "$ref": "#/definitions/selectedItemStyle",
          "description": "框选范围内的图元样式"
        },
        "outOfBrush": {
          "$ref": "#/definitions/selectedItemStyle",
          "description": "框选范围外的图元样式"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "可刷取的regionId"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "可刷取的regionIndex"
        },
        "removeOnClick": {
          "default": true,
          "description": "brushMode为'single'时，是否单击清除选框",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "可刷取的seriesId"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "可刷取的seriesIndex"
        },
        "sizeThreshold": {
          "default": 5,
          "description": "brush选框的大小阈值",
          "since": "1.2.0",
          "type": "number"
        },
        "style": {
          "$ref": "#/definitions/Partial<IPolygonMarkSpec>",
          "description": "brush 的框选样式"
        },
        "visible": {
          "default": true,
          "description": "组件可见性",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IBrushTheme": {
      "properties": {
        "brushMode": {
          "$ref": "#/definitions/IBrushMode",
          "default": "'single'",
          "description": "框选模式"
        },
        "brushMoved": {
          "default": true,
          "description": "是否可被平移",
          "type": "boolean"
        },
        "brushType": {
          "$ref": "#/definitions/IBrushType",
          "default": "'rect'",
          "description": "框选类型"
        },
        "delayTime": {
          "default": 10,
          "description": "事件触发延迟时长",
          "type": "number"
        },
        "delayType": {
          "$ref": "#/definitions/IDelayType",
          "default": "'throttle'",
          "description": "事件触发延迟类型"
        },
        "inBrush": {
          "$ref": "#/definitions/selectedItemStyle",
          "description": "框选范围内的图元样式"
        },
        "outOfBrush": {
          "$ref": "#/definitions/selectedItemStyle",
          "description": "框选范围外的图元样式"
        },
        "removeOnClick": {
          "default": true,
          "description": "brushMode为'single'时，是否单击清除选框",
          "type": "boolean"
        },
        "sizeThreshold": {
          "default": 5,
          "description": "brush选框的大小阈值",
          "since": "1.2.0",
          "type": "number"
        },
        "style": {
          "$ref": "#/definitions/Partial<IPolygonMarkSpec>",
          "description": "brush 的框选样式"
        }
      },
      "type": "object"
    },
    "IBrushType": {
      "enum": [
        "polygon",
        "rect",
        "x",
        "y"
      ],
      "type": "string"
    },
    "ICamera": {
      "properties": {
        "getProjectionMatrix": {
          "typeof": "function"
        },
        "getProjectionScale": {
          "typeof": "function"
        },
        "getViewMatrix": {
          "typeof": "function"
        },
        "params": {
          "typeof": "function"
        },
        "view": {
          "typeof": "function"
        },
        "vp": {
          "typeof": "function"
        }
      },
      "required": [
        "getProjectionMatrix",
        "getProjectionScale",
        "getViewMatrix",
        "params",
        "view",
        "vp"
      ],
      "type": "object"
    },
    "ICanvas": {
      "properties": {
        "applyPosition": {
          "typeof": "function"
        },
        "convertToBlob": {
          "typeof": "function"
        },
        "displayHeight": {
          "type": "number"
        },
        "displayWidth": {
          "type": "number"
        },
        "dpr": {
          "type": "number"
        },
        "getContext": {
          "typeof": "function"
        },
        "getNativeCanvas": {
          "typeof": "function"
        },
        "height": {
          "type": "number"
        },
        "hide": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "nativeCanvas": {},
        "readPixels": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "resetStyle": {
          "typeof": "function"
        },
        "resize": {
          "typeof": "function"
        },
        "show": {
          "typeof": "function"
        },
        "toDataURL": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "transferToImageBitmap": {
          "typeof": "function"
        },
        "visiable": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "applyPosition",
        "convertToBlob",
        "displayHeight",
        "displayWidth",
        "dpr",
        "getContext",
        "getNativeCanvas",
        "height",
        "hide",
        "id",
        "nativeCanvas",
        "readPixels",
        "release",
        "resetStyle",
        "resize",
        "show",
        "toDataURL",
        "transferToImageBitmap",
        "visiable",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "ICartesianAxisCommonTheme": {
      "properties": {
        "background": {
          "typeof": "function"
        },
        "domainLine": {
          "$ref": "#/definitions/ICartesianDomainLine",
          "description": "轴线配置"
        },
        "grid": {
          "$ref": "#/definitions/IGrid",
          "description": "网格线配置"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "label": {
          "$ref": "#/definitions/ICartesianLabel",
          "description": "轴标签配置"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "subGrid": {
          "$ref": "#/definitions/IGrid",
          "description": "网格线配置"
        },
        "subTick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "title": {
          "$ref": "#/definitions/ICartesianTitle",
          "description": "轴标题配置"
        },
        "unit": {
          "typeof": "function"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        }
      },
      "type": "object"
    },
    "ICartesianAxisSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/ICartesianLinearAxisSpec"
        },
        {
          "$ref": "#/definitions/ICartesianBandAxisSpec"
        },
        {
          "$ref": "#/definitions/ICartesianTimeAxisSpec"
        },
        {
          "$ref": "#/definitions/ICartesianLogAxisSpec"
        },
        {
          "$ref": "#/definitions/ICartesianSymlogAxisSpec"
        }
      ],
      "description": "spec"
    },
    "ICartesianBandAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ICommonAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IBandAxisSpec"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianCrosshairSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "gridZIndex": {
          "description": "crosshair 辅助图形的显示层级",
          "type": "number"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "labelZIndex": {
          "description": "crosshair 文本的显示层级",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "trigger": {
          "$ref": "#/definitions/CrossHairTrigger",
          "default": "'hover'",
          "description": "是否可以通过 点击 固定住一组 crosshair，也可以同时触发。"
        },
        "triggerOff": {
          "anyOf": [
            {
              "items": [
                {
                  "const": "click",
                  "type": "string"
                },
                {
                  "const": "hover",
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "enum": [
                "click",
                "hover",
                "none"
              ],
              "type": "string"
            }
          ],
          "description": "隐藏crosshair的触发方式（目前仅支持和trigger一致的设置以及none）"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "xField": {
          "$ref": "#/definitions/ICrosshairCategoryFieldSpec",
          "description": "笛卡尔坐标系下 x 轴上 crosshair 配置"
        },
        "yField": {
          "$ref": "#/definitions/ICrosshairCategoryFieldSpec",
          "description": "笛卡尔坐标系下 y 轴上 crosshair 配置"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICartesianDomainLine": {
      "allOf": [
        {
          "$ref": "#/definitions/IDomainLine"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianLabel": {
      "allOf": [
        {
          "$ref": "#/definitions/ILabel"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/AxisLabelOverlap"
        }
      ]
    },
    "ICartesianLinearAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ICommonAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/ILinearAxisSpec"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianLogAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ICommonAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/ILinearAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ICartesianSymlogAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ICommonAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/ILinearAxisSpec"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianTimeAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/Omit<ICartesianAxisCommonSpec,\"inverse\">"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICartesianTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/ITitle"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ICirclePackingChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "circlePacking": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "图元配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "对所有层生效"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "layoutPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 5,
          "description": "支持传入数组, 单独控制某一层的内边距"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ICirclePackingSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "circlePacking",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ICirclePackingSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "circlePacking": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "图元配置"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "对所有层生效"
        },
        "layoutPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 5,
          "description": "支持传入数组, 单独控制某一层的内边距"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "circlePacking",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ICirclePackingSeriesTheme": {
      "properties": {
        "circlePacking": {
          "typeof": "function"
        },
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "typeof": "function"
        },
        "layoutPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "outerRadius": {
          "type": "number"
        },
        "radius": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICircularProgressChartSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/ICartesianAxisSpec"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IPolarAxisSpec"
              },
              "type": "array"
            }
          ],
          "description": "轴配置"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "分类字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "cornerRadius": {
          "default": 0,
          "description": "进度条圆角半径",
          "type": "number"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maxValue": {
          "description": "数据最大值，默认为 1",
          "type": "number"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progress": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "进度条样式"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "type": "string"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ICircularProgressSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "背景样式"
        },
        "type": {
          "const": "circularProgress",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ICircularProgressSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "分类字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "default": 0,
          "description": "进度条圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "maxValue": {
          "description": "数据最大值，默认为 1",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progress": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "进度条样式"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "type": "string"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "背景样式"
        },
        "type": {
          "const": "circularProgress",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ICircularProgressSeriesTheme": {
      "properties": {
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "outerRadius": {
          "type": "number"
        },
        "progress": {
          "$ref": "#/definitions/Partial<IMarkTheme<IProgressArcMarkSpec>>"
        },
        "radius": {
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出"
        },
        "startAngle": {
          "type": "number"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkTheme<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "track": {
          "$ref": "#/definitions/Partial<IMarkTheme<IProgressArcMarkSpec>>"
        }
      },
      "type": "object"
    },
    "IClipRangeByDimensionType": {
      "enum": [
        "auto",
        "default",
        "x",
        "y"
      ],
      "type": "string"
    },
    "IColor": {
      "anyOf": [
        {
          "$ref": "#/definitions/ILinearGradient"
        },
        {
          "$ref": "#/definitions/IRadialGradient"
        },
        {
          "$ref": "#/definitions/IConicalGradient"
        },
        {
          "type": "string"
        }
      ]
    },
    "IColorKey": {
      "description": "语义化色值的色值索引",
      "properties": {
        "a": {
          "description": "透明度系数（可选，0~1）",
          "type": "number"
        },
        "default": {
          "$ref": "#/definitions/ColorSchemeItem",
          "description": "默认色值，在没有取到 key 对应的色值时返回",
          "since": "1.3.0"
        },
        "key": {
          "description": "颜色 token",
          "type": "string"
        },
        "l": {
          "description": "明度系数（可选，0~1）",
          "type": "number"
        },
        "type": {
          "const": "palette",
          "description": "颜色type声明",
          "type": "string"
        }
      },
      "required": [
        "key",
        "type"
      ],
      "type": "object"
    },
    "IColorLegendSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IComponentSpec,\"orient\">"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IColorLegendTheme": {
      "properties": {
        "horizontal": {
          "$ref": "#/definitions/IContinuousLegendTheme"
        },
        "vertical": {
          "$ref": "#/definitions/IContinuousLegendTheme"
        }
      },
      "type": "object"
    },
    "ICommonAxisSpec": {
      "properties": {
        "animation": {
          "default": false,
          "description": "是否开启动画，默认关闭",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "hover": {
          "default": false,
          "description": "是否开启 hover 悬浮交互，默认关闭",
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "inverse": {
          "default": false,
          "description": "是否开启反向坐标轴。",
          "type": "boolean"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "sampling": {
          "default": true,
          "description": "是否开启轴数据采样，默认开启。\n轴采样开启之后，会对轴数据进行采样显示，防止轴数据的重叠。\n通过配置 `label.minGap` 可以控制轴标签之间的间距。",
          "since": "1.1.0",
          "type": "boolean"
        },
        "select": {
          "default": false,
          "description": "是否开启 select 选中交互，默认关闭",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "subTick": {
          "$ref": "#/definitions/ISubTick",
          "description": "子刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "type": {
          "$ref": "#/definitions/AxisType",
          "description": "轴类型"
        },
        "visible": {
          "default": true,
          "description": "是否显示坐标轴",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICommonChartSpec": {
      "properties": {
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/ICartesianAxisSpec"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IPolarAxisSpec"
              },
              "type": "array"
            }
          ],
          "description": "坐标轴配置"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IPolarCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "$ref": "#/definitions/IMarkAreaSpec",
          "description": "**仅适用于笛卡尔坐标系**，参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "**仅适用于笛卡尔坐标系**，参考线配置"
        },
        "markPoint": {
          "$ref": "#/definitions/IMarkPointSpec",
          "description": "**仅适用于笛卡尔坐标系**，参考点配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IPieSeriesSpec"
              },
              {
                "$ref": "#/definitions/IPie3dSeriesSpec"
              },
              {
                "$ref": "#/definitions/IBoxPlotSeriesSpec"
              },
              {
                "$ref": "#/definitions/ITreemapSeriesSpec"
              },
              {
                "$ref": "#/definitions/ISunburstSeriesSpec"
              },
              {
                "$ref": "#/definitions/ICirclePackingSeriesSpec"
              },
              {
                "$ref": "#/definitions/ILineSeriesSpec"
              },
              {
                "$ref": "#/definitions/IBarSeriesSpec"
              },
              {
                "$ref": "#/definitions/IBar3dSeriesSpec"
              },
              {
                "$ref": "#/definitions/IAreaSeriesSpec"
              },
              {
                "$ref": "#/definitions/IMapSeriesSpec"
              },
              {
                "$ref": "#/definitions/IScatterSeriesSpec"
              },
              {
                "$ref": "#/definitions/IRoseSeriesSpec"
              },
              {
                "$ref": "#/definitions/IRadarSeriesSpec"
              },
              {
                "$ref": "#/definitions/IDotSeriesSpec"
              },
              {
                "$ref": "#/definitions/ILinkSeriesSpec"
              },
              {
                "$ref": "#/definitions/ICircularProgressSeriesSpec"
              },
              {
                "$ref": "#/definitions/ILinearProgressSeriesSpec"
              },
              {
                "$ref": "#/definitions/IWordCloudSeriesSpec"
              },
              {
                "$ref": "#/definitions/IWordCloud3dSeriesSpec"
              },
              {
                "$ref": "#/definitions/IFunnelSeriesSpec"
              },
              {
                "$ref": "#/definitions/IFunnel3dSeriesSpec"
              },
              {
                "$ref": "#/definitions/ISankeySeriesSpec"
              },
              {
                "$ref": "#/definitions/IGaugePointerSeriesSpec"
              },
              {
                "$ref": "#/definitions/IGaugeSeriesSpec"
              },
              {
                "$ref": "#/definitions/IHeatmapSeriesSpec"
              },
              {
                "$ref": "#/definitions/ICorrelationSeriesSpec"
              },
              {
                "$ref": "#/definitions/IRangeColumnChartSpec"
              },
              {
                "$ref": "#/definitions/IRangeAreaChartSpec"
              },
              {
                "$ref": "#/definitions/IWaterfallSeriesSpec"
              }
            ]
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "type": {
          "const": "common",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IComponentSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IComponentTheme": {
      "properties": {
        "axis": {
          "$ref": "#/definitions/IAxisCommonTheme",
          "description": "通用坐标轴配置"
        },
        "axisAngle": {
          "$ref": "#/definitions/IPolarAxisCommonTheme",
          "description": "极坐标系下角度轴配置"
        },
        "axisBand": {
          "$ref": "#/definitions/IAxisCommonTheme",
          "description": "离散轴的通用配置"
        },
        "axisLinear": {
          "$ref": "#/definitions/IAxisCommonTheme",
          "description": "连续轴的通用配置"
        },
        "axisRadius": {
          "$ref": "#/definitions/IPolarAxisCommonTheme",
          "description": "极坐标系下半径轴配置"
        },
        "axisX": {
          "$ref": "#/definitions/ICartesianAxisCommonTheme",
          "description": "笛卡尔坐标系下 x 轴的配置"
        },
        "axisY": {
          "$ref": "#/definitions/ICartesianAxisCommonTheme",
          "description": "笛卡尔坐标系下 y 轴配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushTheme",
          "description": "框选配置"
        },
        "colorLegend": {
          "$ref": "#/definitions/IColorLegendTheme",
          "description": "连续颜色图例配置"
        },
        "crosshair": {
          "$ref": "#/definitions/ICrosshairTheme",
          "description": "crosshair 配置"
        },
        "dataZoom": {
          "$ref": "#/definitions/IDataZoomTheme",
          "description": "dataZoom 配置"
        },
        "discreteLegend": {
          "$ref": "#/definitions/IDiscreteLegendTheme",
          "description": "离散图例配置"
        },
        "indicator": {
          "$ref": "#/definitions/IIndicatorTheme",
          "description": "指标卡组件配置"
        },
        "mapLabel": {
          "$ref": "#/definitions/IMapLabelTheme",
          "description": "地图标签配置"
        },
        "markArea": {
          "$ref": "#/definitions/IMarkAreaTheme",
          "description": "markArea 标记配置"
        },
        "markLine": {
          "$ref": "#/definitions/IMarkLineTheme",
          "description": "markLine 标记配置"
        },
        "markPoint": {
          "$ref": "#/definitions/IMarkPointTheme<Partial<IMarkerSymbol>>",
          "description": "markPoint 标记配置"
        },
        "player": {
          "$ref": "#/definitions/IPlayerTheme",
          "description": "播放器配置"
        },
        "poptip": {
          "$ref": "#/definitions/IPoptipTheme",
          "description": "省略文本配置"
        },
        "scrollBar": {
          "$ref": "#/definitions/IScrollBarTheme",
          "description": "scrollbar 滚动条配置"
        },
        "sizeLegend": {
          "$ref": "#/definitions/ISizeLegendTheme",
          "description": "连续尺寸图例配置"
        },
        "title": {
          "$ref": "#/definitions/ITitleTheme",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipTheme<string|IColorKey>",
          "description": "tooltip 组件配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelTheme",
          "description": "堆叠总计标签配置",
          "since": "1.3.0"
        }
      },
      "type": "object"
    },
    "IConicalGradient": {
      "properties": {
        "endAngle": {
          "type": "number"
        },
        "gradient": {
          "const": "conical",
          "type": "string"
        },
        "startAngle": {
          "type": "number"
        },
        "stops": {
          "items": {
            "$ref": "#/definitions/IGradientStop"
          },
          "type": "array"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "IContext2d": {
      "additionalProperties": {},
      "properties": {
        "arc": {
          "typeof": "function"
        },
        "arcTo": {
          "typeof": "function"
        },
        "beginPath": {
          "typeof": "function"
        },
        "bezierCurveTo": {
          "typeof": "function"
        },
        "camera": {
          "$ref": "#/definitions/ICamera"
        },
        "canvas": {
          "$ref": "#/definitions/ICanvas"
        },
        "clear": {
          "typeof": "function"
        },
        "clearMatrix": {
          "typeof": "function"
        },
        "clearRect": {
          "typeof": "function"
        },
        "clip": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "closePath": {
          "typeof": "function"
        },
        "createConicGradient": {
          "typeof": "function"
        },
        "createImageData": {
          "typeof": "function"
        },
        "createLinearGradient": {
          "typeof": "function"
        },
        "createPattern": {
          "typeof": "function"
        },
        "createRadialGradient": {
          "typeof": "function"
        },
        "currentMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "disableBeginPath": {
          "type": "boolean"
        },
        "disableFill": {
          "type": "boolean"
        },
        "disableStroke": {
          "type": "boolean"
        },
        "dpr": {
          "type": "number"
        },
        "draw": {
          "typeof": "function"
        },
        "drawImage": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "drawPromise": {
          "$ref": "#/definitions/Promise<any>"
        },
        "ellipse": {
          "typeof": "function"
        },
        "fill": {
          "typeof": "function"
        },
        "fillRect": {
          "typeof": "function"
        },
        "fillStyle": {
          "anyOf": [
            {
              "$ref": "#/definitions/CanvasGradient"
            },
            {
              "$ref": "#/definitions/CanvasPattern"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillText": {
          "typeof": "function"
        },
        "font": {
          "type": "string"
        },
        "getCanvas": {
          "typeof": "function"
        },
        "getContext": {
          "typeof": "function"
        },
        "getImageData": {
          "typeof": "function"
        },
        "getLineDash": {
          "typeof": "function"
        },
        "globalAlpha": {
          "type": "number"
        },
        "highPerformanceRestore": {
          "typeof": "function"
        },
        "highPerformanceSave": {
          "typeof": "function"
        },
        "inuse": {
          "type": "boolean"
        },
        "isPointInPath": {
          "typeof": "function"
        },
        "isPointInStroke": {
          "typeof": "function"
        },
        "lineCap": {
          "type": "string"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "type": "string"
        },
        "lineTo": {
          "typeof": "function"
        },
        "lineWidth": {
          "type": "number"
        },
        "measureText": {
          "typeof": "function"
        },
        "miterLimit": {
          "type": "number"
        },
        "modelMatrix": {
          "$ref": "#/definitions/mat4"
        },
        "moveTo": {
          "typeof": "function"
        },
        "nativeContext": {},
        "onlyTranslate": {
          "typeof": "function"
        },
        "project": {
          "typeof": "function"
        },
        "putImageData": {
          "typeof": "function"
        },
        "quadraticCurveTo": {
          "typeof": "function"
        },
        "rect": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "resetTransform": {
          "typeof": "function"
        },
        "restore": {
          "typeof": "function"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateAbout": {
          "typeof": "function"
        },
        "rotateDegrees": {
          "typeof": "function"
        },
        "rotateDegreesAbout": {
          "typeof": "function"
        },
        "save": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scalePoint": {
          "typeof": "function"
        },
        "setCommonStyle": {
          "typeof": "function"
        },
        "setLineDash": {
          "typeof": "function"
        },
        "setShadowBlendStyle": {
          "typeof": "function"
        },
        "setStrokeStyle": {
          "typeof": "function"
        },
        "setTextStyle": {
          "typeof": "function"
        },
        "setTextStyleWithoutAlignBaseline": {
          "typeof": "function"
        },
        "setTransform": {
          "typeof": "function"
        },
        "setTransformForCurrent": {
          "typeof": "function"
        },
        "setTransformFromMatrix": {
          "typeof": "function"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "stack": {
          "items": {
            "$ref": "#/definitions/IMatrix"
          },
          "type": "array"
        },
        "stroke": {
          "typeof": "function"
        },
        "strokeRect": {
          "typeof": "function"
        },
        "strokeStyle": {
          "anyOf": [
            {
              "$ref": "#/definitions/CanvasGradient"
            },
            {
              "$ref": "#/definitions/CanvasPattern"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeText": {
          "typeof": "function"
        },
        "textAlign": {
          "type": "string"
        },
        "textBaseline": {
          "type": "string"
        },
        "transform": {
          "typeof": "function"
        },
        "transformFromMatrix": {
          "typeof": "function"
        },
        "translate": {
          "typeof": "function"
        },
        "view": {
          "typeof": "function"
        }
      },
      "required": [
        "arc",
        "arcTo",
        "beginPath",
        "bezierCurveTo",
        "canvas",
        "clear",
        "clearMatrix",
        "clearRect",
        "clip",
        "closePath",
        "createConicGradient",
        "createImageData",
        "createLinearGradient",
        "createPattern",
        "createRadialGradient",
        "currentMatrix",
        "dpr",
        "draw",
        "drawImage",
        "ellipse",
        "fill",
        "fillRect",
        "fillStyle",
        "fillText",
        "font",
        "getCanvas",
        "getContext",
        "getImageData",
        "getLineDash",
        "globalAlpha",
        "highPerformanceRestore",
        "highPerformanceSave",
        "isPointInPath",
        "isPointInStroke",
        "lineCap",
        "lineDashOffset",
        "lineJoin",
        "lineTo",
        "lineWidth",
        "measureText",
        "miterLimit",
        "moveTo",
        "nativeContext",
        "onlyTranslate",
        "putImageData",
        "quadraticCurveTo",
        "rect",
        "release",
        "resetTransform",
        "restore",
        "rotate",
        "rotateAbout",
        "rotateDegrees",
        "rotateDegreesAbout",
        "save",
        "scale",
        "scalePoint",
        "setCommonStyle",
        "setLineDash",
        "setStrokeStyle",
        "setTextStyle",
        "setTextStyleWithoutAlignBaseline",
        "setTransform",
        "setTransformForCurrent",
        "setTransformFromMatrix",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "stack",
        "stroke",
        "strokeRect",
        "strokeStyle",
        "strokeText",
        "textAlign",
        "textBaseline",
        "transform",
        "transformFromMatrix",
        "translate"
      ],
      "type": "object"
    },
    "IContinuousLegendTheme": {
      "properties": {
        "background": {
          "typeof": "function"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "endText": {
          "typeof": "function"
        },
        "filter": {
          "description": "是否进行数据筛选，默认为 true",
          "type": "boolean"
        },
        "handler": {
          "typeof": "function"
        },
        "handlerText": {
          "typeof": "function"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "layout": {
          "description": "图例组件的布局配置，默认自动跟随显示位置进行调整。\n1. `orient` 为 'top' 或者 'bottom' 时，默认为 'horizontal' 水平布局\n2. `orient` 为 'left' 或者 'right' 时，默认为 'vertical' 垂直布局",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'left'",
          "description": "图例位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "default": "'middle'",
          "description": "图例在当前行列的对齐方式，起始 | 居中 | 末尾",
          "enum": [
            "end",
            "middle",
            "start"
          ],
          "type": "string"
        },
        "rail": {
          "typeof": "function"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "slidable": {
          "description": "是否允许拖动，默认为 true",
          "type": "boolean"
        },
        "startText": {
          "typeof": "function"
        },
        "title": {
          "$ref": "#/definitions/ITitle_1",
          "description": "图例标题配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "track": {
          "typeof": "function"
        },
        "visible": {
          "default": true,
          "description": "是否显示图例",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICorrelationChartSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "节点名称字段配置",
          "type": "string"
        },
        "centerLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "中心点label属性 *"
        },
        "centerPoint": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "中心点图元属性 *"
        },
        "centerX": {
          "description": "图表中心点位置X坐标",
          "type": "number"
        },
        "centerY": {
          "description": "图表中心点位置Y坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "description": "图表终止角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "节点分布内半径",
          "type": [
            "string",
            "number"
          ]
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nodePoint": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "节点图元属性 *"
        },
        "outerRadius": {
          "description": "节点分布外半径",
          "type": [
            "string",
            "number"
          ]
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "ripplePoint": {
          "$ref": "#/definitions/IMarkSpec<IRippleMarkSpec>",
          "description": "水波纹图元属性 *"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ICorrelationSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "节点系列字段配置",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sizeField": {
          "description": "节点尺寸数据字段配置",
          "type": "string"
        },
        "sizeRange": {
          "description": "节点尺寸映射范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "description": "图表起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "correlation",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "相关性数据字段配置",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ICorrelationSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "节点名称字段配置",
          "type": "string"
        },
        "centerLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "中心点label属性 *"
        },
        "centerPoint": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "中心点图元属性 *"
        },
        "centerX": {
          "description": "图表中心点位置X坐标",
          "type": "number"
        },
        "centerY": {
          "description": "图表中心点位置Y坐标",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "图表终止角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "节点分布内半径",
          "type": [
            "string",
            "number"
          ]
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nodePoint": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "节点图元属性 *"
        },
        "outerRadius": {
          "description": "节点分布外半径",
          "type": [
            "string",
            "number"
          ]
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "ripplePoint": {
          "$ref": "#/definitions/IMarkSpec<IRippleMarkSpec>",
          "description": "水波纹图元属性 *"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "节点系列字段配置",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sizeField": {
          "description": "节点尺寸数据字段配置",
          "type": "string"
        },
        "sizeRange": {
          "description": "节点尺寸映射范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "图表起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "correlation",
          "description": "系列类型",
          "since": "1.5.1\n系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "相关性数据字段配置",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ICorrelationSeriesTheme": {
      "properties": {
        "centerLabel": {
          "$ref": "#/definitions/ILabelSpec"
        },
        "centerPoint": {
          "typeof": "function"
        },
        "label": {
          "$ref": "#/definitions/ILabelSpec"
        },
        "nodePoint": {
          "typeof": "function"
        },
        "ripplePoint": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "ICrosshairCategoryFieldSpec": {
      "properties": {
        "bindingAxesIndex": {
          "description": "声明 crosshair 绑定的轴索引，如果没有声明，则会默认绑定所有同 crosshair 位置相对应的轴。",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "defaultSelect": {
          "typeof": "function"
        },
        "label": {
          "$ref": "#/definitions/ICrosshairLabelSpec",
          "description": "crosshair 文本配置"
        },
        "line": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICrosshairLineSpec"
            },
            {
              "$ref": "#/definitions/ICrosshairRectSpec"
            }
          ],
          "description": "crosshair 辅助图形配置"
        },
        "visible": {
          "description": "是否可见",
          "type": "boolean"
        }
      },
      "required": [
        "visible"
      ],
      "type": "object"
    },
    "ICrosshairLabelBackgroundSpec": {
      "properties": {
        "maxWidth": {
          "description": "最大宽度，像素值。当文字超过最大宽度时，会自动省略。",
          "type": "number"
        },
        "minWidth": {
          "default": 30,
          "description": "最小宽度，像素值",
          "type": "number"
        },
        "padding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IPadding"
            },
            {
              "type": "number"
            }
          ],
          "description": "内部边距"
        },
        "style": {
          "$ref": "#/definitions/Partial<IRectMarkSpec>"
        },
        "visible": {
          "description": "是否显示背景，默认为 true",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ICrosshairLabelSpec": {
      "properties": {
        "formatMethod": {
          "typeof": "function"
        },
        "labelBackground": {
          "$ref": "#/definitions/ICrosshairLabelBackgroundSpec",
          "description": "文本背景相关配置"
        },
        "style": {
          "$ref": "#/definitions/Partial<ITextMarkSpec>",
          "description": "文本样式配置"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ICrosshairLineSpec": {
      "properties": {
        "smooth": {
          "description": "极坐标系下是否平滑",
          "type": "boolean"
        },
        "style": {
          "$ref": "#/definitions/ICrosshairLineStyle"
        },
        "type": {
          "const": "line",
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "default": 2,
          "description": "线宽",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICrosshairLineStyle": {
      "properties": {
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICrosshairRectSpec": {
      "properties": {
        "style": {
          "$ref": "#/definitions/ICrosshairRectStyle"
        },
        "type": {
          "const": "rect",
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "default": "'100%''",
          "description": "字符串xx%表示此处是内容区间的百分比，数字表示宽度像素",
          "type": [
            "string",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "ICrosshairRectStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/ICrosshairLineStyle"
        },
        {
          "$ref": "#/definitions/Pick<IRectMarkSpec,\"fillOpacity\"|\"fill\"|\"cornerRadius\">"
        }
      ]
    },
    "ICrosshairSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/ICartesianCrosshairSpec"
        },
        {
          "$ref": "#/definitions/IPolarCrosshairSpec"
        }
      ]
    },
    "ICrosshairTheme": {
      "properties": {
        "bandField": {
          "$ref": "#/definitions/Partial<ICrosshairCategoryFieldSpec>",
          "description": "band 轴 crosshair 的公共配置",
          "since": "1.3.0"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "categoryField": {
          "$ref": "#/definitions/Partial<ICrosshairCategoryFieldSpec>"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "gridZIndex": {
          "description": "crosshair 辅助图形的显示层级",
          "type": "number"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "labelZIndex": {
          "description": "crosshair 文本的显示层级",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "linearField": {
          "$ref": "#/definitions/Partial<ICrosshairValueFieldSpec>",
          "description": "linear 轴 crosshair 的公共配置",
          "since": "1.3.0"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "trigger": {
          "$ref": "#/definitions/CrossHairTrigger",
          "default": "'hover'",
          "description": "是否可以通过 点击 固定住一组 crosshair，也可以同时触发。"
        },
        "triggerOff": {
          "anyOf": [
            {
              "items": [
                {
                  "const": "click",
                  "type": "string"
                },
                {
                  "const": "hover",
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "enum": [
                "click",
                "hover",
                "none"
              ],
              "type": "string"
            }
          ],
          "description": "隐藏crosshair的触发方式（目前仅支持和trigger一致的设置以及none）"
        },
        "valueField": {
          "$ref": "#/definitions/Partial<ICrosshairValueFieldSpec>"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "xField": {
          "$ref": "#/definitions/Partial<ICrosshairCategoryFieldSpec>"
        },
        "yField": {
          "$ref": "#/definitions/Partial<ICrosshairCategoryFieldSpec>"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ICrosshairValueFieldSpec": {
      "properties": {
        "label": {
          "$ref": "#/definitions/ICrosshairLabelSpec",
          "description": "crosshair 文本配置"
        },
        "line": {
          "$ref": "#/definitions/ICrosshairLineSpec",
          "description": "crosshair 辅助图形配置"
        },
        "visible": {
          "description": "是否可见",
          "type": "boolean"
        }
      },
      "required": [
        "visible"
      ],
      "type": "object"
    },
    "ICurve<IPoint>": {
      "properties": {
        "defined": {
          "type": "boolean"
        },
        "getAngleAt": {
          "typeof": "function"
        },
        "getLength": {
          "typeof": "function"
        },
        "getPointAt": {
          "typeof": "function"
        },
        "originP1": {
          "$ref": "#/definitions/IPointLike"
        },
        "originP2": {
          "$ref": "#/definitions/IPointLike"
        },
        "p0": {
          "$ref": "#/definitions/IPoint"
        },
        "p1": {
          "$ref": "#/definitions/IPoint"
        },
        "p2": {
          "$ref": "#/definitions/IPoint"
        },
        "p3": {
          "$ref": "#/definitions/IPoint"
        },
        "type": {
          "type": "number"
        }
      },
      "required": [
        "defined",
        "getAngleAt",
        "getLength",
        "getPointAt",
        "p0",
        "type"
      ],
      "type": "object"
    },
    "ICurveType": {
      "enum": [
        "basis",
        "basisClosed",
        "basisOpen",
        "bundle",
        "cardinal",
        "cardinalClosed",
        "cardinalOpen",
        "catmullRom",
        "catmullRomClosed",
        "catmullRomOpen",
        "linear",
        "linearClosed",
        "monotoneX",
        "monotoneY",
        "natural",
        "radial",
        "step",
        "stepAfter",
        "stepBefore"
      ],
      "type": "string"
    },
    "ICustomMarkSpec.T": {
      "enum": [
        "arc",
        "arc3d",
        "area",
        "boxPlot",
        "image",
        "line",
        "linkPath",
        "path",
        "polygon",
        "progressArc",
        "pyramid3d",
        "rect",
        "rect3d",
        "ripple",
        "rule",
        "symbol",
        "text"
      ],
      "type": "string"
    },
    "ICustomMarkSpec.T_1": {
      "enum": [
        "arc",
        "arc3d",
        "area",
        "boxPlot",
        "group",
        "image",
        "line",
        "linkPath",
        "path",
        "polygon",
        "progressArc",
        "pyramid3d",
        "rect",
        "rect3d",
        "ripple",
        "rule",
        "symbol",
        "text"
      ],
      "type": "string"
    },
    "ICustomMarkSpec<keyofIBuildinMarkSpec>": {
      "properties": {
        "customShape": {
          "typeof": "function"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "关联的数据id"
        },
        "dataIndex": {
          "default": "与系列使用同一份数据",
          "description": "关联的数据索引",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>|IMarkStateSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/ICustomMarkSpec.T_1"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ICustomPath2D": {
      "properties": {
        "addCurve": {
          "typeof": "function"
        },
        "arc": {
          "typeof": "function"
        },
        "arcTo": {
          "typeof": "function"
        },
        "bezierCurveTo": {
          "typeof": "function"
        },
        "bounds": {
          "$ref": "#/definitions/IBounds"
        },
        "clear": {
          "typeof": "function"
        },
        "closePath": {
          "typeof": "function"
        },
        "commandList": {
          "items": {
            "items": [
              {
                "type": "number"
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              {
                "type": [
                  "number",
                  "boolean"
                ]
              }
            ],
            "maxItems": 9,
            "minItems": 1,
            "type": "array"
          },
          "type": "array"
        },
        "curves": {
          "items": {
            "$ref": "#/definitions/ICurve<IPoint>"
          },
          "type": "array"
        },
        "ellipse": {
          "typeof": "function"
        },
        "fromCustomPath2D": {
          "typeof": "function"
        },
        "fromString": {
          "typeof": "function"
        },
        "getBounds": {
          "typeof": "function"
        },
        "getCurveLengths": {
          "typeof": "function"
        },
        "getLength": {
          "typeof": "function"
        },
        "getPointAt": {
          "typeof": "function"
        },
        "lineTo": {
          "typeof": "function"
        },
        "moveTo": {
          "typeof": "function"
        },
        "quadraticCurveTo": {
          "typeof": "function"
        },
        "rect": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "toString": {
          "typeof": "function"
        },
        "transform": {
          "typeof": "function"
        }
      },
      "required": [
        "addCurve",
        "arc",
        "arcTo",
        "bezierCurveTo",
        "clear",
        "closePath",
        "commandList",
        "curves",
        "ellipse",
        "fromCustomPath2D",
        "fromString",
        "getCurveLengths",
        "getLength",
        "getPointAt",
        "lineTo",
        "moveTo",
        "quadraticCurveTo",
        "rect",
        "release",
        "toString",
        "transform"
      ],
      "type": "object"
    },
    "IDBFactory": {
      "type": "object"
    },
    "IData": {
      "anyOf": [
        {
          "$ref": "#/definitions/DataView"
        },
        {
          "$ref": "#/definitions/IDataValues"
        },
        {
          "items": {
            "$ref": "#/definitions/IDataType"
          },
          "type": "array"
        }
      ]
    },
    "IDataSetOptions": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IDataType": {
      "anyOf": [
        {
          "$ref": "#/definitions/DataView"
        },
        {
          "$ref": "#/definitions/IDataValues"
        }
      ],
      "description": "data"
    },
    "IDataValues": {
      "properties": {
        "fields": {
          "$ref": "#/definitions/Record<string,IFieldsMeta>",
          "description": "数据字段相关配置"
        },
        "fromDataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "引用的数据 id"
        },
        "fromDataIndex": {
          "description": "引用的数据索引",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "数据唯一标识"
        },
        "parser": {
          "anyOf": [
            {
              "$ref": "#/definitions/SheetParseOptions"
            },
            {
              "$ref": "#/definitions/CommonParseOptions"
            }
          ]
        },
        "transforms": {
          "description": "数据 transform 配置",
          "items": {
            "$ref": "#/definitions/BuildInTransformOptions"
          },
          "type": "array"
        },
        "values": {
          "anyOf": [
            {
              "items": {
                "typeof": "function"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数据"
        }
      },
      "required": [
        "values"
      ],
      "type": "object"
    },
    "IDataViewOptions": {
      "properties": {
        "diffKeys": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fields": {
          "$ref": "#/definitions/IFields"
        },
        "history": {
          "type": "boolean"
        },
        "name": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "IDataZoomSpec": {
      "description": "spec",
      "properties": {
        "auto": {
          "description": "是否为自动模式。开启以后，组件不会导致轴 scale 缩放，end、roam 等可能导致缩放的配置将被忽略，且组件可以自动消失",
          "since": "1.4.0",
          "type": "boolean"
        },
        "autoIndent": {
          "description": "是否进行自动缩进",
          "type": "boolean"
        },
        "axisId": {
          "description": "关联的轴ID",
          "type": "string"
        },
        "axisIndex": {
          "description": "关联的轴序号",
          "type": "number"
        },
        "background": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IRectMarkSpec"
            }
          ]
        },
        "backgroundChart": {
          "typeof": "function"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "brushSelect": {
          "default": false,
          "description": "是否开启框选, 如果不开启则支持selectedBackground拖拽（框选和拖拽两者互斥）",
          "type": "boolean"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "delayTime": {
          "default": 30,
          "description": "事件触发延迟时长",
          "since": "1.5.1",
          "type": "number"
        },
        "delayType": {
          "$ref": "#/definitions/IDelayType",
          "description": "事件触发延迟类型, 不配置则视作未开启",
          "since": "1.5.1"
        },
        "dragMask": {
          "$ref": "#/definitions/IRectMarkSpec"
        },
        "end": {
          "default": 1,
          "description": "终点配置（比例）：范围[0, 1]",
          "type": "number"
        },
        "endHandler": {
          "$ref": "#/definitions/ISymbolMarkSpec"
        },
        "endText": {
          "typeof": "function"
        },
        "endValue": {
          "type": [
            "string",
            "number"
          ]
        },
        "field": {
          "description": "声明关联的映射字段",
          "type": "string"
        },
        "filterMode": {
          "$ref": "#/definitions/IFilterMode",
          "default": "'filter' （dataZoom默认数据过滤模式）\n详细可参考：https://echarts.apache.org/zh/option.html#dataZoom-slider.filterMode）",
          "description": "数据过滤模式"
        },
        "height": {
          "anyOf": [
            {
              "const": "auto",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "default": "'auto'",
          "description": "组件高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "ignoreBandSize": {
          "description": "是否忽略轴上配置的固定 bandSize\n如果置为 true，则 datazoom 可以任意改变轴的 bandSize。\n但如果轴上配置了 bandSize 范围，则第一次渲染会保持 bandSize 在配置范围内。\n该配置仅在 auto 设为 true 时生效。",
          "since": "1.7.0",
          "type": "boolean"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxSpan": {
          "default": 1,
          "description": "用于限制窗口大小的最大值, [0, 1]",
          "since": "1.5.1",
          "type": "number"
        },
        "maxValueSpan": {
          "description": "用于限制窗口大小的最大数据值, 仅在continous scale生效，优先级高于maxSpan",
          "since": "1.5.1",
          "type": "number"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "middleHandler": {
          "typeof": "function"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minSpan": {
          "default": 0,
          "description": "用于限制窗口大小的最小值, [0, 1]",
          "since": "1.5.1",
          "type": "number"
        },
        "minValueSpan": {
          "description": "用于限制窗口大小的最小数据值, 仅在continous scale生效，优先级高于minSpan",
          "since": "1.5.1",
          "type": "number"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'left'",
          "description": "组件位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "rangeMode": {
          "description": "start和end的配置模式：只有模式和配置匹配时才生效，比如rangeMode: ['percent', 'value'], 那么必须start和endValue都配置才可以生效",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "realTime": {
          "default": true,
          "description": "是否在操作时动态更新视图",
          "since": "1.5.1",
          "type": "boolean"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的region索引，与axis关联的region取交集\n未配置：默认跟随axis控制的region\n已配置：用户配置与axis关联的region取交集\n配置优先级：index > id"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "roamDrag": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamDragSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "漫游模式 - 拖拽（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "roamScroll": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamScrollSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "漫游模式 - 滚动（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "roamZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamZoomSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "default": false,
          "description": "漫游模式 - 缩放（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "selectedBackground": {
          "$ref": "#/definitions/IRectMarkSpec"
        },
        "selectedBackgroundChart": {
          "typeof": "function"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "showDetail": {
          "default": "'auto' 鼠标hover在选中区域时才显示startText和endText",
          "description": "是否显示startText和endText",
          "enum": [
            "auto",
            false,
            true
          ]
        },
        "start": {
          "default": 0,
          "description": "起点配置（比例）：范围[0, 1]",
          "type": "number"
        },
        "startHandler": {
          "$ref": "#/definitions/ISymbolMarkSpec"
        },
        "startText": {
          "typeof": "function"
        },
        "startValue": {
          "description": "起始点数据配置：没有配置的时候根据start和end进行转换",
          "type": [
            "string",
            "number"
          ]
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "valueField": {
          "description": "背景趋势线对应的字段",
          "type": "string"
        },
        "visible": {
          "default": true,
          "description": "是否显示组件",
          "type": "boolean"
        },
        "width": {
          "anyOf": [
            {
              "const": "auto",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "default": "'auto'",
          "description": "组件宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        },
        "zoomLock": {
          "default": false,
          "description": "是否锁定选择区域（或叫做数据窗口）的大小",
          "since": "1.5.1",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IDataZoomStyle": {
      "properties": {
        "background": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IRectMarkSpec"
            }
          ]
        },
        "backgroundChart": {
          "typeof": "function"
        },
        "dragMask": {
          "$ref": "#/definitions/IRectMarkSpec"
        },
        "endHandler": {
          "$ref": "#/definitions/ISymbolMarkSpec"
        },
        "endText": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/ITextMarkSpec"
            }
          ]
        },
        "middleHandler": {
          "typeof": "function"
        },
        "selectedBackground": {
          "$ref": "#/definitions/IRectMarkSpec"
        },
        "selectedBackgroundChart": {
          "typeof": "function"
        },
        "showDetail": {
          "default": "'auto' 鼠标hover在选中区域时才显示startText和endText",
          "description": "是否显示startText和endText",
          "enum": [
            "auto",
            false,
            true
          ]
        },
        "startHandler": {
          "$ref": "#/definitions/ISymbolMarkSpec"
        },
        "startText": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/ITextMarkSpec"
            }
          ]
        }
      },
      "type": "object"
    },
    "IDataZoomTheme": {
      "allOf": [
        {
          "$ref": "#/definitions/IComponentSpec"
        },
        {
          "$ref": "#/definitions/IDataZoomStyle"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IDelayType": {
      "enum": [
        "debounce",
        "throttle"
      ],
      "type": "string"
    },
    "IDirectionLight": {
      "properties": {
        "color": {
          "type": "string"
        },
        "computeColor": {
          "typeof": "function"
        },
        "dir": {
          "$ref": "#/definitions/vec3"
        }
      },
      "required": [
        "color",
        "computeColor",
        "dir"
      ],
      "type": "object"
    },
    "IDiscreteLegendSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IComponentSpec,\"orient\">"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<DiscreteLegendAttrs,\"title\"|\"layout\"|\"items\"|\"item\"|\"pager\">"
        }
      ],
      "description": "spec"
    },
    "IDiscreteLegendTheme": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "allowAllCanceled": {
          "type": "boolean"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "autoPage": {
          "type": "boolean"
        },
        "background": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "string"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/HTMLCanvasElement"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/HTMLImageElement"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            }
          ],
          "description": "图例背景配置"
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "disableTriggerEvent": {
          "type": "boolean"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "field": {
          "description": "After the legend is bound to the scale, the dimension associated with the series data and the legend can be configured through field.\nIf the field is not configured, the first item of fields in the domain of scale is used by default\nIf the domain of the scale is not dependent on data statistics, series.getSeriesField() is used by default",
          "type": "string"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "filter": {
          "description": "是否进行数据筛选，默认为 true",
          "type": "boolean"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "type": "number"
            }
          ],
          "description": "模块的布局大小：高度"
        },
        "hover": {
          "type": "boolean"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "interactive": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/IItem",
          "description": "图例项配置"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {
          "description": "图例组件的布局配置，默认自动跟随显示位置进行调整。\n1. `orient` 为 'top' 或者 'bottom' 时，默认为 'horizontal' 水平布局\n2. `orient` 为 'left' 或者 'right' 时，默认为 'vertical' 垂直布局",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxCol": {
          "type": "number"
        },
        "maxHeight": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "type": "number"
            }
          ],
          "description": "模块的布局最大高度"
        },
        "maxRow": {
          "type": "number"
        },
        "maxWidth": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "type": "number"
            }
          ],
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "miterLimit": {
          "type": "number"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "opacity": {
          "type": "number"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'left'",
          "description": "图例位置"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padding": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ILayoutNumber"
                  },
                  "type": "array"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ILayoutNumber"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ]
            },
            {
              "allOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ILayoutNumber"
                  },
                  "type": "array"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "type": "number"
            }
          ],
          "description": "模块的布局间距"
        },
        "pager": {
          "$ref": "#/definitions/IPager",
          "description": "翻页器配置"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "position": {
          "default": "'middle'",
          "description": "图例在当前行列的对齐方式，起始 | 居中 | 末尾",
          "enum": [
            "end",
            "middle",
            "start"
          ],
          "type": "string"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "reversed": {
          "type": "boolean"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleName": {
          "description": "scaleName must match the id of the scale configured in **scales**",
          "type": "string"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "select": {
          "type": "boolean"
        },
        "selectMode": {
          "enum": [
            "multiple",
            "single"
          ],
          "type": "string"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "title": {
          "$ref": "#/definitions/ITitle_1",
          "description": "图例标题配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "default": true,
          "description": "是否显示图例",
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "anyOf": [
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "type": "number"
                }
              ]
            },
            {
              "type": "number"
            }
          ],
          "description": "模块的布局大小：宽度"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IDomainLine": {
      "properties": {
        "state": {
          "typeof": "function"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IDotSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "clipHeight": {
          "description": "dot 系列的可视高度",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "dot": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "图元配置"
        },
        "dotTypeField": {
          "description": "用于区分dot的fill逻辑。如果未配置，默认按照yField字段处理",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "grid": {
          "$ref": "#/definitions/ISequenceGrid",
          "description": "时间线"
        },
        "highLightSeriesGroup": {
          "description": "高亮series配置",
          "type": "string"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "leftAppendPadding": {
          "description": "dot 系列的左边距(主要用于放置title和subTitle)",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "用于标记node name，便于绘制link。",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesGroupField": {
          "description": "用于区分grid、symbol的fill和stroke逻辑。如果未配置,默认按照yField字段处理",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "subTitle": {
          "$ref": "#/definitions/ISequenceLabel",
          "description": "具体信息"
        },
        "subTitleField": {
          "description": "用于显示subTitle。如果未配置，默认按照yField字段处理",
          "type": "string"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "symbol": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "标识符"
        },
        "title": {
          "$ref": "#/definitions/ISequenceLabel",
          "description": "标题"
        },
        "titleField": {
          "description": "用于显示title。如果未配置，默认按照yField字段处理",
          "type": "string"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "dot",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "IDotSeriesTheme": {
      "properties": {
        "dot": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        },
        "subTitle": {
          "$ref": "#/definitions/ISequenceLabel"
        },
        "symbol": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
        },
        "title": {
          "$ref": "#/definitions/ISequenceLabel"
        }
      },
      "type": "object"
    },
    "IDrawContribution": {
      "properties": {
        "afterDraw": {
          "typeof": "function"
        },
        "backupDirtyBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "currentRenderMap": {
          "$ref": "#/definitions/Map<number,IGraphicRender>"
        },
        "defaultRenderMap": {
          "$ref": "#/definitions/Map<number,IGraphicRender>"
        },
        "dirtyBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "draw": {
          "typeof": "function"
        },
        "getRenderContribution": {
          "typeof": "function"
        },
        "hooks": {
          "typeof": "function"
        },
        "renderGroup": {
          "typeof": "function"
        },
        "renderItem": {
          "typeof": "function"
        },
        "rendering": {
          "type": "boolean"
        },
        "styleRenderMap": {
          "$ref": "#/definitions/Map<string,Map<number,IGraphicRender>>"
        }
      },
      "required": [
        "currentRenderMap",
        "defaultRenderMap",
        "draw",
        "getRenderContribution",
        "renderGroup",
        "renderItem",
        "styleRenderMap"
      ],
      "type": "object"
    },
    "IDsvParserOptions": {
      "properties": {
        "delimiter": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IExtensionGroupMarkSpec": {
      "properties": {
        "children": {
          "description": "支持子节点",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "customShape": {
          "typeof": "function"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "关联的数据id"
        },
        "dataIndex": {
          "default": "与系列使用同一份数据",
          "description": "关联的数据索引",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<IGroupMarkSpec>|IMarkStateSpec<IGroupMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IGroupMarkSpec>_1",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "type": {
          "const": "group",
          "type": "string"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>": {
      "properties": {
        "customShape": {
          "typeof": "function"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "关联的数据id"
        },
        "dataIndex": {
          "default": "与系列使用同一份数据",
          "description": "关联的数据索引",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>|IMarkStateSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/ICustomMarkSpec.T"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IFields": {
      "additionalProperties": {
        "$ref": "#/definitions/IFieldsMeta"
      },
      "type": "object"
    },
    "IFieldsMeta": {
      "additionalProperties": {},
      "properties": {
        "domain": {
          "items": {},
          "type": "array"
        },
        "sortIndex": {
          "type": "number"
        },
        "sortReverse": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "linear",
            "ordinal"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "IFillType": {
      "anyOf": [
        {
          "$ref": "#/definitions/ILinearGradient"
        },
        {
          "$ref": "#/definitions/IRadialGradient"
        },
        {
          "$ref": "#/definitions/IConicalGradient"
        },
        {
          "type": [
            "string",
            "boolean"
          ]
        }
      ]
    },
    "IFilterMode": {
      "enum": [
        "axis",
        "filter"
      ],
      "type": "string"
    },
    "IFullThemeSpec": {
      "properties": {
        "arc": {
          "$ref": "#/definitions/Required<IArcGraphicAttribute>"
        },
        "area": {
          "$ref": "#/definitions/Required<IAreaGraphicAttribute>"
        },
        "circle": {
          "$ref": "#/definitions/Required<ICircleGraphicAttribute>"
        },
        "glyph": {
          "$ref": "#/definitions/Required<IGlyphGraphicAttribute>"
        },
        "group": {
          "$ref": "#/definitions/Required<IGroupGraphicAttribute>"
        },
        "image": {
          "$ref": "#/definitions/Required<IImageGraphicAttribute>"
        },
        "line": {
          "$ref": "#/definitions/Required<ILineGraphicAttribute>"
        },
        "path": {
          "$ref": "#/definitions/Required<IPathGraphicAttribute>"
        },
        "polygon": {
          "$ref": "#/definitions/Required<IPolygonGraphicAttribute>"
        },
        "rect": {
          "$ref": "#/definitions/Required<IRectGraphicAttribute>"
        },
        "rect3d": {
          "$ref": "#/definitions/Required<IRect3dGraphicAttribute>"
        },
        "richtext": {
          "$ref": "#/definitions/Required<IRichTextGraphicAttribute>"
        },
        "richtextIcon": {
          "$ref": "#/definitions/Required<IRichTextIconGraphicAttribute>"
        },
        "symbol": {
          "$ref": "#/definitions/Required<ISymbolGraphicAttribute>"
        },
        "text": {
          "$ref": "#/definitions/Required<ITextGraphicAttribute>"
        }
      },
      "required": [
        "arc",
        "area",
        "circle",
        "glyph",
        "group",
        "image",
        "line",
        "path",
        "polygon",
        "rect",
        "rect3d",
        "richtext",
        "richtextIcon",
        "symbol",
        "text"
      ],
      "type": "object"
    },
    "IFunnel3dChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "funnel": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "漏斗层样式"
        },
        "funnelAlign": {
          "default": "'center'",
          "description": "漏斗图对齐方式。转化漏斗图仅支持'center'",
          "enum": [
            "center",
            "left",
            "right"
          ],
          "type": "string"
        },
        "funnelOrient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'top'",
          "description": "漏斗图朝向。"
        },
        "gap": {
          "default": 0,
          "description": "漏斗层之间的像素间隔。转化漏斗图不支持gap配置。",
          "type": "number"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "isCone": {
          "default": true,
          "description": "漏斗图最下层是否尖角。shape为`rect`时不生效",
          "type": "boolean"
        },
        "isTransform": {
          "default": false,
          "description": "是否是转化漏斗图",
          "type": "boolean"
        },
        "label": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "漏斗层标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maxSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": "'80%'",
          "description": "漏斗图最大宽度，支持配置像素值和百分比字符串。"
        },
        "minSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "漏斗图最小宽度，支持配置像素值和百分比字符串。"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerLabel": {
          "$ref": "#/definitions/IFunnelOuterLabelSpec",
          "description": "漏斗层外部标签配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "range": {
          "typeof": "function"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "default": "'trapezoid'",
          "description": "图元形状。转化漏斗图仅支持 'rect'",
          "enum": [
            "rect",
            "trapezoid"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "transform": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "转化层样式"
        },
        "transformLabel": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "转化层标签配置"
        },
        "type": {
          "const": "funnel3d",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IFunnel3dSeriesSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IFunnelSeriesSpec,\"type\">"
        }
      ]
    },
    "IFunnel3dSeriesTheme": {
      "properties": {
        "funnel3d": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPyramid3dMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        },
        "outerLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "transform3d": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPyramid3dMarkSpec>>"
        },
        "transformLabel": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        }
      },
      "type": "object"
    },
    "IFunnelChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "funnel": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "漏斗层样式"
        },
        "funnelAlign": {
          "default": "'center'",
          "description": "漏斗图对齐方式。转化漏斗图仅支持'center'",
          "enum": [
            "center",
            "left",
            "right"
          ],
          "type": "string"
        },
        "funnelOrient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'top'",
          "description": "漏斗图朝向。"
        },
        "gap": {
          "default": 0,
          "description": "漏斗层之间的像素间隔。转化漏斗图不支持gap配置。",
          "type": "number"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "isCone": {
          "default": true,
          "description": "漏斗图最下层是否尖角。shape为`rect`时不生效",
          "type": "boolean"
        },
        "isTransform": {
          "default": false,
          "description": "是否是转化漏斗图",
          "type": "boolean"
        },
        "label": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "漏斗层标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maxSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": "'80%'",
          "description": "漏斗图最大宽度，支持配置像素值和百分比字符串。"
        },
        "minSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "漏斗图最小宽度，支持配置像素值和百分比字符串。"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerLabel": {
          "$ref": "#/definitions/IFunnelOuterLabelSpec",
          "description": "漏斗层外部标签配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "range": {
          "typeof": "function"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "default": "'trapezoid'",
          "description": "图元形状。转化漏斗图仅支持 'rect'",
          "enum": [
            "rect",
            "trapezoid"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "transform": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "转化层样式"
        },
        "transformLabel": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "转化层标签配置"
        },
        "type": {
          "const": "funnel",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IFunnelLabelSpec": {
      "properties": {
        "customShape": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "limit": {
          "anyOf": [
            {
              "const": "shapeSize",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "标签文字样式"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<ITextMarkSpec>|IMarkStateSpec<ITextMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IFunnelOuterLabelSpec": {
      "properties": {
        "alignLabel": {
          "default": true,
          "description": "文字是否对齐",
          "type": "boolean"
        },
        "customShape": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "limit": {
          "anyOf": [
            {
              "const": "shapeSize",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "标签文字样式"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<IRuleMarkSpec>",
          "description": "标签引导线样式"
        },
        "position": {
          "default": "'left' | 'bottom'",
          "description": "标签布局方式",
          "enum": [
            "bottom",
            "left",
            "right",
            "top"
          ],
          "type": "string"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "spaceWidth": {
          "default": 5,
          "description": "文字与引导线间隔宽度",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ConvertToMarkStyleSpec<ITextMarkSpec>|IMarkStateSpec<ITextMarkSpec>>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "文字样式"
        },
        "support3d": {
          "type": "boolean"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IFunnelSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "funnel": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "漏斗层样式"
        },
        "funnelAlign": {
          "default": "'center'",
          "description": "漏斗图对齐方式。转化漏斗图仅支持'center'",
          "enum": [
            "center",
            "left",
            "right"
          ],
          "type": "string"
        },
        "funnelOrient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'top'",
          "description": "漏斗图朝向。"
        },
        "gap": {
          "default": 0,
          "description": "漏斗层之间的像素间隔。转化漏斗图不支持gap配置。",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "isCone": {
          "default": true,
          "description": "漏斗图最下层是否尖角。shape为`rect`时不生效",
          "type": "boolean"
        },
        "isTransform": {
          "default": false,
          "description": "是否是转化漏斗图",
          "type": "boolean"
        },
        "label": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "漏斗层标签配置"
        },
        "maxSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": "'80%'",
          "description": "漏斗图最大宽度，支持配置像素值和百分比字符串。"
        },
        "minSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "漏斗图最小宽度，支持配置像素值和百分比字符串。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerLabel": {
          "$ref": "#/definitions/IFunnelOuterLabelSpec",
          "description": "漏斗层外部标签配置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "range": {
          "typeof": "function"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "default": "'trapezoid'",
          "description": "图元形状。转化漏斗图仅支持 'rect'",
          "enum": [
            "rect",
            "trapezoid"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "transform": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "转化层样式"
        },
        "transformLabel": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "转化层标签配置"
        },
        "type": {
          "const": "funnel",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IFunnelSeriesTheme": {
      "properties": {
        "funnel": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPolygonMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        },
        "outerLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "transform": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPolygonMarkSpec>>"
        },
        "transformLabel": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        }
      },
      "type": "object"
    },
    "IGaugeChartSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "轴配置",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ILinearAxisSpec"
              },
              {
                "$ref": "#/definitions/IPolarLinearAxisSpec"
              },
              {
                "$ref": "#/definitions/IPolarBandAxisSpec"
              }
            ]
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "gauge": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IGaugeSeriesSpec,\"data\">"
            },
            {
              "$ref": "#/definitions/Omit<ICircularProgressSeriesSpec,\"data\">"
            }
          ],
          "description": "表盘背景，可选择 gauge 系列或 circularProgress 系列的配置"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pin": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "图钉前景样式"
        },
        "pinBackground": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "图钉背景样式"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "pointer": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "指针样式"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "description": "半径字段（可影响指针长度，GaugePointerSeries 没有 categoryField）",
          "type": "string"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "gauge",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段（可影响指针角度）"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "radiusField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IGaugePointerSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pin": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "图钉前景样式"
        },
        "pinBackground": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "图钉背景样式"
        },
        "pointer": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "指针样式"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "description": "半径字段（可影响指针长度，GaugePointerSeries 没有 categoryField）",
          "type": "string"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "gaugePointer",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段（可影响指针角度）"
        }
      },
      "required": [
        "radiusField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IGaugePointerSeriesTheme": {
      "properties": {
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "outerRadius": {
          "type": "number"
        },
        "pin": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPathMarkSpec>&PinMarkSpec>",
          "description": "图钉前景样式"
        },
        "pinBackground": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPathMarkSpec>&PinMarkSpec>",
          "description": "图钉背景样式"
        },
        "pointer": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec|IPathMarkSpec>&PointerMarkSpec>",
          "description": "指针样式"
        },
        "radius": {
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出"
        },
        "startAngle": {
          "type": "number"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkTheme<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        }
      },
      "type": "object"
    },
    "IGaugeSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILabelSpec",
          "description": "标签样式"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区间隔角度",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "segment": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "扇区样式"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "背景样式"
        },
        "type": {
          "const": "gauge",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IGaugeSeriesTheme": {
      "properties": {
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/ILabelSpec",
          "description": "标签样式"
        },
        "outerRadius": {
          "type": "number"
        },
        "padAngle": {
          "description": "扇区间隔角度",
          "type": "number"
        },
        "radius": {
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出"
        },
        "segment": {
          "$ref": "#/definitions/Partial<IMarkTheme<IProgressArcMarkSpec>>",
          "description": "扇区样式"
        },
        "startAngle": {
          "type": "number"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkTheme<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "track": {
          "$ref": "#/definitions/Partial<IMarkTheme<IArcMarkSpec>>",
          "description": "背景样式"
        }
      },
      "type": "object"
    },
    "IGlobalMarkThemeByName": {
      "additionalProperties": {
        "$ref": "#/definitions/Partial<IMarkTheme<any>>"
      },
      "properties": {
        "area": {
          "$ref": "#/definitions/Partial<IMarkTheme<IAreaMarkSpec>>",
          "description": "used in lineSeries, areaSeries, radarSeries, etc."
        },
        "bar": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>",
          "description": "used in barSeries, rangeColumnSeries etc."
        },
        "label": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>",
          "description": "used in many series"
        },
        "line": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>",
          "description": "used in lineSeries, areaSeries, radarSeries, etc."
        },
        "point": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>",
          "description": "used in lineSeries, areaSeries, radarSeries, scatterSeries etc."
        }
      },
      "type": "object"
    },
    "IGlobalMarkThemeByType": {
      "properties": {
        "arc": {
          "$ref": "#/definitions/Partial<IMarkTheme<IArcMarkSpec>>"
        },
        "area": {
          "$ref": "#/definitions/Partial<IMarkTheme<IAreaMarkSpec>>"
        },
        "line": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>"
        },
        "path": {
          "$ref": "#/definitions/Partial<IMarkTheme<IPathMarkSpec>>"
        },
        "rect": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "symbol": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
        },
        "text": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        }
      },
      "type": "object"
    },
    "IGradientConical": {
      "properties": {
        "endAngle": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "gradient": {
          "const": "conical",
          "type": "string"
        },
        "startAngle": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "stops": {
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "x": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "y": {
          "$ref": "#/definitions/GradientPropValue<number>"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "IGradientLinear": {
      "properties": {
        "gradient": {
          "const": "linear",
          "type": "string"
        },
        "stops": {
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "x0": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "x1": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "y0": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "y1": {
          "$ref": "#/definitions/GradientPropValue<number>"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "IGradientRadial": {
      "properties": {
        "gradient": {
          "const": "radial",
          "type": "string"
        },
        "r0": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "r1": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "stops": {
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "x0": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "x1": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "y0": {
          "$ref": "#/definitions/GradientPropValue<number>"
        },
        "y1": {
          "$ref": "#/definitions/GradientPropValue<number>"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "IGradientStop": {
      "properties": {
        "color": {
          "type": "string"
        },
        "offset": {
          "type": "number"
        }
      },
      "required": [
        "color",
        "offset"
      ],
      "type": "object"
    },
    "IGraphic<IGlyphGraphicAttribute>": {
      "properties": {
        "AABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "OBBBounds": {
          "$ref": "#/definitions/IOBBBounds"
        },
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "addState": {
          "typeof": "function"
        },
        "addUpdateBoundTag": {
          "typeof": "function"
        },
        "addUpdateGlobalPositionTag": {
          "typeof": "function"
        },
        "addUpdateLayoutTag": {
          "typeof": "function"
        },
        "addUpdatePositionTag": {
          "typeof": "function"
        },
        "addUpdateShapeAndBoundsTag": {
          "typeof": "function"
        },
        "animate": {
          "typeof": "function"
        },
        "animates": {
          "$ref": "#/definitions/Map<string|number,IAnimate>"
        },
        "animationBackUps": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "applyStateAttrs": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "attachShadow": {
          "typeof": "function"
        },
        "attribute": {
          "$ref": "#/definitions/Partial<IGlyphGraphicAttribute>"
        },
        "backgroundImg": {
          "type": "boolean"
        },
        "bindDom": {
          "$ref": "#/definitions/Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>"
        },
        "childrenCount": {
          "type": "number"
        },
        "clearStates": {
          "typeof": "function"
        },
        "clearUpdateShapeTag": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createPathProxy": {
          "typeof": "function"
        },
        "delete": {
          "typeof": "function"
        },
        "detachShadow": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "findFace": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getComputedAttribute": {
          "typeof": "function"
        },
        "getDefaultAttribute": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getNoWorkAnimateAttr": {
          "typeof": "function"
        },
        "getOffsetXY": {
          "typeof": "function"
        },
        "getState": {
          "typeof": "function"
        },
        "globalAABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "globalTransMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "glyphHost": {
          "$ref": "#/definitions/IGraphic<IGlyphGraphicAttribute>"
        },
        "hasState": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "imageLoadFail": {
          "typeof": "function"
        },
        "imageLoadSuccess": {
          "typeof": "function"
        },
        "in3dMode": {
          "type": "boolean"
        },
        "incremental": {
          "type": "number"
        },
        "incrementalAt": {
          "type": "number"
        },
        "initAttributes": {
          "typeof": "function"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "isValid": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "name": {
          "type": "string"
        },
        "normalAttrs": {
          "$ref": "#/definitions/Partial<IGlyphGraphicAttribute>"
        },
        "numberType": {
          "type": "number"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "onAddStep": {
          "typeof": "function"
        },
        "onAnimateBind": {
          "typeof": "function"
        },
        "onBeforeAttributeUpdate": {
          "typeof": "function"
        },
        "onSetStage": {
          "typeof": "function"
        },
        "onStep": {
          "typeof": "function"
        },
        "onStop": {
          "typeof": "function"
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "parent": {
          "$ref": "#/definitions/IGroup"
        },
        "pathProxy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeState": {
          "typeof": "function"
        },
        "resources": {
          "$ref": "#/definitions/Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateTo": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleTo": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setAttribute": {
          "typeof": "function"
        },
        "setAttributes": {
          "typeof": "function"
        },
        "setMode": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "shadowRoot": {
          "$ref": "#/definitions/IShadowRoot"
        },
        "shouldSelfChangeUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateGlobalMatrix": {
          "typeof": "function"
        },
        "shouldUpdateShape": {
          "typeof": "function"
        },
        "skewTo": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "stamp": {
          "type": "number"
        },
        "stateProxy": {
          "typeof": "function"
        },
        "states": {
          "$ref": "#/definitions/Record<string,Partial<IGlyphGraphicAttribute>>"
        },
        "stepInterpolate": {
          "typeof": "function"
        },
        "stopAnimates": {
          "typeof": "function"
        },
        "toCustomPath": {
          "typeof": "function"
        },
        "toJson": {
          "typeof": "function"
        },
        "toggleState": {
          "typeof": "function"
        },
        "transMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "translate": {
          "typeof": "function"
        },
        "translateTo": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/GraphicType"
        },
        "update": {
          "typeof": "function"
        },
        "updateNormalAttrs": {
          "typeof": "function"
        },
        "useStates": {
          "typeof": "function"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "required": [
        "AABBBounds",
        "OBBBounds",
        "_uid",
        "add",
        "addEventListener",
        "addState",
        "addUpdateBoundTag",
        "addUpdateGlobalPositionTag",
        "addUpdateLayoutTag",
        "addUpdatePositionTag",
        "addUpdateShapeAndBoundsTag",
        "animate",
        "animates",
        "appendChild",
        "applyStateAttrs",
        "at",
        "attachShadow",
        "attribute",
        "childrenCount",
        "clearStates",
        "clearUpdateShapeTag",
        "clone",
        "containNode",
        "containsPoint",
        "count",
        "createPathProxy",
        "delete",
        "detachShadow",
        "dispatchEvent",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getComputedAttribute",
        "getDefaultAttribute",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getNoWorkAnimateAttr",
        "getOffsetXY",
        "getState",
        "globalAABBBounds",
        "globalTransMatrix",
        "hasState",
        "imageLoadFail",
        "imageLoadSuccess",
        "initAttributes",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "isValid",
        "lastChild",
        "off",
        "on",
        "onSetStage",
        "onStep",
        "onStop",
        "once",
        "parent",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeState",
        "rotate",
        "rotateTo",
        "scale",
        "scaleTo",
        "setAllDescendantsProps",
        "setAttribute",
        "setAttributes",
        "setMode",
        "setStage",
        "shouldSelfChangeUpdateAABBBounds",
        "shouldUpdateAABBBounds",
        "shouldUpdateGlobalMatrix",
        "shouldUpdateShape",
        "skewTo",
        "stepInterpolate",
        "stopAnimates",
        "toJson",
        "toggleState",
        "transMatrix",
        "translate",
        "translateTo",
        "update",
        "updateNormalAttrs",
        "useStates",
        "valid"
      ],
      "type": "object"
    },
    "IGraphic<Partial<IGraphicAttribute>>": {
      "properties": {
        "AABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "OBBBounds": {
          "$ref": "#/definitions/IOBBBounds"
        },
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "addState": {
          "typeof": "function"
        },
        "addUpdateBoundTag": {
          "typeof": "function"
        },
        "addUpdateGlobalPositionTag": {
          "typeof": "function"
        },
        "addUpdateLayoutTag": {
          "typeof": "function"
        },
        "addUpdatePositionTag": {
          "typeof": "function"
        },
        "addUpdateShapeAndBoundsTag": {
          "typeof": "function"
        },
        "animate": {
          "typeof": "function"
        },
        "animates": {
          "$ref": "#/definitions/Map<string|number,IAnimate>"
        },
        "animationBackUps": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "applyStateAttrs": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "attachShadow": {
          "typeof": "function"
        },
        "attribute": {
          "$ref": "#/definitions/Partial<Partial<IGraphicAttribute>>"
        },
        "backgroundImg": {
          "type": "boolean"
        },
        "bindDom": {
          "$ref": "#/definitions/Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>"
        },
        "childrenCount": {
          "type": "number"
        },
        "clearStates": {
          "typeof": "function"
        },
        "clearUpdateShapeTag": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createPathProxy": {
          "typeof": "function"
        },
        "delete": {
          "typeof": "function"
        },
        "detachShadow": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "findFace": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getComputedAttribute": {
          "typeof": "function"
        },
        "getDefaultAttribute": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getNoWorkAnimateAttr": {
          "typeof": "function"
        },
        "getOffsetXY": {
          "typeof": "function"
        },
        "getState": {
          "typeof": "function"
        },
        "globalAABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "globalTransMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "glyphHost": {
          "$ref": "#/definitions/IGraphic<IGlyphGraphicAttribute>"
        },
        "hasState": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "imageLoadFail": {
          "typeof": "function"
        },
        "imageLoadSuccess": {
          "typeof": "function"
        },
        "in3dMode": {
          "type": "boolean"
        },
        "incremental": {
          "type": "number"
        },
        "incrementalAt": {
          "type": "number"
        },
        "initAttributes": {
          "typeof": "function"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "isValid": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "name": {
          "type": "string"
        },
        "normalAttrs": {
          "$ref": "#/definitions/Partial<Partial<IGraphicAttribute>>"
        },
        "numberType": {
          "type": "number"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "onAddStep": {
          "typeof": "function"
        },
        "onAnimateBind": {
          "typeof": "function"
        },
        "onBeforeAttributeUpdate": {
          "typeof": "function"
        },
        "onSetStage": {
          "typeof": "function"
        },
        "onStep": {
          "typeof": "function"
        },
        "onStop": {
          "typeof": "function"
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "parent": {
          "$ref": "#/definitions/IGroup"
        },
        "pathProxy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeState": {
          "typeof": "function"
        },
        "resources": {
          "$ref": "#/definitions/Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateTo": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleTo": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setAttribute": {
          "typeof": "function"
        },
        "setAttributes": {
          "typeof": "function"
        },
        "setMode": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "shadowRoot": {
          "$ref": "#/definitions/IShadowRoot"
        },
        "shouldSelfChangeUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateGlobalMatrix": {
          "typeof": "function"
        },
        "shouldUpdateShape": {
          "typeof": "function"
        },
        "skewTo": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "stamp": {
          "type": "number"
        },
        "stateProxy": {
          "typeof": "function"
        },
        "states": {
          "$ref": "#/definitions/Record<string,Partial<Partial<IGraphicAttribute>>>"
        },
        "stepInterpolate": {
          "typeof": "function"
        },
        "stopAnimates": {
          "typeof": "function"
        },
        "toCustomPath": {
          "typeof": "function"
        },
        "toJson": {
          "typeof": "function"
        },
        "toggleState": {
          "typeof": "function"
        },
        "transMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "translate": {
          "typeof": "function"
        },
        "translateTo": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/GraphicType"
        },
        "update": {
          "typeof": "function"
        },
        "updateNormalAttrs": {
          "typeof": "function"
        },
        "useStates": {
          "typeof": "function"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "required": [
        "AABBBounds",
        "OBBBounds",
        "_uid",
        "add",
        "addEventListener",
        "addState",
        "addUpdateBoundTag",
        "addUpdateGlobalPositionTag",
        "addUpdateLayoutTag",
        "addUpdatePositionTag",
        "addUpdateShapeAndBoundsTag",
        "animate",
        "animates",
        "appendChild",
        "applyStateAttrs",
        "at",
        "attachShadow",
        "attribute",
        "childrenCount",
        "clearStates",
        "clearUpdateShapeTag",
        "clone",
        "containNode",
        "containsPoint",
        "count",
        "createPathProxy",
        "delete",
        "detachShadow",
        "dispatchEvent",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getComputedAttribute",
        "getDefaultAttribute",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getNoWorkAnimateAttr",
        "getOffsetXY",
        "getState",
        "globalAABBBounds",
        "globalTransMatrix",
        "hasState",
        "imageLoadFail",
        "imageLoadSuccess",
        "initAttributes",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "isValid",
        "lastChild",
        "off",
        "on",
        "onSetStage",
        "onStep",
        "onStop",
        "once",
        "parent",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeState",
        "rotate",
        "rotateTo",
        "scale",
        "scaleTo",
        "setAllDescendantsProps",
        "setAttribute",
        "setAttributes",
        "setMode",
        "setStage",
        "shouldSelfChangeUpdateAABBBounds",
        "shouldUpdateAABBBounds",
        "shouldUpdateGlobalMatrix",
        "shouldUpdateShape",
        "skewTo",
        "stepInterpolate",
        "stopAnimates",
        "toJson",
        "toggleState",
        "transMatrix",
        "translate",
        "translateTo",
        "update",
        "updateNormalAttrs",
        "useStates",
        "valid"
      ],
      "type": "object"
    },
    "IGrid": {
      "properties": {
        "alignWithLabel": {
          "default": true,
          "description": "grid 是否与 label 对齐，默认为 true，即对齐，配置为 false 则显示在前后两个刻度中间",
          "type": "boolean"
        },
        "alternateColor": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "两个栅格线间的填充色"
        },
        "style": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRuleMarkSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "网格线样式，支持回调"
        },
        "visible": {
          "type": "boolean"
        },
        "zIndex": {
          "default": 50,
          "description": "快捷属性，也可以在 `style` 中配置，用于配置网格线的绘制顺序，默认为 50",
          "since": "1.4.0",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IGridLayoutSpec": {
      "properties": {
        "col": {
          "type": "number"
        },
        "colWidth": {
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "elements": {
          "items": {
            "$ref": "#/definitions/ElementSpec"
          },
          "type": "array"
        },
        "row": {
          "type": "number"
        },
        "rowHeight": {
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "type": {
          "const": "grid",
          "type": "string"
        }
      },
      "required": [
        "col",
        "elements",
        "row",
        "type"
      ],
      "type": "object"
    },
    "IGroup": {
      "properties": {
        "AABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "OBBBounds": {
          "$ref": "#/definitions/IOBBBounds"
        },
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "addState": {
          "typeof": "function"
        },
        "addUpdateBoundTag": {
          "typeof": "function"
        },
        "addUpdateGlobalPositionTag": {
          "typeof": "function"
        },
        "addUpdateLayoutTag": {
          "typeof": "function"
        },
        "addUpdatePositionTag": {
          "typeof": "function"
        },
        "addUpdateShapeAndBoundsTag": {
          "typeof": "function"
        },
        "animate": {
          "typeof": "function"
        },
        "animates": {
          "$ref": "#/definitions/Map<string|number,IAnimate>"
        },
        "animationBackUps": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "applyStateAttrs": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "attachShadow": {
          "typeof": "function"
        },
        "attribute": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "backgroundImg": {
          "type": "boolean"
        },
        "bindDom": {
          "$ref": "#/definitions/Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>"
        },
        "childrenCount": {
          "type": "number"
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clearStates": {
          "typeof": "function"
        },
        "clearUpdateShapeTag": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createOrUpdateChild": {
          "typeof": "function"
        },
        "createPathProxy": {
          "typeof": "function"
        },
        "createTheme": {
          "typeof": "function"
        },
        "delete": {
          "typeof": "function"
        },
        "detachShadow": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "findFace": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getComputedAttribute": {
          "typeof": "function"
        },
        "getDefaultAttribute": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getNoWorkAnimateAttr": {
          "typeof": "function"
        },
        "getOffsetXY": {
          "typeof": "function"
        },
        "getState": {
          "typeof": "function"
        },
        "globalAABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "globalTransMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "glyphHost": {
          "$ref": "#/definitions/IGraphic<IGlyphGraphicAttribute>"
        },
        "hasState": {
          "typeof": "function"
        },
        "hideAll": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "imageLoadFail": {
          "typeof": "function"
        },
        "imageLoadSuccess": {
          "typeof": "function"
        },
        "in3dMode": {
          "type": "boolean"
        },
        "incremental": {
          "type": "number"
        },
        "incrementalAppendChild": {
          "typeof": "function"
        },
        "incrementalAt": {
          "type": "number"
        },
        "incrementalClearChild": {
          "typeof": "function"
        },
        "initAttributes": {
          "typeof": "function"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "isValid": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "name": {
          "type": "string"
        },
        "normalAttrs": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "numberType": {
          "type": "number"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "onAddStep": {
          "typeof": "function"
        },
        "onAnimateBind": {
          "typeof": "function"
        },
        "onBeforeAttributeUpdate": {
          "typeof": "function"
        },
        "onSetStage": {
          "typeof": "function"
        },
        "onStep": {
          "typeof": "function"
        },
        "onStop": {
          "typeof": "function"
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "parent": {
          "$ref": "#/definitions/IGroup"
        },
        "pathProxy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeState": {
          "typeof": "function"
        },
        "resources": {
          "$ref": "#/definitions/Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateTo": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleTo": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setAttribute": {
          "typeof": "function"
        },
        "setAttributes": {
          "typeof": "function"
        },
        "setMode": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "setTheme": {
          "typeof": "function"
        },
        "shadowRoot": {
          "$ref": "#/definitions/IShadowRoot"
        },
        "shouldSelfChangeUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateGlobalMatrix": {
          "typeof": "function"
        },
        "shouldUpdateShape": {
          "typeof": "function"
        },
        "showAll": {
          "typeof": "function"
        },
        "skewTo": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "stamp": {
          "type": "number"
        },
        "stateProxy": {
          "typeof": "function"
        },
        "states": {
          "$ref": "#/definitions/Record<string,Partial<IGroupGraphicAttribute>>"
        },
        "stepInterpolate": {
          "typeof": "function"
        },
        "stopAnimates": {
          "typeof": "function"
        },
        "theme": {
          "$ref": "#/definitions/ITheme"
        },
        "toCustomPath": {
          "typeof": "function"
        },
        "toJson": {
          "typeof": "function"
        },
        "toggleState": {
          "typeof": "function"
        },
        "transMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "translate": {
          "typeof": "function"
        },
        "translateTo": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/GraphicType"
        },
        "update": {
          "typeof": "function"
        },
        "updateNormalAttrs": {
          "typeof": "function"
        },
        "useStates": {
          "typeof": "function"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "required": [
        "AABBBounds",
        "OBBBounds",
        "_uid",
        "add",
        "addEventListener",
        "addState",
        "addUpdateBoundTag",
        "addUpdateGlobalPositionTag",
        "addUpdateLayoutTag",
        "addUpdatePositionTag",
        "addUpdateShapeAndBoundsTag",
        "animate",
        "animates",
        "appendChild",
        "applyStateAttrs",
        "at",
        "attachShadow",
        "attribute",
        "childrenCount",
        "clearStates",
        "clearUpdateShapeTag",
        "clone",
        "containNode",
        "containsPoint",
        "count",
        "createOrUpdateChild",
        "createPathProxy",
        "createTheme",
        "delete",
        "detachShadow",
        "dispatchEvent",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getComputedAttribute",
        "getDefaultAttribute",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getNoWorkAnimateAttr",
        "getOffsetXY",
        "getState",
        "globalAABBBounds",
        "globalTransMatrix",
        "hasState",
        "hideAll",
        "imageLoadFail",
        "imageLoadSuccess",
        "incrementalAppendChild",
        "incrementalClearChild",
        "initAttributes",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "isValid",
        "lastChild",
        "off",
        "on",
        "onSetStage",
        "onStep",
        "onStop",
        "once",
        "parent",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeState",
        "rotate",
        "rotateTo",
        "scale",
        "scaleTo",
        "setAllDescendantsProps",
        "setAttribute",
        "setAttributes",
        "setMode",
        "setStage",
        "setTheme",
        "shouldSelfChangeUpdateAABBBounds",
        "shouldUpdateAABBBounds",
        "shouldUpdateGlobalMatrix",
        "shouldUpdateShape",
        "showAll",
        "skewTo",
        "stepInterpolate",
        "stopAnimates",
        "toJson",
        "toggleState",
        "transMatrix",
        "translate",
        "translateTo",
        "update",
        "updateNormalAttrs",
        "useStates",
        "valid"
      ],
      "type": "object"
    },
    "IHeatmapChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "cell": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "cellBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元背景配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IHeatmapSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "heatmap",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "值 field",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IHeatmapSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "cell": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "cellBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元背景配置"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "heatmap",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "值 field",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IHeatmapSeriesTheme": {
      "properties": {
        "cell": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "cellBackground": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        }
      },
      "type": "object"
    },
    "IHierarchyData": {
      "anyOf": [
        {
          "$ref": "#/definitions/DataView"
        },
        {
          "$ref": "#/definitions/IHierarchyDataValues"
        }
      ]
    },
    "IHierarchyDataValues": {
      "properties": {
        "fields": {
          "$ref": "#/definitions/Record<string,IFieldsMeta>",
          "description": "数据字段相关配置"
        },
        "fromDataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "引用的数据 id"
        },
        "fromDataIndex": {
          "description": "引用的数据索引",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "数据唯一标识"
        },
        "parser": {
          "anyOf": [
            {
              "$ref": "#/definitions/SheetParseOptions"
            },
            {
              "$ref": "#/definitions/CommonParseOptions"
            }
          ]
        },
        "transforms": {
          "description": "数据 transform 配置",
          "items": {
            "$ref": "#/definitions/BuildInTransformOptions"
          },
          "type": "array"
        },
        "values": {
          "$ref": "#/definitions/IHierarchyNodeData"
        }
      },
      "required": [
        "values"
      ],
      "type": "object"
    },
    "IHierarchyNodeData": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IHistogram3dChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "histogram3d",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\ny轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IHistogramChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "histogram",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IIndicatorItemSpec": {
      "properties": {
        "autoFit": {
          "default": false,
          "description": "是否自适应文字空间缩放文字大小",
          "type": "boolean"
        },
        "autoLimit": {
          "default": false,
          "description": "是否自适应文字空间进行缩略",
          "type": "boolean"
        },
        "field": {
          "description": "文字内容字段\n优先级高于样式中 text 配置",
          "type": "string"
        },
        "fitPercent": {
          "default": 0.5,
          "description": "自适应文字宽度与可用空间的比例",
          "type": "number"
        },
        "space": {
          "description": "title.space: title 和 content 之间的间距\ncontentItem.space: content 之间的间距\n兼容gap",
          "type": "number"
        },
        "style": {
          "allOf": [
            {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9]+$": {}
              },
              "type": "object"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "文字样式"
        },
        "visible": {
          "default": true,
          "description": "是否显示当前项",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IIndicatorItemTheme": {
      "properties": {
        "autoFit": {
          "default": false,
          "description": "是否自适应文字空间缩放文字大小",
          "type": "boolean"
        },
        "autoLimit": {
          "default": false,
          "description": "是否自适应文字空间进行缩略",
          "type": "boolean"
        },
        "field": {
          "description": "文字内容字段\n优先级高于样式中 text 配置",
          "type": "string"
        },
        "fitPercent": {
          "default": 0.5,
          "description": "自适应文字宽度与可用空间的比例",
          "type": "number"
        },
        "space": {
          "description": "title.space: title 和 content 之间的间距\ncontentItem.space: content 之间的间距\n兼容gap",
          "type": "number"
        },
        "style": {
          "additionalProperties": false,
          "description": "文字样式",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "default": true,
          "description": "是否显示当前项",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IIndicatorSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "content": {
          "anyOf": [
            {
              "$ref": "#/definitions/IIndicatorItemSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IIndicatorItemSpec"
              },
              "type": "array"
            }
          ],
          "description": "指标卡内容文字配置"
        },
        "fixed": {
          "default": true,
          "description": "保持指标卡内容显示 / 交互后才显示",
          "type": "boolean"
        },
        "gap": {
          "default": 0,
          "description": "指标卡文字间隔",
          "type": "number"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "limitRatio": {
          "description": "指标卡宽度占内容区域的最大比值（从0到1）",
          "type": "number"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "指标卡 x 方向偏移\n支持两种格式：像素值、百分比"
        },
        "offsetY": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "指标卡 y 方向偏移\n支持两种格式：像素值、百分比"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "title": {
          "$ref": "#/definitions/IIndicatorItemSpec",
          "description": "指标卡标题文字配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "trigger": {
          "default": "'select'",
          "description": "交互触发类型",
          "enum": [
            "hover",
            "none",
            "select"
          ],
          "type": "string"
        },
        "visible": {
          "default": true,
          "description": "是否显示指标卡组件",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IIndicatorTheme": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "content": {
          "$ref": "#/definitions/IIndicatorItemTheme",
          "description": "指标卡内容文字配置"
        },
        "fixed": {
          "default": true,
          "description": "保持指标卡内容显示 / 交互后才显示",
          "type": "boolean"
        },
        "gap": {
          "default": 0,
          "description": "指标卡文字间隔",
          "type": "number"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "limitRatio": {
          "description": "指标卡宽度占内容区域的最大比值（从0到1）",
          "type": "number"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "指标卡 x 方向偏移\n支持两种格式：像素值、百分比"
        },
        "offsetY": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "指标卡 y 方向偏移\n支持两种格式：像素值、百分比"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "title": {
          "$ref": "#/definitions/IIndicatorItemTheme",
          "description": "指标卡标题文字配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "trigger": {
          "default": "'select'",
          "description": "交互触发类型",
          "enum": [
            "hover",
            "none",
            "select"
          ],
          "type": "string"
        },
        "visible": {
          "default": true,
          "description": "是否显示指标卡组件",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IInvalidType": {
      "enum": [
        "break",
        "ignore",
        "link",
        "zero"
      ],
      "type": "string"
    },
    "IItem": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<LegendItem,\"label\"|\"background\"|\"width\"|\"height\"|\"maxWidth\"|\"shape\"|\"value\"|\"focusIconStyle\">"
        }
      ]
    },
    "IItemContent": {
      "properties": {
        "image": {
          "typeof": "function"
        },
        "offsetX": {
          "description": "x 方向偏移量",
          "type": "number"
        },
        "offsetY": {
          "description": "y 方向偏移量",
          "type": "number"
        },
        "position": {
          "$ref": "#/definitions/IMarkPointItemPosition",
          "description": "标注内容相对于定位点的位置"
        },
        "refAngle": {
          "description": "label or symbol 相对默认角度的偏移 （label跟随line的角度做自动旋转时，默认按照line的平行向量作为初始角度）",
          "type": "number"
        },
        "refX": {
          "description": "label or symbol 相对line平行方向上的偏移",
          "type": "number"
        },
        "refY": {
          "description": "label or symbol 相对line正交方向上的偏移",
          "type": "number"
        },
        "richText": {
          "typeof": "function"
        },
        "symbol": {
          "typeof": "function"
        },
        "text": {
          "$ref": "#/definitions/IMarkerLabelSpec",
          "description": "type为text时, text的样式\n'text'类型的ItemContent新增三种子类型：'text','rich','html'。配置在textStyle.type上。"
        },
        "type": {
          "description": "标注类型",
          "enum": [
            "image",
            "richText",
            "symbol",
            "text"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ILabel": {
      "properties": {
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "inside": {
          "default": false,
          "description": "标签朝向，默认朝外(坐标线包围盒外部)",
          "type": "boolean"
        },
        "minGap": {
          "description": "标签之间的最小间距（单位为像素），仅当轴采样开始时生效（`sampling: true`）。\n该配置会影响轴采样的结果。",
          "type": "number"
        },
        "space": {
          "description": "标签同 tick 之间的间距",
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "anyOf": [
            {
              "$ref": "#/definitions/ITextMarkSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "文本样式设置"
        },
        "type": {
          "description": "文本类型：text, rich, html",
          "enum": [
            "html",
            "rich",
            "text"
          ],
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ILabelAnimation": {
      "properties": {
        "delay": {
          "type": "number"
        },
        "duration": {
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType"
        },
        "increaseEffect": {
          "type": "boolean"
        },
        "mode": {
          "enum": [
            "after",
            "after-all",
            "same-time"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ILabelSpec": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "centerOffset": {
          "description": "中心点偏移距离",
          "type": "number"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "customLayoutFunc": {
          "typeof": "function"
        },
        "customOverlapFunc": {
          "typeof": "function"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "formatter": {
          "description": "字符串模版\n用{}包裹变量名的字符串模版, 变量名取自数据属性值\n在饼图中支持配置百分比, {_percent_}\neg: 'type={type},value={value},percent={_percent_}'",
          "since": "1.7.0",
          "type": "string"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "labelLayout": {
          "description": "标签布局",
          "enum": [
            "region",
            "series"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "description": "标签位置",
          "type": "string"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "标签样式配置"
        },
        "support3d": {
          "description": "是否支持3D",
          "type": "boolean"
        },
        "textType": {
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ILayer": {
      "properties": {
        "AABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "OBBBounds": {
          "$ref": "#/definitions/IOBBBounds"
        },
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "addState": {
          "typeof": "function"
        },
        "addUpdateBoundTag": {
          "typeof": "function"
        },
        "addUpdateGlobalPositionTag": {
          "typeof": "function"
        },
        "addUpdateLayoutTag": {
          "typeof": "function"
        },
        "addUpdatePositionTag": {
          "typeof": "function"
        },
        "addUpdateShapeAndBoundsTag": {
          "typeof": "function"
        },
        "afterDraw": {
          "typeof": "function"
        },
        "animate": {
          "typeof": "function"
        },
        "animates": {
          "$ref": "#/definitions/Map<string|number,IAnimate>"
        },
        "animationBackUps": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "applyStateAttrs": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "attachShadow": {
          "typeof": "function"
        },
        "attribute": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "background": {
          "type": "string"
        },
        "backgroundImg": {
          "type": "boolean"
        },
        "bindDom": {
          "$ref": "#/definitions/Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>"
        },
        "blendMode": {
          "type": "string"
        },
        "canvasId": {
          "type": "string"
        },
        "childrenCount": {
          "type": "number"
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clearStates": {
          "typeof": "function"
        },
        "clearUpdateShapeTag": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "combineSubLayer": {
          "typeof": "function"
        },
        "combineTo": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createOrUpdateChild": {
          "typeof": "function"
        },
        "createPathProxy": {
          "typeof": "function"
        },
        "createTheme": {
          "typeof": "function"
        },
        "delete": {
          "typeof": "function"
        },
        "detachShadow": {
          "typeof": "function"
        },
        "dirtyBound": {
          "$ref": "#/definitions/IBounds"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "dpr": {
          "type": "number"
        },
        "drawTo": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "findFace": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getComputedAttribute": {
          "typeof": "function"
        },
        "getDefaultAttribute": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getNativeHandler": {
          "typeof": "function"
        },
        "getNoWorkAnimateAttr": {
          "typeof": "function"
        },
        "getOffsetXY": {
          "typeof": "function"
        },
        "getState": {
          "typeof": "function"
        },
        "globalAABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "globalTransMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "glyphHost": {
          "$ref": "#/definitions/IGraphic<IGlyphGraphicAttribute>"
        },
        "hasState": {
          "typeof": "function"
        },
        "height": {
          "type": "number"
        },
        "hideAll": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "imageData": {
          "$ref": "#/definitions/ImageData"
        },
        "imageLoadFail": {
          "typeof": "function"
        },
        "imageLoadSuccess": {
          "typeof": "function"
        },
        "in3dMode": {
          "type": "boolean"
        },
        "incremental": {
          "type": "number"
        },
        "incrementalAppendChild": {
          "typeof": "function"
        },
        "incrementalAt": {
          "type": "number"
        },
        "incrementalClearChild": {
          "typeof": "function"
        },
        "initAttributes": {
          "typeof": "function"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "isValid": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "layerMode": {
          "$ref": "#/definitions/LayerMode"
        },
        "main": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "normalAttrs": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "numberType": {
          "type": "number"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "offscreen": {
          "type": "boolean"
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "onAddStep": {
          "typeof": "function"
        },
        "onAnimateBind": {
          "typeof": "function"
        },
        "onBeforeAttributeUpdate": {
          "typeof": "function"
        },
        "onSetStage": {
          "typeof": "function"
        },
        "onStep": {
          "typeof": "function"
        },
        "onStop": {
          "typeof": "function"
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "opacity": {
          "type": "number"
        },
        "parent": {},
        "pathProxy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "pick": {
          "typeof": "function"
        },
        "pickable": {
          "type": "boolean"
        },
        "prepare": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeState": {
          "typeof": "function"
        },
        "render": {
          "typeof": "function"
        },
        "renderCount": {
          "type": "number"
        },
        "resize": {
          "typeof": "function"
        },
        "resizeView": {
          "typeof": "function"
        },
        "resources": {
          "$ref": "#/definitions/Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateTo": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleTo": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setAttribute": {
          "typeof": "function"
        },
        "setAttributes": {
          "typeof": "function"
        },
        "setDpr": {
          "typeof": "function"
        },
        "setMode": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "setTheme": {
          "typeof": "function"
        },
        "setToFrame": {
          "typeof": "function"
        },
        "shadowRoot": {
          "$ref": "#/definitions/IShadowRoot"
        },
        "shouldSelfChangeUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateGlobalMatrix": {
          "typeof": "function"
        },
        "shouldUpdateShape": {
          "typeof": "function"
        },
        "showAll": {
          "typeof": "function"
        },
        "skewTo": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "stamp": {
          "type": "number"
        },
        "startAnimate": {
          "typeof": "function"
        },
        "stateProxy": {
          "typeof": "function"
        },
        "states": {
          "$ref": "#/definitions/Record<string,Partial<IGroupGraphicAttribute>>"
        },
        "stepInterpolate": {
          "typeof": "function"
        },
        "stopAnimates": {
          "typeof": "function"
        },
        "subLayers": {
          "$ref": "#/definitions/Map<number,{layer:ILayer;group?:IGroup;zIndex:number;drawContribution?:IDrawContribution;}>"
        },
        "theme": {
          "$ref": "#/definitions/ITheme"
        },
        "toCustomPath": {
          "typeof": "function"
        },
        "toJson": {
          "typeof": "function"
        },
        "toggleState": {
          "typeof": "function"
        },
        "transMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "translate": {
          "typeof": "function"
        },
        "translateTo": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/GraphicType"
        },
        "update": {
          "typeof": "function"
        },
        "updateNormalAttrs": {
          "typeof": "function"
        },
        "useStates": {
          "typeof": "function"
        },
        "valid": {
          "type": "boolean"
        },
        "viewHeight": {
          "type": "number"
        },
        "viewWidth": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "AABBBounds",
        "OBBBounds",
        "_uid",
        "add",
        "addEventListener",
        "addState",
        "addUpdateBoundTag",
        "addUpdateGlobalPositionTag",
        "addUpdateLayoutTag",
        "addUpdatePositionTag",
        "addUpdateShapeAndBoundsTag",
        "afterDraw",
        "animate",
        "animates",
        "appendChild",
        "applyStateAttrs",
        "at",
        "attachShadow",
        "attribute",
        "background",
        "childrenCount",
        "clearStates",
        "clearUpdateShapeTag",
        "clone",
        "combineSubLayer",
        "combineTo",
        "containNode",
        "containsPoint",
        "count",
        "createOrUpdateChild",
        "createPathProxy",
        "createTheme",
        "delete",
        "detachShadow",
        "dirtyBound",
        "dispatchEvent",
        "dpr",
        "drawTo",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getComputedAttribute",
        "getDefaultAttribute",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getNativeHandler",
        "getNoWorkAnimateAttr",
        "getOffsetXY",
        "getState",
        "globalAABBBounds",
        "globalTransMatrix",
        "hasState",
        "height",
        "hideAll",
        "imageLoadFail",
        "imageLoadSuccess",
        "incrementalAppendChild",
        "incrementalClearChild",
        "initAttributes",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "isValid",
        "lastChild",
        "layerMode",
        "main",
        "off",
        "offscreen",
        "on",
        "onSetStage",
        "onStep",
        "onStop",
        "once",
        "opacity",
        "parent",
        "pick",
        "pickable",
        "prepare",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeState",
        "render",
        "renderCount",
        "resize",
        "resizeView",
        "rotate",
        "rotateTo",
        "scale",
        "scaleTo",
        "setAllDescendantsProps",
        "setAttribute",
        "setAttributes",
        "setDpr",
        "setMode",
        "setStage",
        "setTheme",
        "setToFrame",
        "shouldSelfChangeUpdateAABBBounds",
        "shouldUpdateAABBBounds",
        "shouldUpdateGlobalMatrix",
        "shouldUpdateShape",
        "showAll",
        "skewTo",
        "startAnimate",
        "stepInterpolate",
        "stopAnimates",
        "subLayers",
        "toJson",
        "toggleState",
        "transMatrix",
        "translate",
        "translateTo",
        "update",
        "updateNormalAttrs",
        "useStates",
        "valid",
        "viewHeight",
        "viewWidth",
        "width"
      ],
      "type": "object"
    },
    "ILayerService": {
      "properties": {
        "createLayer": {
          "typeof": "function"
        },
        "getStageLayer": {
          "typeof": "function"
        },
        "layerCount": {
          "typeof": "function"
        },
        "prepareStageLayer": {
          "typeof": "function"
        },
        "releaseLayer": {
          "typeof": "function"
        },
        "restLayerCount": {
          "typeof": "function"
        }
      },
      "required": [
        "createLayer",
        "getStageLayer",
        "layerCount",
        "prepareStageLayer",
        "releaseLayer",
        "restLayerCount"
      ],
      "type": "object"
    },
    "ILayoutItemSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ILayoutNumber": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "type": "number"
        }
      ]
    },
    "ILayoutPaddingSpec": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "items": {
            "$ref": "#/definitions/ILayoutNumber"
          },
          "type": "array"
        },
        {
          "type": "number"
        }
      ],
      "description": "布局 padding的配置"
    },
    "ILayoutSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/IGridLayoutSpec"
        },
        {
          "$ref": "#/definitions/IBaseLayoutSpec"
        }
      ]
    },
    "ILayoutType": {
      "description": "相对布局和绝对布局\n在相对布局结束后进行二次的绝对布局\n绝对布局会只根据 chart 进行相对处理",
      "enum": [
        "absolute",
        "normal",
        "normal-inline",
        "region",
        "region-relative"
      ],
      "type": "string"
    },
    "ILegendSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/IColorLegendSpec"
        },
        {
          "$ref": "#/definitions/ISizeLegendSpec"
        },
        {
          "$ref": "#/definitions/IDiscreteLegendSpec",
          "description": "spec"
        }
      ]
    },
    "ILineChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "lineLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "折线标签配置",
          "since": "1.7.0"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/ILineSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'line'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "line",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "ILineLikeLabelSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ILineLikeSeriesTheme": {
      "properties": {
        "label": {
          "$ref": "#/definitions/Partial<ILineLikeLabelSpec>"
        },
        "line": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>"
        },
        "point": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "ILineMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "curveType": {
          "$ref": "#/definitions/InterpolateType"
        },
        "defined": {
          "type": "boolean"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/LineStrokeCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/LineStrokeJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ILineSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "lineLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "折线标签配置",
          "since": "1.7.0"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'line'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "line",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "ILinearAxisSpec": {
      "properties": {
        "expand": {
          "typeof": "function"
        },
        "max": {
          "description": "最大值，**优先级高于 zero，nice**",
          "type": "number"
        },
        "min": {
          "description": "最小值，**优先级高于 zero，nice**",
          "type": "number"
        },
        "nice": {
          "default": true,
          "description": "当配置了 min 和 max，该配置项失效",
          "type": "boolean"
        },
        "niceType": {
          "default": "undefined('tickCountFirst')",
          "description": "不配置就默认是tickCountFirst",
          "enum": [
            "accurateFirst",
            "tickCountFirst"
          ],
          "type": "string"
        },
        "range": {
          "typeof": "function"
        },
        "tooltipFilterRange": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "连续轴上的 dimension tooltip 数据筛选范围\n如果配置为单个数字 d，则筛选区间为 [x0 - d, x0 + d]；如果配置为二元组 [d1, d2]，则筛选区间为 [x0 + d1, x0 + d2]",
          "since": "1.4.0"
        },
        "zero": {
          "default": true,
          "description": "当配置了 min和 max，该配置项失效",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ILinearGradient": {
      "properties": {
        "gradient": {
          "const": "linear",
          "type": "string"
        },
        "stops": {
          "items": {
            "$ref": "#/definitions/IGradientStop"
          },
          "type": "array"
        },
        "x0": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y0": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "ILinearProgressChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bandWidth": {
          "description": "进度条宽度\n以像素值(px)为单位",
          "type": "number"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "cornerRadius": {
          "default": 0,
          "description": "进度条圆角半径",
          "type": "number"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "default": "Direction.horizontal",
          "description": "方向"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progress": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "进度条样式\nTODO: 支持百分比作为padding, 类型为string"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ILinearProgressSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "背景条样式"
        },
        "type": {
          "const": "linearProgress",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "coordinate: 'cartesian'\nx轴字段"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n因为存在 direction，运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "ILinearProgressSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bandWidth": {
          "description": "进度条宽度\n以像素值(px)为单位",
          "type": "number"
        },
        "cornerRadius": {
          "default": 0,
          "description": "进度条圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "default": "Direction.horizontal",
          "description": "方向"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progress": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "进度条样式\nTODO: 支持百分比作为padding, 类型为string"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "背景条样式"
        },
        "type": {
          "const": "linearProgress",
          "description": "系列类型",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "coordinate: 'cartesian'\nx轴字段"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n因为存在 direction，运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "ILinearProgressSeriesTheme": {
      "properties": {
        "bandWidth": {
          "type": "number"
        },
        "progress": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "track": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        }
      },
      "type": "object"
    },
    "ILinkSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "clipHeight": {
          "description": "link 系列的可视高度",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataDot": {
          "$ref": "#/definitions/DataView",
          "description": "被关联dot series的数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "dotSeriesIndex": {
          "description": "被关联的dot series index",
          "type": "number"
        },
        "dotSeriesSpec": {
          "$ref": "#/definitions/IDotSeriesSpec",
          "description": "被关联的dot series的spec"
        },
        "dotTypeField": {
          "description": "用于区分link的stroke逻辑。如果没有配置，则每条link都使用相同的stroke",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "fromField": {
          "description": "用于绘制link的起点。",
          "type": "string"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "leftAppendPadding": {
          "description": "link 系列的左边距(和dot 系列保持一致，主要用于放置dot 系列的title和subTitle)",
          "type": "number"
        },
        "link": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "图元配置"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "toField": {
          "description": "用于绘制link的终点。",
          "type": "string"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "link",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段\n运行双轴都为离散，连续。所以 yField 也可以像 xField 一样支持多维度"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "dotSeriesIndex",
        "fromField",
        "toField",
        "type"
      ],
      "type": "object"
    },
    "ILinkSeriesTheme": {
      "properties": {
        "arrow": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        },
        "link": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>"
        }
      },
      "type": "object"
    },
    "IMapChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<Omit<IPathMarkSpec,\"smoothScale\">>",
          "description": "图元配置"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "centroidProperty": {
          "default": "undefined",
          "description": "中心坐标映射字段",
          "since": "1.5.1",
          "type": "string"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "defaultFillColor": {
          "description": "默认填充颜色",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "map": {
          "description": "地图数据源",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "名称维度",
          "type": "string"
        },
        "nameMap": {
          "typeof": "function"
        },
        "nameProperty": {
          "default": "'name'",
          "description": "名称映射字段",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/IMapSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "map",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "值维度",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "map",
        "type"
      ],
      "type": "object"
    },
    "IMapLabelTheme": {
      "properties": {
        "background": {
          "typeof": "function"
        },
        "icon": {
          "typeof": "function"
        },
        "leader": {
          "typeof": "function"
        },
        "nameLabel": {
          "typeof": "function"
        },
        "offset": {
          "description": "标签非 outer 位置下与标记点的间距",
          "type": "number"
        },
        "position": {
          "$ref": "#/definitions/LabelPosition",
          "description": "标签位置"
        },
        "space": {
          "description": "icon/label之间的距离",
          "type": "number"
        },
        "valueLabel": {
          "typeof": "function"
        },
        "visible": {
          "description": "是否显示，默认 false",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IMapSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<Omit<IPathMarkSpec,\"smoothScale\">>",
          "description": "图元配置"
        },
        "centroidProperty": {
          "default": "undefined",
          "description": "中心坐标映射字段",
          "since": "1.5.1",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "defaultFillColor": {
          "description": "默认填充颜色",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "map": {
          "description": "地图数据源",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "名称维度",
          "type": "string"
        },
        "nameMap": {
          "typeof": "function"
        },
        "nameProperty": {
          "default": "'name'",
          "description": "名称映射字段",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "map",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "值维度",
          "type": "string"
        }
      },
      "required": [
        "map",
        "type"
      ],
      "type": "object"
    },
    "IMapSeriesTheme": {
      "properties": {
        "area": {
          "$ref": "#/definitions/Partial<IMarkTheme<Omit<IPathMarkSpec,\"smoothScale\">>>"
        },
        "defaultFillColor": {
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>&{offset?:number;position?:string;}>"
        }
      },
      "type": "object"
    },
    "IMarkAreaSpec": {
      "anyOf": [
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkAreaTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaXSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaYSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaXSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaYSpec"
            },
            {
              "$ref": "#/definitions/IMarkAreaTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkAreaTheme"
            }
          ]
        }
      ]
    },
    "IMarkAreaTheme": {
      "properties": {
        "area": {
          "typeof": "function"
        },
        "label": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "IMarkAreaXSpec": {
      "properties": {
        "endRelativeSeriesId": {
          "type": "string"
        },
        "endRelativeSeriesIndex": {
          "type": "number"
        },
        "relativeRelativeSeriesIndex": {
          "description": "被标注数据关联的series",
          "type": "number"
        },
        "startRelativeSeriesId": {
          "type": "string"
        },
        "startRelativeSeriesIndex": {
          "description": "起点和终点关联的series（仅在标注目标：坐标空间下有效）",
          "type": "number"
        },
        "x": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "x轴上的参考线。可以配置参考线在x轴上的值，或者聚合计算类型\n可以将 x 配置为 '15%' 百分比的形式，用于表示将 x 绘制在 marker 所在 region 横轴（从左往右）的百分之 15 位置处"
        },
        "x1": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        }
      },
      "required": [
        "x",
        "x1"
      ],
      "type": "object"
    },
    "IMarkAreaYSpec": {
      "properties": {
        "endRelativeSeriesId": {
          "type": "string"
        },
        "endRelativeSeriesIndex": {
          "type": "number"
        },
        "relativeRelativeSeriesIndex": {
          "description": "被标注数据关联的series",
          "type": "number"
        },
        "startRelativeSeriesId": {
          "type": "string"
        },
        "startRelativeSeriesIndex": {
          "description": "起点和终点关联的series（仅在标注目标：坐标空间下有效）",
          "type": "number"
        },
        "y": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "y轴上的参考线。可以配置参考线在y轴上的值，或者聚合计算类型\n可以将 y 配置为 '15%' 百分比的形式，用于表示将 y 绘制在 marker 所在 region 纵轴（从上到下）的百分之 15 位置处"
        },
        "y1": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        }
      },
      "required": [
        "y",
        "y1"
      ],
      "type": "object"
    },
    "IMarkLineSpec": {
      "anyOf": [
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkLineTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "$ref": "#/definitions/IMarkLineXSpec"
            },
            {
              "$ref": "#/definitions/IMarkLineTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "$ref": "#/definitions/IMarkLineYSpec"
            },
            {
              "$ref": "#/definitions/IMarkLineTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkLineTheme"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
            },
            {
              "typeof": "function"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
            },
            {
              "typeof": "function"
            }
          ]
        }
      ]
    },
    "IMarkLineTheme": {
      "properties": {
        "endSymbol": {
          "$ref": "#/definitions/IMarkerSymbol"
        },
        "label": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkerRef"
            }
          ]
        },
        "line": {
          "typeof": "function"
        },
        "startSymbol": {
          "$ref": "#/definitions/IMarkerSymbol"
        }
      },
      "type": "object"
    },
    "IMarkLineXSpec": {
      "properties": {
        "endRelativeSeriesId": {
          "type": "string"
        },
        "endRelativeSeriesIndex": {
          "type": "number"
        },
        "relativeRelativeSeriesIndex": {
          "description": "被标注数据关联的series",
          "type": "number"
        },
        "startRelativeSeriesId": {
          "type": "string"
        },
        "startRelativeSeriesIndex": {
          "description": "起点和终点关联的series（仅在标注目标：坐标空间下有效）",
          "type": "number"
        },
        "x": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "x轴上的参考线。可以配置参考线在x轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n可以将 x 配置为 '15%' 百分比的形式，用于表示将 x 绘制在 marker 所在 region 横轴（从左往右）的百分之 15 位置处"
        }
      },
      "required": [
        "x"
      ],
      "type": "object"
    },
    "IMarkLineYSpec": {
      "properties": {
        "endRelativeSeriesId": {
          "type": "string"
        },
        "endRelativeSeriesIndex": {
          "type": "number"
        },
        "relativeRelativeSeriesIndex": {
          "description": "被标注数据关联的series",
          "type": "number"
        },
        "startRelativeSeriesId": {
          "type": "string"
        },
        "startRelativeSeriesIndex": {
          "description": "起点和终点关联的series（仅在标注目标：坐标空间下有效）",
          "type": "number"
        },
        "y": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "y轴上的参考线。可以配置参考线在y轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算\n可以将 y 配置为 '15%' 百分比的形式，用于表示将 x 绘制在 marker 所在 region 纵轴（从上到下）的百分之 15 位置处"
        }
      },
      "required": [
        "y"
      ],
      "type": "object"
    },
    "IMarkPointItemPosition": {
      "enum": [
        "bottom",
        "insideBottom",
        "insideMiddle",
        "insideTop",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "IMarkPointSpec": {
      "anyOf": [
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/IMarkerSpec"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
            }
          ]
        }
      ]
    },
    "IMarkPointTheme<IMarkerSymbol>": {
      "properties": {
        "itemContent": {
          "$ref": "#/definitions/IItemContent",
          "description": "标注内容"
        },
        "itemLine": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "IMarkPointTheme<Partial<IMarkerSymbol>>": {
      "properties": {
        "itemContent": {
          "$ref": "#/definitions/IItemContent",
          "description": "标注内容"
        },
        "itemLine": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "IMarkSpec<IArcMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IAreaMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IBoxPlotMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<ILineMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<ILinkPathMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IPathMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IProgressArcMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IRectMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IRippleMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<IRuleMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<ISymbolMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<ITextMarkSpec>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkSpec<Omit<IPathMarkSpec,\"smoothScale\">>": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ],
      "description": "markSpec"
    },
    "IMarkerLabelSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IMarkerRef"
        }
      ]
    },
    "IMarkerRef": {
      "properties": {
        "refAngle": {
          "description": "label or symbol 相对默认角度的偏移 （label跟随line的角度做自动旋转时，默认按照line的平行向量作为初始角度）",
          "type": "number"
        },
        "refX": {
          "description": "label or symbol 相对line平行方向上的偏移",
          "type": "number"
        },
        "refY": {
          "description": "label or symbol 相对line正交方向上的偏移",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IMarkerSpec": {
      "properties": {
        "autoRange": {
          "default": false,
          "description": "marker组件是否自动拓展轴范围",
          "since": "1.1.0",
          "type": "boolean"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "default": false,
          "description": "marker组件超出图表区域是否被裁剪",
          "since": "1.3.0",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "default": false,
          "description": "marker组件是否可交互",
          "type": "boolean"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "name": {
          "description": "标注组件的名称标识",
          "since": "1.7.0",
          "type": "string"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "relativeSeriesId": {
          "type": [
            "string",
            "number"
          ]
        },
        "relativeSeriesIndex": {
          "description": "标注数据关联的series",
          "type": "number"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "default": true,
          "description": "marker组件是否可见",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IMarkerSymbol": {
      "properties": {
        "refAngle": {
          "description": "label or symbol 相对默认角度的偏移 （label跟随line的角度做自动旋转时，默认按照line的平行向量作为初始角度）",
          "type": "number"
        },
        "refX": {
          "description": "label or symbol 相对line平行方向上的偏移",
          "type": "number"
        },
        "refY": {
          "description": "label or symbol 相对line正交方向上的偏移",
          "type": "number"
        },
        "size": {
          "description": "symbol 大小",
          "type": "number"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "symbolType": {
          "description": "symbol 形状，默认为带左右方向的箭头",
          "type": "string"
        },
        "visible": {
          "description": "是否展示 symbol",
          "type": "boolean"
        }
      },
      "required": [
        "visible"
      ],
      "type": "object"
    },
    "IMatrix": {
      "properties": {
        "a": {
          "type": "number"
        },
        "b": {
          "type": "number"
        },
        "c": {
          "type": "number"
        },
        "clone": {
          "typeof": "function"
        },
        "d": {
          "type": "number"
        },
        "e": {
          "type": "number"
        },
        "equalTo": {
          "typeof": "function"
        },
        "equalToMatrix": {
          "typeof": "function"
        },
        "f": {
          "type": "number"
        },
        "getInverse": {
          "typeof": "function"
        },
        "interpolate": {
          "typeof": "function"
        },
        "multiply": {
          "typeof": "function"
        },
        "onlyTranslate": {
          "typeof": "function"
        },
        "reset": {
          "typeof": "function"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateByCenter": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "setScale": {
          "typeof": "function"
        },
        "setValue": {
          "typeof": "function"
        },
        "toTransformAttrs": {
          "typeof": "function"
        },
        "transform": {
          "typeof": "function"
        },
        "transformPoint": {
          "typeof": "function"
        },
        "translate": {
          "typeof": "function"
        },
        "transpose": {
          "typeof": "function"
        }
      },
      "required": [
        "a",
        "b",
        "c",
        "clone",
        "d",
        "e",
        "equalTo",
        "equalToMatrix",
        "f",
        "getInverse",
        "interpolate",
        "multiply",
        "onlyTranslate",
        "reset",
        "rotate",
        "rotateByCenter",
        "scale",
        "setScale",
        "setValue",
        "toTransformAttrs",
        "transform",
        "transformPoint",
        "translate",
        "transpose"
      ],
      "type": "object"
    },
    "IMorphSeriesSpec": {
      "properties": {
        "enable": {
          "default": true,
          "description": "系列全局动画是否开启",
          "type": "boolean"
        },
        "morphElementKey": {
          "description": "数据匹配字段\n多数据图元可配置",
          "type": "string"
        },
        "morphKey": {
          "description": "图元匹配字段\n系列前后根据 morphKey 配置的内容进行关联",
          "type": "string"
        }
      },
      "type": "object"
    },
    "INode": {
      "properties": {
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "appendChild": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "childrenCount": {
          "type": "number"
        },
        "containNode": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "delete": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "name": {
          "type": "string"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "parent": {
          "$ref": "#/definitions/INode"
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "_uid",
        "add",
        "addEventListener",
        "appendChild",
        "at",
        "childrenCount",
        "containNode",
        "count",
        "delete",
        "dispatchEvent",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "lastChild",
        "off",
        "on",
        "once",
        "parent",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "setAllDescendantsProps"
      ],
      "type": "object"
    },
    "IOBBBounds": {
      "properties": {
        "add": {
          "typeof": "function"
        },
        "alignsWith": {
          "typeof": "function"
        },
        "angle": {
          "type": "number"
        },
        "clear": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "contains": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "copy": {
          "typeof": "function"
        },
        "empty": {
          "typeof": "function"
        },
        "encloses": {
          "typeof": "function"
        },
        "equals": {
          "typeof": "function"
        },
        "expand": {
          "typeof": "function"
        },
        "height": {
          "typeof": "function"
        },
        "intersect": {
          "typeof": "function"
        },
        "intersects": {
          "typeof": "function"
        },
        "rotate": {
          "typeof": "function"
        },
        "round": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleX": {
          "typeof": "function"
        },
        "scaleY": {
          "typeof": "function"
        },
        "set": {
          "typeof": "function"
        },
        "setValue": {
          "typeof": "function"
        },
        "transformWithMatrix": {
          "typeof": "function"
        },
        "translate": {
          "typeof": "function"
        },
        "union": {
          "typeof": "function"
        },
        "width": {
          "typeof": "function"
        },
        "x1": {
          "type": "number"
        },
        "x2": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "y2": {
          "type": "number"
        }
      },
      "required": [
        "add",
        "alignsWith",
        "angle",
        "clear",
        "clone",
        "contains",
        "containsPoint",
        "copy",
        "empty",
        "encloses",
        "equals",
        "expand",
        "height",
        "intersect",
        "intersects",
        "rotate",
        "round",
        "scale",
        "scaleX",
        "scaleY",
        "set",
        "setValue",
        "transformWithMatrix",
        "translate",
        "union",
        "width",
        "x1",
        "x2",
        "y1",
        "y2"
      ],
      "type": "object"
    },
    "IOption3D": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "camera": {},
        "center": {
          "typeof": "function"
        },
        "enableView3dTransform": {
          "type": "boolean"
        },
        "fieldDepth": {
          "type": "number"
        },
        "fieldRatio": {
          "type": "number"
        },
        "gama": {
          "type": "number"
        },
        "light": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "IOrientType": {
      "enum": [
        "bottom",
        "left",
        "right",
        "top",
        "z"
      ],
      "type": "string"
    },
    "IOutlierMarkSpec": {
      "properties": {
        "fill": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPadding": {
      "properties": {
        "bottom": {
          "type": "number"
        },
        "left": {
          "type": "number"
        },
        "right": {
          "type": "number"
        },
        "top": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPager": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<Omit<PagerAttributes,\"total\">&{space?:number;animation?:boolean;animationDuration?:number;animationEasing?:EasingType;},\"textStyle\"|\"handler\">"
        }
      ]
    },
    "IParserOptions": {
      "properties": {
        "clone": {
          "type": "boolean"
        },
        "layerType": {
          "type": "string"
        },
        "options": {},
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IPathMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "path": {
          "type": "string"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "smoothScale": {
          "type": "boolean"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPickerService": {
      "properties": {
        "configure": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "drawContribution": {
          "$ref": "#/definitions/IDrawContribution"
        },
        "pick": {
          "typeof": "function"
        },
        "pickContext": {
          "$ref": "#/definitions/IContext2d"
        },
        "pickGroup": {
          "typeof": "function"
        },
        "pickItem": {
          "typeof": "function"
        },
        "pickerMap": {
          "$ref": "#/definitions/Map<number,IGraphicPicker>"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "configure",
        "containsPoint",
        "pick",
        "pickGroup",
        "pickItem",
        "pickerMap",
        "type"
      ],
      "type": "object"
    },
    "IPie3dChartSpec": {
      "properties": {
        "angle3d": {
          "type": "number"
        },
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "饼图每个扇区为独立的系列",
          "type": "string"
        },
        "centerOffset": {
          "description": "饼图扇区中心偏移",
          "type": "number"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "cornerRadius": {
          "default": 0,
          "description": "饼图扇区圆角半径",
          "type": "number"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "default": 270,
          "description": "饼图的结束角度（0 ~ 360）",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "indicator": {
          "$ref": "#/definitions/IIndicatorSpec",
          "description": "饼图指标卡"
        },
        "innerRadius": {
          "default": 0,
          "description": "饼图扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "minAngle": {
          "default": 0,
          "description": "最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互。",
          "since": "1.4.0",
          "type": "number"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "饼图扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区之间的间隔角度",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pie": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "radius": {
          "default": 0.6,
          "description": "饼图扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "default": -90,
          "description": "饼图的起始角度（0 ~ 360）",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "pie3d",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IPie3dSeriesSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IPieSeriesSpec,\"type\">"
        }
      ]
    },
    "IPie3dSeriesTheme": {
      "properties": {
        "endAngle": {
          "type": "number"
        },
        "innerLabel": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "内标签配置",
          "since": "1.5.1"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "outerLabel": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "外标签配置",
          "since": "1.5.1"
        },
        "outerRadius": {
          "type": "number"
        },
        "pie3d": {
          "$ref": "#/definitions/Partial<IMarkTheme<IArc3dMarkSpec>>"
        },
        "radius": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPieChartSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "饼图每个扇区为独立的系列",
          "type": "string"
        },
        "centerOffset": {
          "description": "饼图扇区中心偏移",
          "type": "number"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "cornerRadius": {
          "default": 0,
          "description": "饼图扇区圆角半径",
          "type": "number"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "default": 270,
          "description": "饼图的结束角度（0 ~ 360）",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "indicator": {
          "$ref": "#/definitions/IIndicatorSpec",
          "description": "饼图指标卡"
        },
        "innerRadius": {
          "default": 0,
          "description": "饼图扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "minAngle": {
          "default": 0,
          "description": "最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互。",
          "since": "1.4.0",
          "type": "number"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "饼图扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区之间的间隔角度",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pie": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "radius": {
          "default": 0.6,
          "description": "饼图扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "default": -90,
          "description": "饼图的起始角度（0 ~ 360）",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "pie",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IPieSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "饼图每个扇区为独立的系列",
          "type": "string"
        },
        "centerOffset": {
          "description": "饼图扇区中心偏移",
          "type": "number"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "default": 0,
          "description": "饼图扇区圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "default": 270,
          "description": "饼图的结束角度（0 ~ 360）",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "default": 0,
          "description": "饼图扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "minAngle": {
          "default": 0,
          "description": "最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互。",
          "since": "1.4.0",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "饼图扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区之间的间隔角度",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pie": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "radius": {
          "default": 0.6,
          "description": "饼图扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "default": -90,
          "description": "饼图的起始角度（0 ~ 360）",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "pie",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IPieSeriesTheme": {
      "properties": {
        "endAngle": {
          "type": "number"
        },
        "innerLabel": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "内标签配置",
          "since": "1.5.1"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "outerLabel": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "外标签配置",
          "since": "1.5.1"
        },
        "outerRadius": {
          "type": "number"
        },
        "pie": {
          "$ref": "#/definitions/Partial<IMarkTheme<IArcMarkSpec>>"
        },
        "radius": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPlayer": {
      "properties": {
        "alternate": {
          "default": false,
          "description": "下一次播放时更换方向",
          "type": "boolean"
        },
        "auto": {
          "default": true,
          "description": "自动播放",
          "type": "boolean"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "controller": {
          "$ref": "#/definitions/IPlayerController",
          "description": "控制器"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType_1",
          "default": "'default'",
          "description": "离散轴支持三种播放方向, 连续型仅支持'default'."
        },
        "dx": {
          "default": 0,
          "description": "x方向偏移",
          "type": "number"
        },
        "dy": {
          "default": 0,
          "description": "y方向偏移",
          "type": "number"
        },
        "height": {
          "description": "组件高度",
          "type": "number"
        },
        "interval": {
          "default": 1000,
          "description": "该配置与totalDuration互斥, 若配置播放间隔, 则会重新计算总时长.",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "loop": {
          "default": false,
          "description": "循环播放",
          "type": "boolean"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/OrientType",
          "default": "bottom",
          "description": "组件位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "description": "对齐方式",
          "enum": [
            "end",
            "middle",
            "start"
          ],
          "type": "string"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "slider": {
          "$ref": "#/definitions/IPlayerSlider",
          "description": "滑动条"
        },
        "specs": {
          "default": [],
          "description": "每一个spec会merge外层的spec",
          "items": {
            "$ref": "#/definitions/Partial<Omit<IChartSpec,\"player\">>"
          },
          "type": "array"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "totalDuration": {
          "default": "undefined",
          "description": "该配置与interval互斥, 若配置总时长, 则会重新计算播放间隔.\n! 感觉这个配置, 不是很有必要.",
          "type": "number"
        },
        "type": {
          "$ref": "#/definitions/PlayerType",
          "default": "'continuous'",
          "description": "播放器类型"
        },
        "visible": {
          "default": true,
          "description": "组件显隐配置",
          "type": "boolean"
        },
        "width": {
          "description": "组件宽度",
          "type": "number"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPlayerController": {
      "description": "控制器",
      "properties": {
        "backward": {
          "$ref": "#/definitions/Partial<ControllerLayout&BaseGraphicAttributes<ISymbolMarkSpec>>",
          "description": "后退按钮"
        },
        "forward": {
          "$ref": "#/definitions/Partial<ControllerLayout&BaseGraphicAttributes<ISymbolMarkSpec>>",
          "description": "前进按钮"
        },
        "pause": {
          "$ref": "#/definitions/Partial<ControllerLayout&BaseGraphicAttributes<ISymbolMarkSpec>>",
          "description": "暂停按钮"
        },
        "start": {
          "$ref": "#/definitions/Partial<ControllerLayout&BaseGraphicAttributes<ISymbolMarkSpec>>",
          "description": "开始按钮"
        },
        "visible": {
          "default": true,
          "description": "显隐控制",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IPlayerSlider": {
      "description": "播放器滑动条",
      "properties": {
        "dx": {
          "default": 0,
          "description": "x方向的偏移",
          "type": "number"
        },
        "dy": {
          "default": 0,
          "description": "y方向的偏移",
          "type": "number"
        },
        "handlerStyle": {
          "$ref": "#/definitions/ISymbolMarkSpec",
          "description": "滑动手柄样式"
        },
        "railStyle": {
          "$ref": "#/definitions/IRectMarkSpec",
          "description": "滑动轨道样式"
        },
        "space": {
          "description": "与前一个元素的间隔",
          "type": "number"
        },
        "trackStyle": {
          "$ref": "#/definitions/IRectMarkSpec",
          "description": "滑动轨迹样式"
        },
        "visible": {
          "default": true,
          "description": "显隐控制",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IPlayerTheme": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "controller": {
          "$ref": "#/definitions/IPlayerController",
          "description": "控制器"
        },
        "dx": {
          "default": 0,
          "description": "x方向偏移",
          "type": "number"
        },
        "dy": {
          "default": 0,
          "description": "y方向偏移",
          "type": "number"
        },
        "height": {
          "description": "组件高度",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/OrientType",
          "default": "bottom",
          "description": "组件位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "description": "对齐方式",
          "enum": [
            "end",
            "middle",
            "start"
          ],
          "type": "string"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "slider": {
          "$ref": "#/definitions/IPlayerSlider",
          "description": "滑动条"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "default": true,
          "description": "组件显隐配置",
          "type": "boolean"
        },
        "width": {
          "description": "组件宽度",
          "type": "number"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPluginService": {
      "properties": {
        "active": {
          "typeof": "function"
        },
        "actived": {
          "type": "boolean"
        },
        "findPluginsByName": {
          "typeof": "function"
        },
        "register": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        }
      },
      "required": [
        "active",
        "actived",
        "findPluginsByName",
        "register",
        "release",
        "stage"
      ],
      "type": "object"
    },
    "IPoint": {
      "properties": {
        "add": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "context": {},
        "copyFrom": {
          "typeof": "function"
        },
        "defined": {
          "type": "boolean"
        },
        "div": {
          "typeof": "function"
        },
        "multi": {
          "typeof": "function"
        },
        "set": {
          "typeof": "function"
        },
        "sub": {
          "typeof": "function"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        }
      },
      "required": [
        "add",
        "clone",
        "copyFrom",
        "div",
        "multi",
        "set",
        "sub",
        "x",
        "y"
      ],
      "type": "object"
    },
    "IPointLike": {
      "properties": {
        "context": {},
        "defined": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "type": "object"
    },
    "IPoint_1": {
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "type": "object"
    },
    "IPolarAxisCommonTheme": {
      "properties": {
        "domainLine": {
          "$ref": "#/definitions/IDomainLine",
          "description": "轴线配置"
        },
        "grid": {
          "$ref": "#/definitions/IPolarGrid",
          "description": "网格线配置"
        },
        "label": {
          "$ref": "#/definitions/ILabel",
          "description": "轴标签配置"
        },
        "subGrid": {
          "$ref": "#/definitions/IPolarGrid",
          "description": "子网格线配置"
        },
        "subTick": {
          "$ref": "#/definitions/ITick",
          "description": "轴子刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "title": {
          "$ref": "#/definitions/ITitle",
          "description": "轴标题配置"
        }
      },
      "type": "object"
    },
    "IPolarAxisSpec": {
      "anyOf": [
        {
          "$ref": "#/definitions/IPolarLinearAxisSpec"
        },
        {
          "$ref": "#/definitions/IPolarBandAxisSpec"
        }
      ],
      "description": "spec"
    },
    "IPolarBandAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/Omit<ICommonAxisSpec,\"center\">"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IBandAxisSpec"
        }
      ]
    },
    "IPolarCrosshairSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "categoryField": {
          "$ref": "#/definitions/ICrosshairCategoryFieldSpec",
          "description": "极坐标系下 categoryField 字段对应轴上的 crosshair 配置"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "gridZIndex": {
          "description": "crosshair 辅助图形的显示层级",
          "type": "number"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "labelZIndex": {
          "description": "crosshair 文本的显示层级",
          "type": "number"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "trigger": {
          "$ref": "#/definitions/CrossHairTrigger",
          "default": "'hover'",
          "description": "是否可以通过 点击 固定住一组 crosshair，也可以同时触发。"
        },
        "triggerOff": {
          "anyOf": [
            {
              "items": [
                {
                  "const": "click",
                  "type": "string"
                },
                {
                  "const": "hover",
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "enum": [
                "click",
                "hover",
                "none"
              ],
              "type": "string"
            }
          ],
          "description": "隐藏crosshair的触发方式（目前仅支持和trigger一致的设置以及none）"
        },
        "valueField": {
          "$ref": "#/definitions/ICrosshairValueFieldSpec",
          "description": "极坐标系下 valueField 字段对应轴上的 crosshair 配置"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPolarGrid": {
      "allOf": [
        {
          "$ref": "#/definitions/IGrid"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IPolarLinearAxisSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/Omit<ICommonAxisSpec,\"center\">"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/ILinearAxisSpec"
        }
      ]
    },
    "IPolygonMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPoint_1"
          },
          "type": "array"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPoptipTheme": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "content": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "contentFormatMethod": {
          "typeof": "function"
        },
        "contentStyle": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<Omit<Partial<ITextGraphicAttribute>,\"fill\">>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxWidth": {
          "type": "number"
        },
        "maxWidthPercent": {
          "type": "number"
        },
        "minWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/Padding"
        },
        "panel": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<Omit<{visible:boolean;}&Partial<IRectGraphicAttribute>&Partial<IGraphicAttribute>&Partial<ISymbolAttribute>&{space?:number;},\"shadowColor\"|\"fill\"|\"stroke\">>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "position": {
          "enum": [
            "auto",
            "bl",
            "bottom",
            "br",
            "lb",
            "left",
            "lt",
            "rb",
            "right",
            "rt",
            "tl",
            "top",
            "tr"
          ],
          "type": "string"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "space": {
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "title": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "titleFormatMethod": {
          "typeof": "function"
        },
        "titleStyle": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<Omit<Partial<ITextGraphicAttribute>,\"fill\">>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "visibleFunc": {
          "typeof": "function"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IProgressArcMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "autoCapConical": {
          "description": "arc 在 roundCap 打开且应用环形渐变时是否对 cap 部分生效",
          "type": "boolean"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "arc 的 roundCap 属性，即圆角是否伸出 startAngle 和 endAngle 之外"
        },
        "centerOffset": {
          "description": "arc的中心点偏移距离",
          "type": "number"
        },
        "cornerRadius": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "innerPadding": {
          "description": "进度条内侧 padding（接受负值）",
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "outerPadding": {
          "description": "进度条外侧 padding（接受负值）",
          "type": "number"
        },
        "outerRadius": {
          "type": "number"
        },
        "padAngle": {
          "type": "number"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IProgressiveDataSchemeCase<string>": {
      "properties": {
        "isAvailable": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "可选，自定义回调，返回是否应用此色板，将覆盖 maxDomainLength 等配置"
        },
        "maxDomainLength": {
          "description": "可选，适合此色板的 domain 数量",
          "type": "number"
        },
        "scheme": {
          "description": "色板",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "scheme"
      ],
      "type": "object"
    },
    "IPyramid3dMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPoint_1"
          },
          "type": "array"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRadarChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "极坐标系下坐标轴配置，支持半径轴和角度轴。\n* `orient: 'angle'` 角度轴\n* `orient: 'radius'` 半径轴",
          "items": {
            "$ref": "#/definitions/IPolarAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IPolarCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/IRadarSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "radar",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IRadarSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "radar",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IRadarSeriesTheme": {
      "properties": {
        "area": {
          "$ref": "#/definitions/Partial<IMarkTheme<IAreaMarkSpec>>"
        },
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILineLikeLabelSpec>"
        },
        "line": {
          "$ref": "#/definitions/Partial<IMarkTheme<ILineMarkSpec>>"
        },
        "outerRadius": {
          "type": "number"
        },
        "point": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "radius": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRadialGradient": {
      "properties": {
        "gradient": {
          "const": "radial",
          "type": "string"
        },
        "r0": {
          "type": "number"
        },
        "r1": {
          "type": "number"
        },
        "stops": {
          "items": {
            "$ref": "#/definitions/IGradientStop"
          },
          "type": "array"
        },
        "x0": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y0": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        }
      },
      "required": [
        "gradient",
        "stops"
      ],
      "type": "object"
    },
    "IRangeAreaChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "areaLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "面积图元标签配置",
          "since": "1.7.0"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IRangeAreaSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeArea",
          "description": "图表类型配置",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeAreaSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "area": {
          "$ref": "#/definitions/IMarkSpec<IAreaMarkSpec>",
          "description": "面积图元配置"
        },
        "areaLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "面积图元标签配置",
          "since": "1.7.0"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "line": {
          "$ref": "#/definitions/IMarkSpec<ILineMarkSpec>",
          "description": "线图元配置"
        },
        "markOverlap": {
          "default": false,
          "description": "是否允许标记图形相互覆盖",
          "since": "1.6.0",
          "type": "boolean"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "点图元配置"
        },
        "pointDis": {
          "description": "标记点之间的距离，px",
          "since": "1.6.0",
          "type": "number"
        },
        "pointDisMul": {
          "default": 1,
          "description": "标记点之间的距离， pointSize 的倍数",
          "since": "1.6.0",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesMark": {
          "default": "'area'",
          "description": "系列主 mark 类型配置，该配置会影响图例的展示",
          "enum": [
            "area",
            "line",
            "point"
          ],
          "since": "1.2.0",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeArea",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeColumn3dChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<ILabelSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IRangeColumn3dSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeColumn3d",
          "description": "图表类型配置",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "maxField",
        "minField",
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeColumn3dSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<ILabelSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeColumn3d",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "maxField",
        "minField",
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeColumnChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<ILabelSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IRangeColumnSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeColumn",
          "description": "图表类型配置",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "maxField",
        "minField",
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeColumnSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<ILabelSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "maxField": {
          "type": "string"
        },
        "minField": {
          "description": "数据字段配置",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rangeColumn",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "maxField",
        "minField",
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IRangeColumnSeriesTheme": {
      "properties": {
        "bar": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Partial<ILabelSpec>"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "IRect3dMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "length": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRectMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRegionSpec": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "coordinate": {
          "$ref": "#/definitions/CoordinateType"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IRectMarkSpec>_2"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRenderService": {
      "properties": {
        "afterDraw": {
          "typeof": "function"
        },
        "beforeDraw": {
          "typeof": "function"
        },
        "dirtyBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "draw": {
          "typeof": "function"
        },
        "drawParams": {
          "$ref": "#/definitions/IRenderServiceDrawParams"
        },
        "prepare": {
          "typeof": "function"
        },
        "prepareRenderList": {
          "typeof": "function"
        },
        "render": {
          "typeof": "function"
        },
        "renderLists": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "renderTreeRoots": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        }
      },
      "required": [
        "afterDraw",
        "beforeDraw",
        "dirtyBounds",
        "draw",
        "drawParams",
        "prepare",
        "prepareRenderList",
        "render",
        "renderLists",
        "renderTreeRoots"
      ],
      "type": "object"
    },
    "IRenderServiceDrawParams": {
      "properties": {
        "clear": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "context": {
          "$ref": "#/definitions/IContext2d"
        },
        "height": {
          "type": "number"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "renderService": {
          "$ref": "#/definitions/IRenderService"
        },
        "renderStyle": {
          "type": "string"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "updateBounds": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "height",
        "layer",
        "renderService",
        "stage",
        "updateBounds",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "IRepeatType": {
      "enum": [
        "no-repeat",
        "repeat"
      ],
      "type": "string"
    },
    "IRichTextCharacter": {
      "anyOf": [
        {
          "$ref": "#/definitions/IRichTextParagraphCharacter"
        },
        {
          "$ref": "#/definitions/IRichTextImageCharacter"
        }
      ]
    },
    "IRichTextImageCharacter": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IRichTextParagraphCharacter": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "IRoamDragSpec": {
      "properties": {
        "enable": {
          "default": true,
          "description": "是否开启 缩放 / 拖拽 / 滚动",
          "type": "boolean"
        },
        "rate": {
          "default": 1,
          "description": "缩放 / 拖拽 / 滚动速率, 范围: [0, 1]",
          "type": "number"
        },
        "reverse": {
          "default": true,
          "description": "拖拽方向与滚动条移动方向是否相反",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IRoamScrollSpec": {
      "properties": {
        "enable": {
          "default": true,
          "description": "是否开启 缩放 / 拖拽 / 滚动",
          "type": "boolean"
        },
        "rate": {
          "default": 1,
          "description": "缩放 / 拖拽 / 滚动速率, 范围: [0, 1]",
          "type": "number"
        },
        "reverse": {
          "default": true,
          "description": "滚动方向与滚动条移动方向是否相反",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IRoamZoomSpec": {
      "properties": {
        "enable": {
          "default": true,
          "description": "是否开启 缩放 / 拖拽 / 滚动",
          "type": "boolean"
        },
        "focus": {
          "default": "true\n开启时, 默认以鼠标位置开始\n关闭时, 以画布中心缩放",
          "description": "是否开启聚焦缩放",
          "type": "boolean"
        },
        "rate": {
          "default": 1,
          "description": "缩放 / 拖拽 / 滚动速率, 范围: [0, 1]",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRoseChartSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "极坐标系下坐标轴配置，支持半径轴和角度轴。\n* `orient: 'angle'` 角度轴\n* `orient: 'radius'` 半径轴",
          "items": {
            "$ref": "#/definitions/IPolarAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "分类字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IPolarCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rose": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/IRoseSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rose",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IRoseSeriesSpec": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "分类字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rose": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "rose",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "IRoseSeriesTheme": {
      "properties": {
        "endAngle": {
          "type": "number"
        },
        "innerRadius": {
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "outerRadius": {
          "type": "number"
        },
        "radius": {
          "type": "number"
        },
        "rose": {
          "$ref": "#/definitions/Partial<IMarkTheme<IArcMarkSpec>>"
        },
        "startAngle": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IRuleMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "curveType": {
          "$ref": "#/definitions/InterpolateType"
        },
        "defined": {
          "type": "boolean"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineCap": {
          "$ref": "#/definitions/LineStrokeCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/LineStrokeJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ISamplingMethod": {
      "enum": [
        "average",
        "lttb",
        "max",
        "min",
        "sum"
      ],
      "type": "string"
    },
    "ISankeyChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "节点名称字段配置",
          "type": "string"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表布局方向"
        },
        "emphasis": {
          "typeof": "function"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "iterations": {
          "description": "布局的迭代次数",
          "type": "number"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "link": {
          "$ref": "#/definitions/IMarkSpec<ILinkPathMarkSpec>",
          "description": "边配置"
        },
        "linkSortBy": {
          "typeof": "function"
        },
        "linkWidth": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ],
          "description": "link宽度，单位px"
        },
        "minLinkHeight": {
          "description": "数据不为零或空时边的最小大小\n - 这个配置可以用来避免数据太小的时候看不到太细的链接\n - 建议小于5px\n - 当同时指定 `minNodeHeight` 和 `minLinkHeight` 两个选项时，此选项应小于 `minNodeHeight`",
          "type": "number"
        },
        "minNodeHeight": {
          "description": "数据不为零或空时节点的最小大小\n - 这个配置可以用来避免数据太小时看不到太细的节点\n - 建议小于5px",
          "type": "number"
        },
        "minStepWidth": {
          "description": "link + node 的最小宽度",
          "type": "number"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameKey": {},
        "node": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "节点配置"
        },
        "nodeAlign": {
          "description": "节点的对齐类型",
          "enum": [
            "center",
            "end",
            "justify",
            "left",
            "right",
            "start"
          ],
          "type": "string"
        },
        "nodeGap": {
          "description": "同一层中两个节点之间的间隙大小",
          "type": "number"
        },
        "nodeKey": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "解析node的key，defaultValue"
        },
        "nodeSortBy": {
          "typeof": "function"
        },
        "nodeWidth": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "每个节点的宽度，支持三种取值\n1. 百分比字符串，例如：{ nodeWidth: '12%' }\n2. 以'px'为单位的简单数字，eg: { nodeWidth: 20 }\n3. function，通过自定义计算指定nodeWidth"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ISankeySeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "setNodeLayer": {
          "typeof": "function"
        },
        "sourceField": {
          "description": "来源节点数据字段\n层级数据不提供",
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "targetField": {
          "description": "目标节点数据字段\n层级数据不提供",
          "type": "string"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "sankey",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "节点之间关系的权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "nameKey",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ISankeySeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "节点名称字段配置",
          "type": "string"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表布局方向"
        },
        "emphasis": {
          "typeof": "function"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "iterations": {
          "description": "布局的迭代次数",
          "type": "number"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "link": {
          "$ref": "#/definitions/IMarkSpec<ILinkPathMarkSpec>",
          "description": "边配置"
        },
        "linkSortBy": {
          "typeof": "function"
        },
        "linkWidth": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ],
          "description": "link宽度，单位px"
        },
        "minLinkHeight": {
          "description": "数据不为零或空时边的最小大小\n - 这个配置可以用来避免数据太小的时候看不到太细的链接\n - 建议小于5px\n - 当同时指定 `minNodeHeight` 和 `minLinkHeight` 两个选项时，此选项应小于 `minNodeHeight`",
          "type": "number"
        },
        "minNodeHeight": {
          "description": "数据不为零或空时节点的最小大小\n - 这个配置可以用来避免数据太小时看不到太细的节点\n - 建议小于5px",
          "type": "number"
        },
        "minStepWidth": {
          "description": "link + node 的最小宽度",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameKey": {},
        "node": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "节点配置"
        },
        "nodeAlign": {
          "description": "节点的对齐类型",
          "enum": [
            "center",
            "end",
            "justify",
            "left",
            "right",
            "start"
          ],
          "type": "string"
        },
        "nodeGap": {
          "description": "同一层中两个节点之间的间隙大小",
          "type": "number"
        },
        "nodeKey": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "解析node的key，defaultValue"
        },
        "nodeSortBy": {
          "typeof": "function"
        },
        "nodeWidth": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "每个节点的宽度，支持三种取值\n1. 百分比字符串，例如：{ nodeWidth: '12%' }\n2. 以'px'为单位的简单数字，eg: { nodeWidth: 20 }\n3. function，通过自定义计算指定nodeWidth"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "setNodeLayer": {
          "typeof": "function"
        },
        "sourceField": {
          "description": "来源节点数据字段\n层级数据不提供",
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "targetField": {
          "description": "目标节点数据字段\n层级数据不提供",
          "type": "string"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "sankey",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "节点之间关系的权重字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "nameKey",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ISankeySeriesTheme": {
      "properties": {
        "link": {
          "typeof": "function"
        },
        "node": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "IScatterChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "图元配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IScatterSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IVisualSpecBase<unknown,string>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "shapeField": {
          "description": "形状 视觉通道",
          "type": "string"
        },
        "size": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecBase<unknown,number>"
            },
            {
              "type": "number"
            }
          ]
        },
        "sizeField": {
          "description": "尺寸 视觉通道",
          "type": "string"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "scatter",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IScatterSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILineLikeLabelSpec",
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "point": {
          "$ref": "#/definitions/IMarkSpec<ISymbolMarkSpec>",
          "description": "图元配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IVisualSpecBase<unknown,string>"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "shapeField": {
          "description": "形状 视觉通道",
          "type": "string"
        },
        "size": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecBase<unknown,number>"
            },
            {
              "type": "number"
            }
          ]
        },
        "sizeField": {
          "description": "尺寸 视觉通道",
          "type": "string"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "scatter",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IScatterSeriesTheme": {
      "properties": {
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        },
        "point": {
          "$ref": "#/definitions/Partial<IMarkTheme<ISymbolMarkSpec>>"
        },
        "shape": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "IScrollBarSpec": {
      "properties": {
        "auto": {
          "description": "是否为自动模式。开启以后，组件不会导致轴 scale 缩放，end、roam 等可能导致缩放的配置将被忽略，且组件可以自动消失",
          "since": "1.4.0",
          "type": "boolean"
        },
        "autoIndent": {
          "description": "是否进行自动缩进",
          "type": "boolean"
        },
        "axisId": {
          "description": "关联的轴ID",
          "type": "string"
        },
        "axisIndex": {
          "description": "关联的轴序号",
          "type": "number"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "delayTime": {
          "default": 30,
          "description": "事件触发延迟时长",
          "since": "1.5.1",
          "type": "number"
        },
        "delayType": {
          "$ref": "#/definitions/IDelayType",
          "description": "事件触发延迟类型, 不配置则视作未开启",
          "since": "1.5.1"
        },
        "end": {
          "default": 1,
          "description": "终点配置（比例）：范围[0, 1]",
          "type": "number"
        },
        "endValue": {
          "type": [
            "string",
            "number"
          ]
        },
        "field": {
          "description": "声明关联的映射字段",
          "type": "string"
        },
        "filterMode": {
          "$ref": "#/definitions/IFilterMode",
          "default": "'axis' (scrollBar默认视口裁剪模式)\n详细可参考：https://echarts.apache.org/zh/option.html#dataZoom-slider.filterMode）",
          "description": "数据过滤模式"
        },
        "height": {
          "anyOf": [
            {
              "const": "auto",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "default": "'auto'",
          "description": "组件高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "innerPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IPadding"
            },
            {
              "type": "number"
            }
          ],
          "description": "滚动条内边距，影响滑轨的实际可用空间 [top, right, bottom, left]"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "limitRange": {
          "description": "滑块限制的滚动范围，数值为 0 - 1",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxSpan": {
          "default": 1,
          "description": "用于限制窗口大小的最大值, [0, 1]",
          "since": "1.5.1",
          "type": "number"
        },
        "maxValueSpan": {
          "description": "用于限制窗口大小的最大数据值, 仅在continous scale生效，优先级高于maxSpan",
          "since": "1.5.1",
          "type": "number"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minSpan": {
          "default": 0,
          "description": "用于限制窗口大小的最小值, [0, 1]",
          "since": "1.5.1",
          "type": "number"
        },
        "minValueSpan": {
          "description": "用于限制窗口大小的最小数据值, 仅在continous scale生效，优先级高于minSpan",
          "since": "1.5.1",
          "type": "number"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'left'",
          "description": "组件位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "rail": {
          "additionalProperties": false,
          "description": "滚动条轨道样式。",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "range": {
          "description": "滑块当前的可视范围，数值为 0 - 1",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "rangeMode": {
          "description": "start和end的配置模式：只有模式和配置匹配时才生效，比如rangeMode: ['percent', 'value'], 那么必须start和endValue都配置才可以生效",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "realTime": {
          "default": true,
          "description": "是否在操作时动态更新视图",
          "since": "1.5.1",
          "type": "boolean"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的region索引，与axis关联的region取交集\n未配置：默认跟随axis控制的region\n已配置：用户配置与axis关联的region取交集\n配置优先级：index > id"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "roamDrag": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamDragSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "漫游模式 - 拖拽（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "roamScroll": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamScrollSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "漫游模式 - 滚动（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "roamZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRoamZoomSpec"
            },
            {
              "type": "boolean"
            }
          ],
          "default": false,
          "description": "漫游模式 - 缩放（画布内自由交互), 默认不开启",
          "since": "1.5.1"
        },
        "round": {
          "description": "滑块是否圆角。",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "slider": {
          "additionalProperties": false,
          "description": "滚动条滑块样式。",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "start": {
          "default": 0,
          "description": "起点配置（比例）：范围[0, 1]",
          "type": "number"
        },
        "startValue": {
          "description": "起始点数据配置：没有配置的时候根据start和end进行转换",
          "type": [
            "string",
            "number"
          ]
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "valueField": {
          "description": "数据过滤对应的数据字段",
          "type": "string"
        },
        "visible": {
          "default": true,
          "description": "是否显示组件",
          "type": "boolean"
        },
        "width": {
          "anyOf": [
            {
              "const": "auto",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "default": "'auto'",
          "description": "组件宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        },
        "zoomLock": {
          "default": false,
          "description": "是否锁定选择区域（或叫做数据窗口）的大小",
          "since": "1.5.1",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IScrollBarStyle": {
      "properties": {
        "rail": {
          "additionalProperties": false,
          "description": "滚动条轨道样式。",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "slider": {
          "additionalProperties": false,
          "description": "滚动条滑块样式。",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IScrollBarTheme": {
      "allOf": [
        {
          "$ref": "#/definitions/ILayoutItemSpec"
        },
        {
          "$ref": "#/definitions/IScrollBarStyle"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ISegment": {
      "properties": {
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "simplify": {
          "type": "boolean"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        }
      },
      "required": [
        "points"
      ],
      "type": "object"
    },
    "ISequenceChartSpec": {
      "properties": {
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "appendPadding": {
          "$ref": "#/definitions/IPadding",
          "description": "可以为左边的title预留padding"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "dataZooms": {
          "description": "缩略轴配置",
          "items": {
            "$ref": "#/definitions/IDataZoomSpec"
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "scrollBars": {
          "description": "滚动条配置",
          "items": {
            "$ref": "#/definitions/IScrollBarSpec"
          },
          "type": "array"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "type": {
          "const": "sequence",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ISequenceGrid": {
      "properties": {
        "background": {
          "typeof": "function"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ISequenceLabel": {
      "properties": {
        "formatMethod": {
          "typeof": "function"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ISeriesSpec": {
      "description": "series",
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "description": "系列类型",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ISeriesStyleItem": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ISeriesTheme": {
      "properties": {
        "area": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "area_horizontal": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "area_vertical": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "bar": {
          "$ref": "#/definitions/IBarSeriesTheme"
        },
        "bar3d": {
          "$ref": "#/definitions/IBar3dSeriesTheme"
        },
        "bar3d_horizontal": {
          "$ref": "#/definitions/IBar3dSeriesTheme"
        },
        "bar3d_vertical": {
          "$ref": "#/definitions/IBar3dSeriesTheme"
        },
        "bar_horizontal": {
          "$ref": "#/definitions/IBarSeriesTheme"
        },
        "bar_vertical": {
          "$ref": "#/definitions/IBarSeriesTheme"
        },
        "boxPlot": {
          "$ref": "#/definitions/IBoxPlotSeriesTheme"
        },
        "boxPlot_horizontal": {
          "$ref": "#/definitions/IBoxPlotSeriesTheme"
        },
        "boxPlot_vertical": {
          "$ref": "#/definitions/IBoxPlotSeriesTheme"
        },
        "circlePacking": {
          "$ref": "#/definitions/ICirclePackingSeriesTheme"
        },
        "circularProgress": {
          "$ref": "#/definitions/ICircularProgressSeriesTheme"
        },
        "correlation": {
          "$ref": "#/definitions/ICorrelationSeriesTheme"
        },
        "dot": {
          "$ref": "#/definitions/IDotSeriesTheme"
        },
        "funnel": {
          "$ref": "#/definitions/IFunnelSeriesTheme"
        },
        "funnel3d": {
          "$ref": "#/definitions/IFunnel3dSeriesTheme"
        },
        "gauge": {
          "$ref": "#/definitions/IGaugeSeriesTheme"
        },
        "gaugePointer": {
          "$ref": "#/definitions/IGaugePointerSeriesTheme"
        },
        "heatmap": {
          "$ref": "#/definitions/IHeatmapSeriesTheme"
        },
        "line": {
          "$ref": "#/definitions/ILineLikeSeriesTheme"
        },
        "line_horizontal": {
          "$ref": "#/definitions/ILineLikeSeriesTheme"
        },
        "line_vertical": {
          "$ref": "#/definitions/ILineLikeSeriesTheme"
        },
        "linearProgress": {
          "$ref": "#/definitions/ILinearProgressSeriesTheme"
        },
        "linearProgress_horizontal": {
          "$ref": "#/definitions/ILinearProgressSeriesTheme"
        },
        "linearProgress_vertical": {
          "$ref": "#/definitions/ILinearProgressSeriesTheme"
        },
        "link": {
          "$ref": "#/definitions/ILinkSeriesTheme"
        },
        "map": {
          "$ref": "#/definitions/IMapSeriesTheme"
        },
        "pie": {
          "$ref": "#/definitions/IPieSeriesTheme"
        },
        "pie3d": {
          "$ref": "#/definitions/IPie3dSeriesTheme"
        },
        "radar": {
          "$ref": "#/definitions/IRadarSeriesTheme"
        },
        "rangeArea": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "rangeArea_horizontal": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "rangeArea_vertical": {
          "$ref": "#/definitions/IAreaSeriesTheme"
        },
        "rangeColumn": {
          "$ref": "#/definitions/IRangeColumnSeriesTheme"
        },
        "rangeColumn_horizontal": {
          "$ref": "#/definitions/IRangeColumnSeriesTheme"
        },
        "rangeColumn_vertical": {
          "$ref": "#/definitions/IRangeColumnSeriesTheme"
        },
        "rose": {
          "$ref": "#/definitions/IRoseSeriesTheme"
        },
        "sankey": {
          "$ref": "#/definitions/ISankeySeriesTheme"
        },
        "sankey_horizontal": {
          "$ref": "#/definitions/ISankeySeriesTheme"
        },
        "sankey_vertical": {
          "$ref": "#/definitions/ISankeySeriesTheme"
        },
        "scatter": {
          "$ref": "#/definitions/IScatterSeriesTheme"
        },
        "sunburst": {
          "$ref": "#/definitions/ISunburstSeriesTheme"
        },
        "treemap": {
          "$ref": "#/definitions/ITreemapSeriesTheme"
        },
        "waterfall": {
          "$ref": "#/definitions/IWaterfallSeriesTheme"
        },
        "waterfall_horizontal": {
          "$ref": "#/definitions/IWaterfallSeriesTheme"
        },
        "waterfall_vertical": {
          "$ref": "#/definitions/IWaterfallSeriesTheme"
        },
        "wordCloud": {
          "$ref": "#/definitions/IWordCloudSeriesTheme"
        },
        "wordCloud3d": {
          "$ref": "#/definitions/IWordCloud3dSeriesTheme"
        }
      },
      "type": "object"
    },
    "IShadowRoot": {
      "properties": {
        "AABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "OBBBounds": {
          "$ref": "#/definitions/IOBBBounds"
        },
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "addState": {
          "typeof": "function"
        },
        "addUpdateBoundTag": {
          "typeof": "function"
        },
        "addUpdateGlobalPositionTag": {
          "typeof": "function"
        },
        "addUpdateLayoutTag": {
          "typeof": "function"
        },
        "addUpdatePositionTag": {
          "typeof": "function"
        },
        "addUpdateShapeAndBoundsTag": {
          "typeof": "function"
        },
        "animate": {
          "typeof": "function"
        },
        "animates": {
          "$ref": "#/definitions/Map<string|number,IAnimate>"
        },
        "animationBackUps": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "applyStateAttrs": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "attachShadow": {
          "typeof": "function"
        },
        "attribute": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "backgroundImg": {
          "type": "boolean"
        },
        "bindDom": {
          "$ref": "#/definitions/Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>"
        },
        "childrenCount": {
          "type": "number"
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clearStates": {
          "typeof": "function"
        },
        "clearUpdateShapeTag": {
          "typeof": "function"
        },
        "clone": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "containsPoint": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createOrUpdateChild": {
          "typeof": "function"
        },
        "createPathProxy": {
          "typeof": "function"
        },
        "createTheme": {
          "typeof": "function"
        },
        "delete": {
          "typeof": "function"
        },
        "detachShadow": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "emit": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "findFace": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getComputedAttribute": {
          "typeof": "function"
        },
        "getDefaultAttribute": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getNoWorkAnimateAttr": {
          "typeof": "function"
        },
        "getOffsetXY": {
          "typeof": "function"
        },
        "getState": {
          "typeof": "function"
        },
        "globalAABBBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "globalTransMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "glyphHost": {
          "$ref": "#/definitions/IGraphic<IGlyphGraphicAttribute>"
        },
        "hasState": {
          "typeof": "function"
        },
        "hideAll": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "imageLoadFail": {
          "typeof": "function"
        },
        "imageLoadSuccess": {
          "typeof": "function"
        },
        "in3dMode": {
          "type": "boolean"
        },
        "incremental": {
          "type": "number"
        },
        "incrementalAppendChild": {
          "typeof": "function"
        },
        "incrementalAt": {
          "type": "number"
        },
        "incrementalClearChild": {
          "typeof": "function"
        },
        "initAttributes": {
          "typeof": "function"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "isValid": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layer": {
          "$ref": "#/definitions/ILayer"
        },
        "name": {
          "type": "string"
        },
        "normalAttrs": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "numberType": {
          "type": "number"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "onAddStep": {
          "typeof": "function"
        },
        "onAnimateBind": {
          "typeof": "function"
        },
        "onBeforeAttributeUpdate": {
          "typeof": "function"
        },
        "onSetStage": {
          "typeof": "function"
        },
        "onStep": {
          "typeof": "function"
        },
        "onStop": {
          "typeof": "function"
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "parent": {
          "$ref": "#/definitions/IGroup"
        },
        "pathProxy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeState": {
          "typeof": "function"
        },
        "resources": {
          "$ref": "#/definitions/Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>"
        },
        "rotate": {
          "typeof": "function"
        },
        "rotateTo": {
          "typeof": "function"
        },
        "scale": {
          "typeof": "function"
        },
        "scaleTo": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setAttribute": {
          "typeof": "function"
        },
        "setAttributes": {
          "typeof": "function"
        },
        "setMode": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "setTheme": {
          "typeof": "function"
        },
        "shadowHost": {
          "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
        },
        "shadowRoot": {
          "$ref": "#/definitions/IShadowRoot"
        },
        "shouldSelfChangeUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateAABBBounds": {
          "typeof": "function"
        },
        "shouldUpdateGlobalMatrix": {
          "typeof": "function"
        },
        "shouldUpdateShape": {
          "typeof": "function"
        },
        "showAll": {
          "typeof": "function"
        },
        "skewTo": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "stamp": {
          "type": "number"
        },
        "stateProxy": {
          "typeof": "function"
        },
        "states": {
          "$ref": "#/definitions/Record<string,Partial<IGroupGraphicAttribute>>"
        },
        "stepInterpolate": {
          "typeof": "function"
        },
        "stopAnimates": {
          "typeof": "function"
        },
        "theme": {
          "$ref": "#/definitions/ITheme"
        },
        "toCustomPath": {
          "typeof": "function"
        },
        "toJson": {
          "typeof": "function"
        },
        "toggleState": {
          "typeof": "function"
        },
        "transMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "translate": {
          "typeof": "function"
        },
        "translateTo": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/GraphicType"
        },
        "update": {
          "typeof": "function"
        },
        "updateNormalAttrs": {
          "typeof": "function"
        },
        "useStates": {
          "typeof": "function"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "required": [
        "AABBBounds",
        "OBBBounds",
        "_uid",
        "add",
        "addEventListener",
        "addState",
        "addUpdateBoundTag",
        "addUpdateGlobalPositionTag",
        "addUpdateLayoutTag",
        "addUpdatePositionTag",
        "addUpdateShapeAndBoundsTag",
        "animate",
        "animates",
        "appendChild",
        "applyStateAttrs",
        "at",
        "attachShadow",
        "attribute",
        "childrenCount",
        "clearStates",
        "clearUpdateShapeTag",
        "clone",
        "containNode",
        "containsPoint",
        "count",
        "createOrUpdateChild",
        "createPathProxy",
        "createTheme",
        "delete",
        "detachShadow",
        "dispatchEvent",
        "emit",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getComputedAttribute",
        "getDefaultAttribute",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getNoWorkAnimateAttr",
        "getOffsetXY",
        "getState",
        "globalAABBBounds",
        "globalTransMatrix",
        "hasState",
        "hideAll",
        "imageLoadFail",
        "imageLoadSuccess",
        "incrementalAppendChild",
        "incrementalClearChild",
        "initAttributes",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "isValid",
        "lastChild",
        "off",
        "on",
        "onSetStage",
        "onStep",
        "onStop",
        "once",
        "parent",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeState",
        "rotate",
        "rotateTo",
        "scale",
        "scaleTo",
        "setAllDescendantsProps",
        "setAttribute",
        "setAttributes",
        "setMode",
        "setStage",
        "setTheme",
        "shadowHost",
        "shouldSelfChangeUpdateAABBBounds",
        "shouldUpdateAABBBounds",
        "shouldUpdateGlobalMatrix",
        "shouldUpdateShape",
        "showAll",
        "skewTo",
        "stepInterpolate",
        "stopAnimates",
        "toJson",
        "toggleState",
        "transMatrix",
        "translate",
        "translateTo",
        "update",
        "updateNormalAttrs",
        "useStates",
        "valid"
      ],
      "type": "object"
    },
    "ISizeLegendSpec": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IComponentSpec,\"orient\">"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "ISizeLegendTheme": {
      "properties": {
        "horizontal": {
          "allOf": [
            {
              "$ref": "#/definitions/IContinuousLegendTheme"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "vertical": {
          "allOf": [
            {
              "$ref": "#/definitions/IContinuousLegendTheme"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "IStage": {
      "properties": {
        "_next": {
          "$ref": "#/definitions/INode"
        },
        "_prev": {
          "$ref": "#/definitions/INode"
        },
        "_uid": {
          "type": "number"
        },
        "add": {
          "typeof": "function"
        },
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "afterNextRender": {
          "typeof": "function"
        },
        "appendChild": {
          "typeof": "function"
        },
        "at": {
          "typeof": "function"
        },
        "autoRender": {
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IColor"
        },
        "camera": {
          "$ref": "#/definitions/ICamera"
        },
        "childrenCount": {
          "type": "number"
        },
        "clearViewBox": {
          "typeof": "function"
        },
        "containNode": {
          "typeof": "function"
        },
        "count": {
          "type": "number"
        },
        "createLayer": {
          "typeof": "function"
        },
        "defaultLayer": {
          "$ref": "#/definitions/ILayer"
        },
        "delete": {
          "typeof": "function"
        },
        "dirty": {
          "typeof": "function"
        },
        "dirtyBounds": {
          "$ref": "#/definitions/IBounds"
        },
        "disableAutoRender": {
          "typeof": "function"
        },
        "disableDirtyBounds": {
          "typeof": "function"
        },
        "disableIncrementalAutoRender": {
          "typeof": "function"
        },
        "disableView3dTranform": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "dpr": {
          "type": "number"
        },
        "emit": {
          "typeof": "function"
        },
        "enableAutoRender": {
          "typeof": "function"
        },
        "enableDirtyBounds": {
          "typeof": "function"
        },
        "enableIncrementalAutoRender": {
          "typeof": "function"
        },
        "enableView3dTransform": {
          "typeof": "function"
        },
        "export": {
          "typeof": "function"
        },
        "find": {
          "typeof": "function"
        },
        "findAll": {
          "typeof": "function"
        },
        "findChildById": {
          "typeof": "function"
        },
        "findChildByUid": {
          "typeof": "function"
        },
        "findChildrenByName": {
          "typeof": "function"
        },
        "firstChild": {
          "$ref": "#/definitions/INode"
        },
        "forEachChildren": {
          "typeof": "function"
        },
        "forEachChildrenAsync": {
          "typeof": "function"
        },
        "getChildAt": {
          "typeof": "function"
        },
        "getChildren": {
          "typeof": "function"
        },
        "getElementById": {
          "typeof": "function"
        },
        "getElementsByName": {
          "typeof": "function"
        },
        "getElementsByType": {
          "typeof": "function"
        },
        "getLayer": {
          "typeof": "function"
        },
        "getTimeline": {
          "typeof": "function"
        },
        "height": {
          "type": "number"
        },
        "hooks": {
          "typeof": "function"
        },
        "id": {
          "type": [
            "string",
            "number"
          ]
        },
        "increaseAutoRender": {
          "type": "boolean"
        },
        "insertAfter": {
          "typeof": "function"
        },
        "insertBefore": {
          "typeof": "function"
        },
        "insertInto": {
          "typeof": "function"
        },
        "insertIntoKeepIdx": {
          "typeof": "function"
        },
        "isAncestorsOf": {
          "typeof": "function"
        },
        "isChildOf": {
          "typeof": "function"
        },
        "isDescendantsOf": {
          "typeof": "function"
        },
        "isParentOf": {
          "typeof": "function"
        },
        "lastChild": {
          "$ref": "#/definitions/INode"
        },
        "layerService": {
          "$ref": "#/definitions/ILayerService"
        },
        "light": {
          "$ref": "#/definitions/IDirectionLight"
        },
        "name": {
          "type": "string"
        },
        "off": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "on": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "once": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "option3d": {
          "$ref": "#/definitions/IOption3D"
        },
        "params": {
          "$ref": "#/definitions/Partial<IStageParams>"
        },
        "parent": {
          "$ref": "#/definitions/IStage"
        },
        "pick": {
          "typeof": "function"
        },
        "pickerService": {
          "$ref": "#/definitions/IPickerService"
        },
        "pluginService": {
          "$ref": "#/definitions/IPluginService"
        },
        "release": {
          "typeof": "function"
        },
        "removeAllChild": {
          "typeof": "function"
        },
        "removeAllListeners": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeChild": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "removeLayer": {
          "typeof": "function"
        },
        "render": {
          "typeof": "function"
        },
        "renderCount": {
          "type": "number"
        },
        "renderNextFrame": {
          "typeof": "function"
        },
        "renderService": {
          "$ref": "#/definitions/IRenderService"
        },
        "renderTo": {
          "typeof": "function"
        },
        "renderToNewWindow": {
          "typeof": "function"
        },
        "resize": {
          "typeof": "function"
        },
        "resizeView": {
          "typeof": "function"
        },
        "resizeWindow": {
          "typeof": "function"
        },
        "set3dOptions": {
          "typeof": "function"
        },
        "setAfterRender": {
          "typeof": "function"
        },
        "setAllDescendantsProps": {
          "typeof": "function"
        },
        "setBeforeRender": {
          "typeof": "function"
        },
        "setCursor": {
          "typeof": "function"
        },
        "setDpr": {
          "typeof": "function"
        },
        "setOrigin": {
          "typeof": "function"
        },
        "setStage": {
          "typeof": "function"
        },
        "setToFrame": {
          "typeof": "function"
        },
        "setViewBox": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "sortLayer": {
          "typeof": "function"
        },
        "stage": {
          "$ref": "#/definitions/IStage"
        },
        "startAnimate": {
          "typeof": "function"
        },
        "ticker": {
          "$ref": "#/definitions/ITicker"
        },
        "toCanvas": {
          "typeof": "function"
        },
        "tryInitInteractiveLayer": {
          "typeof": "function"
        },
        "type": {
          "type": "string"
        },
        "viewBox": {
          "$ref": "#/definitions/IBoundsLike"
        },
        "viewHeight": {
          "type": "number"
        },
        "viewWidth": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "window": {
          "$ref": "#/definitions/IWindow"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "_uid",
        "add",
        "addEventListener",
        "afterNextRender",
        "appendChild",
        "at",
        "autoRender",
        "background",
        "childrenCount",
        "clearViewBox",
        "containNode",
        "count",
        "createLayer",
        "defaultLayer",
        "delete",
        "dirty",
        "dirtyBounds",
        "disableAutoRender",
        "disableDirtyBounds",
        "disableIncrementalAutoRender",
        "disableView3dTranform",
        "dispatchEvent",
        "dpr",
        "emit",
        "enableAutoRender",
        "enableDirtyBounds",
        "enableIncrementalAutoRender",
        "enableView3dTransform",
        "export",
        "find",
        "findAll",
        "findChildById",
        "findChildByUid",
        "findChildrenByName",
        "firstChild",
        "forEachChildren",
        "forEachChildrenAsync",
        "getChildAt",
        "getChildren",
        "getElementById",
        "getElementsByName",
        "getElementsByType",
        "getLayer",
        "getTimeline",
        "height",
        "hooks",
        "increaseAutoRender",
        "insertAfter",
        "insertBefore",
        "insertInto",
        "insertIntoKeepIdx",
        "isAncestorsOf",
        "isChildOf",
        "isDescendantsOf",
        "isParentOf",
        "lastChild",
        "layerService",
        "off",
        "on",
        "once",
        "params",
        "parent",
        "pick",
        "pickerService",
        "pluginService",
        "release",
        "removeAllChild",
        "removeAllListeners",
        "removeChild",
        "removeEventListener",
        "removeLayer",
        "render",
        "renderCount",
        "renderNextFrame",
        "renderService",
        "renderTo",
        "renderToNewWindow",
        "resize",
        "resizeView",
        "resizeWindow",
        "set3dOptions",
        "setAfterRender",
        "setAllDescendantsProps",
        "setBeforeRender",
        "setCursor",
        "setDpr",
        "setOrigin",
        "setStage",
        "setToFrame",
        "setViewBox",
        "sortLayer",
        "startAnimate",
        "ticker",
        "toCanvas",
        "tryInitInteractiveLayer",
        "viewBox",
        "viewHeight",
        "viewWidth",
        "width",
        "window",
        "x",
        "y"
      ],
      "type": "object"
    },
    "IStrokeType": {
      "anyOf": [
        {
          "$ref": "#/definitions/ILinearGradient"
        },
        {
          "$ref": "#/definitions/IRadialGradient"
        },
        {
          "$ref": "#/definitions/IConicalGradient"
        },
        {
          "type": [
            "string",
            "boolean"
          ]
        }
      ]
    },
    "ISubTick": {
      "properties": {
        "inside": {
          "default": false,
          "description": "子刻度线朝向，默认朝外(坐标线包围盒外部)",
          "type": "boolean"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "tickCount": {
          "description": "TODO: 考虑下 log 轴，自刻度线之间的间距是不均匀的问题\n子刻度个数",
          "type": "number"
        },
        "tickSize": {
          "description": "子刻度线的长度",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ISunburstChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "centerX": {
          "default": "正中心",
          "description": "旭日图中心点, x坐标.",
          "type": "number"
        },
        "centerY": {
          "default": "正中心",
          "description": "旭日图中心点, y坐标.",
          "type": "number"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "endAngle": {
          "default": "startAngle + 360",
          "description": "终止角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "gap": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "对所有层生效"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "最内层"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "对所有层生效"
        },
        "labelAutoVisible": {
          "typeof": "function"
        },
        "labelLayout": {
          "anyOf": [
            {
              "$ref": "#/definitions/SunburstLabelConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/SunburstLabelConfig"
              },
              "type": "array"
            }
          ],
          "description": "label布局相关参数"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "offsetX": {
          "default": 0,
          "description": "旭日图中心点, x坐标偏移量.",
          "type": "number"
        },
        "offsetY": {
          "default": 0,
          "description": "旭日图中心点, y坐标偏移量.",
          "type": "number"
        },
        "outerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 1,
          "description": "最外层"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/ISunburstSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "startAngle": {
          "default": -90,
          "description": "起始角度",
          "type": "number"
        },
        "sunburst": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "图元配置"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "sunburst",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ISunburstSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "centerX": {
          "default": "正中心",
          "description": "旭日图中心点, x坐标.",
          "type": "number"
        },
        "centerY": {
          "default": "正中心",
          "description": "旭日图中心点, y坐标.",
          "type": "number"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "endAngle": {
          "default": "startAngle + 360",
          "description": "终止角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "gap": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "对所有层生效"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "最内层"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "对所有层生效"
        },
        "labelAutoVisible": {
          "typeof": "function"
        },
        "labelLayout": {
          "anyOf": [
            {
              "$ref": "#/definitions/SunburstLabelConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/SunburstLabelConfig"
              },
              "type": "array"
            }
          ],
          "description": "label布局相关参数"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "offsetX": {
          "default": 0,
          "description": "旭日图中心点, x坐标偏移量.",
          "type": "number"
        },
        "offsetY": {
          "default": 0,
          "description": "旭日图中心点, y坐标偏移量.",
          "type": "number"
        },
        "outerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 1,
          "description": "最外层"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "default": -90,
          "description": "起始角度",
          "type": "number"
        },
        "sunburst": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "图元配置"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "sunburst",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ISunburstSeriesTheme": {
      "properties": {
        "endAngle": {
          "type": "number"
        },
        "gap": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "innerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "label": {
          "typeof": "function"
        },
        "labelLayout": {
          "anyOf": [
            {
              "$ref": "#/definitions/SunburstLabelConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/SunburstLabelConfig"
              },
              "type": "array"
            }
          ]
        },
        "outerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "radius": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "sunburst": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "ISymbolMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "shape": {
          "description": "对外声明使用shape，vrender图形属性对应的是shape",
          "type": "string"
        },
        "size": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "symbolType": {
          "description": "FIXME:  vrender Symbol接收的图形属性，暂时都申明一下",
          "type": "string"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITextMarkSpec": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "direction": {
          "default": "'horizontal'",
          "description": "文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "dx": {
          "description": "x 方向偏移",
          "type": "number"
        },
        "dy": {
          "description": "y 方向偏移",
          "type": "number"
        },
        "ellipsis": {
          "description": "文字超出 maxLineWidth 后的省略符",
          "type": "string"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字号",
          "type": "number"
        },
        "fontStyle": {
          "description": "字体样式",
          "type": "string"
        },
        "fontWeight": {
          "$ref": "#/definitions/FontWeight",
          "description": "字重"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineBreak": {
          "type": "string"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineHeight": {
          "description": "行高（1.3.1 版本新增字符串类型表示比例值，如\"150%\"）",
          "since": "1.3.1",
          "type": [
            "string",
            "number"
          ]
        },
        "lineThrough": {
          "description": "中划线",
          "type": "boolean"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxLineWidth": {
          "description": "文字的最大长度",
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "poptip": {
          "$ref": "#/definitions/PopTipAttributes",
          "description": "poptip 相关配置"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "text": {
          "anyOf": [
            {
              "$ref": "#/definitions/Function"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IRichTextCharacter"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "文字内容"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "文字对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "文字居中方式"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "type": {
          "default": "'text'",
          "description": "文字类型\n可选，'html', 'rich', 'text'",
          "enum": [
            "html",
            "rich",
            "text"
          ],
          "type": "string"
        },
        "underline": {
          "description": "下划线",
          "type": "boolean"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITheme": {
      "properties": {
        "applyTheme": {
          "typeof": "function"
        },
        "combinedTheme": {
          "$ref": "#/definitions/IFullThemeSpec"
        },
        "dirty": {
          "type": "boolean"
        },
        "getTheme": {
          "typeof": "function"
        },
        "nextTheme": {
          "$ref": "#/definitions/IThemeSpec"
        },
        "setTheme": {
          "typeof": "function"
        },
        "userTheme": {
          "$ref": "#/definitions/IThemeSpec"
        }
      },
      "required": [
        "applyTheme",
        "dirty",
        "getTheme",
        "setTheme"
      ],
      "type": "object"
    },
    "IThemeColorScheme": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Partial<Record<SeriesTypeEnum,ColorScheme>>"
        },
        {
          "$ref": "#/definitions/Partial<Record<SeriesTypeForThemeEnum,ColorScheme>>"
        }
      ]
    },
    "IThemeSpec": {
      "properties": {
        "arc": {
          "$ref": "#/definitions/Partial<IArcGraphicAttribute>"
        },
        "area": {
          "$ref": "#/definitions/Partial<IAreaGraphicAttribute>"
        },
        "circle": {
          "$ref": "#/definitions/Partial<ICircleGraphicAttribute>"
        },
        "common": {
          "$ref": "#/definitions/Partial<IGraphicAttribute>"
        },
        "group": {
          "$ref": "#/definitions/Partial<IGroupGraphicAttribute>"
        },
        "image": {
          "$ref": "#/definitions/Partial<IImageGraphicAttribute>"
        },
        "line": {
          "$ref": "#/definitions/Partial<ILineGraphicAttribute>"
        },
        "path": {
          "$ref": "#/definitions/Partial<IPathGraphicAttribute>"
        },
        "polygon": {
          "$ref": "#/definitions/Partial<IPolygonGraphicAttribute>"
        },
        "rect": {
          "$ref": "#/definitions/Partial<IRectGraphicAttribute>"
        },
        "rect3d": {
          "$ref": "#/definitions/Partial<IRect3dGraphicAttribute>"
        },
        "symbol": {
          "$ref": "#/definitions/Partial<ISymbolGraphicAttribute>"
        },
        "text": {
          "$ref": "#/definitions/Partial<ITextGraphicAttribute>"
        }
      },
      "type": "object"
    },
    "ITick": {
      "properties": {
        "alignWithLabel": {
          "default": true,
          "description": "tick 是否与 label 对齐，默认为 true，即对齐，配置为 false 则显示在前后两个刻度中间",
          "type": "boolean"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "forceTickCount": {
          "default": 5,
          "description": "强制设置的tick数量，可能由于数据范围导致tick值为小数",
          "type": "number"
        },
        "inside": {
          "default": false,
          "description": "刻度线朝向，默认朝外(坐标线包围盒外部)",
          "type": "boolean"
        },
        "noDecimals": {
          "default": false,
          "description": "当配置了 tickStep 或 forceTickCount 时不生效。",
          "since": "1.3.0",
          "type": "boolean"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRuleMarkSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "刻度线样式设置，支持回调"
        },
        "tickCount": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ],
          "default": 5,
          "description": "建议的tick数量，并不保证结果一定是配置值",
          "since": "1.4.0 后支持函数回调。"
        },
        "tickMode": {
          "default": "'average'",
          "description": "连续轴 tick 生成算法：\n'average': 尽可能均分；\n'd3'：与 d3 默认逻辑一致，以 [1, 2, 5] 为基数生成；",
          "enum": [
            "average",
            "d3"
          ],
          "since": "1.3.0",
          "type": "string"
        },
        "tickSize": {
          "default": 4,
          "description": "Length of tick lines\n坐标轴刻度线的长度",
          "type": "number"
        },
        "tickStep": {
          "description": "tick步长",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ITickMaskSpec": {
      "properties": {
        "angle": {
          "description": "单个 tick 的默认宽度，角度值",
          "type": "number"
        },
        "forceAlign": {
          "description": "tick mask 下的图元是否强制和 tick 的边线对齐",
          "type": "boolean"
        },
        "offsetAngle": {
          "description": "单个 tick 的偏移角度，角度值",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITicker": {
      "properties": {
        "addTimeline": {
          "typeof": "function"
        },
        "getFPS": {
          "typeof": "function"
        },
        "getInterval": {
          "typeof": "function"
        },
        "pause": {
          "typeof": "function"
        },
        "resume": {
          "typeof": "function"
        },
        "setFPS": {
          "typeof": "function"
        },
        "setInterval": {
          "typeof": "function"
        },
        "start": {
          "typeof": "function"
        },
        "stop": {
          "typeof": "function"
        },
        "tick": {
          "typeof": "function"
        },
        "tickAt": {
          "typeof": "function"
        }
      },
      "required": [
        "addTimeline",
        "pause",
        "resume",
        "start",
        "stop",
        "tick"
      ],
      "type": "object"
    },
    "ITitle": {
      "properties": {
        "angle": {
          "description": "标题整体的旋转角度（如果标题配置了 background、shape 等属性的话，需要使用该属性进行整体的配置旋转）。",
          "type": "number"
        },
        "background": {
          "allOf": [
            {
              "$ref": "#/definitions/IAxisItem<IRectMarkSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标题背景色设置"
        },
        "padding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IPadding"
            },
            {
              "type": "number"
            }
          ],
          "description": "标题内边距配置"
        },
        "position": {
          "description": "标题的显示位置，直角坐标系默认 'middle'；\n极坐标系的圆弧轴如果配置了内半径，则默认 'middle'，否则 'end'",
          "enum": [
            "end",
            "middle",
            "start"
          ],
          "type": "string"
        },
        "shape": {
          "allOf": [
            {
              "$ref": "#/definitions/IAxisItem<ISymbolMarkSpec>"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "TODO: 接入富文本\n标题 shape 配置"
        },
        "space": {
          "description": "标题距离坐标轴(轴线、刻度、标签共同构成的包围盒)的距离",
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IRichTextCharacter"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "文本内容\n支持富文本内容, 如textConfig, html"
        },
        "type": {
          "description": "文本类型：text, rich, html",
          "enum": [
            "html",
            "rich",
            "text"
          ],
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ITitleSpec": {
      "properties": {
        "align": {
          "description": "文字水平对齐方式\n'left' | 'center' | 'right'",
          "type": "string"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "description": "标题高度",
          "type": "number"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "innerPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/IPadding"
            },
            {
              "type": "number"
            }
          ],
          "description": "标题的边距留白"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "description": "最大高度，像素值",
          "type": "number"
        },
        "maxWidth": {
          "description": "最大宽度，像素值。当文字超过最大宽度时，会自动省略。",
          "type": "number"
        },
        "minHeight": {
          "description": "最小高度，像素值",
          "type": "number"
        },
        "minWidth": {
          "description": "最小宽度，像素值",
          "type": "number"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'top'",
          "description": "Title位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "subtext": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IRichTextCharacter"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "副标题文本内容\n- 支持富文本配置"
        },
        "subtextStyle": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<ITextGraphicAttribute>"
            }
          ],
          "description": "副标题样式"
        },
        "subtextType": {
          "description": "副标题文本类型（默认类型为text）\ntext, rich, html",
          "type": "string"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IRichTextCharacter"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "主标题文本内容\n- 支持富文本配置"
        },
        "textStyle": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<ITextGraphicAttribute>"
            }
          ],
          "description": "主标题样式"
        },
        "textType": {
          "description": "主标题文本类型（默认类型为text）\ntext, rich, html",
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "verticalAlign": {
          "description": "文字垂直对齐方式\n'top' | 'middle' | 'bottom'",
          "type": "string"
        },
        "visible": {
          "description": "是否显示标题",
          "type": "boolean"
        },
        "width": {
          "description": "标题宽度",
          "type": "number"
        },
        "x": {
          "description": "标题左上角x坐标像素值",
          "type": "number"
        },
        "y": {
          "description": "标题左上角y坐标像素值",
          "type": "number"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITitleTextTheme": {
      "properties": {
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ],
          "description": "字体颜色"
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字体大小",
          "type": "number"
        },
        "fontWeight": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "字重"
        },
        "height": {
          "description": "主（副）标题高度",
          "type": "number"
        },
        "lineHeight": {
          "description": "行高",
          "type": "number"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "字体基线"
        },
        "width": {
          "description": "主（副）标题宽度",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITitleTheme": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "subtextStyle": {
          "$ref": "#/definitions/ITitleTextTheme",
          "description": "副标题样式"
        },
        "textStyle": {
          "$ref": "#/definitions/ITitleTextTheme",
          "description": "主标题样式"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ITitle_1": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<LegendTitle,\"style\"|\"background\"|\"textStyle\">"
        }
      ]
    },
    "IToolTipLinePattern": {
      "properties": {
        "hasShape": {
          "type": "boolean"
        },
        "isKeyAdaptive": {
          "$ref": "#/definitions/TooltipContentProperty<boolean>",
          "description": "key 列是否适应内容"
        },
        "key": {
          "$ref": "#/definitions/TooltipContentProperty<string>",
          "description": "tooltip key 值内容"
        },
        "keyStyle": {
          "$ref": "#/definitions/TooltipContentProperty<ITooltipTextTheme<string>>",
          "description": "key 样式（只在 content 上需要配置）"
        },
        "seriesId": {
          "description": "该 pattern 属于哪个系列id（用户不需要设置）",
          "type": "number"
        },
        "shapeColor": {
          "$ref": "#/definitions/TooltipContentProperty<string>"
        },
        "shapeFill": {
          "$ref": "#/definitions/TooltipContentProperty<string>",
          "description": "形状填充颜色",
          "since": "1.4.0"
        },
        "shapeHollow": {
          "type": "boolean"
        },
        "shapeLineWidth": {
          "$ref": "#/definitions/TooltipContentProperty<number>",
          "description": "形状描边宽度",
          "since": "1.4.0"
        },
        "shapeSize": {
          "$ref": "#/definitions/TooltipContentProperty<number>"
        },
        "shapeStroke": {
          "$ref": "#/definitions/TooltipContentProperty<string>",
          "description": "形状描边颜色",
          "since": "1.4.0"
        },
        "shapeType": {
          "$ref": "#/definitions/TooltipContentProperty<string>"
        },
        "spaceRow": {
          "$ref": "#/definitions/TooltipContentProperty<number>",
          "description": "该行行间距",
          "since": "1.4.0"
        },
        "value": {
          "$ref": "#/definitions/TooltipContentProperty<string|TooltipRichTextAttrs>",
          "description": "tooltip value 值内容\n支持富文本配置\n - type 文本类型：text, rich, html\n - text 文本内容：string | string[] | number | number[] | IRichTextCharacter[];"
        },
        "valueStyle": {
          "$ref": "#/definitions/TooltipContentProperty<ITooltipTextTheme<string>>",
          "description": "value 样式"
        },
        "visible": {
          "$ref": "#/definitions/TooltipContentProperty<boolean>",
          "description": "该行是否可见"
        }
      },
      "type": "object"
    },
    "ITooltipPattern": {
      "properties": {
        "activeType": {
          "$ref": "#/definitions/TooltipActiveType",
          "description": "方便内部逻辑辨别 tooltip 类型，不暴露给用户"
        },
        "content": {
          "$ref": "#/definitions/MaybeArray<TooltipPatternProperty<MaybeArray<IToolTipLinePattern>>>"
        },
        "hasShape": {
          "type": "boolean"
        },
        "maxLineCount": {
          "description": "tooltip content 保留的最大数据行数，默认为 20",
          "type": "number"
        },
        "position": {
          "$ref": "#/definitions/TooltipPatternProperty<TooltipPosition>"
        },
        "positionMode": {
          "$ref": "#/definitions/TooltipPatternProperty<TooltipPositionMode>",
          "description": "决定 `position` 相对固定于什么图形，如固定在鼠标指针周围或图元周围。该配置只有 `position` 设为字符串时生效。默认为 `'mark'`",
          "since": "1.4.0"
        },
        "seriesId": {
          "description": "该 pattern 属于哪个系列id（用户不需要设置）",
          "type": "number"
        },
        "shapeColor": {
          "$ref": "#/definitions/TooltipContentProperty<string>"
        },
        "shapeFill": {
          "$ref": "#/definitions/TooltipContentProperty<string>",
          "description": "形状填充颜色",
          "since": "1.4.0"
        },
        "shapeHollow": {
          "type": "boolean"
        },
        "shapeLineWidth": {
          "$ref": "#/definitions/TooltipContentProperty<number>",
          "description": "形状描边宽度",
          "since": "1.4.0"
        },
        "shapeSize": {
          "$ref": "#/definitions/TooltipContentProperty<number>"
        },
        "shapeStroke": {
          "$ref": "#/definitions/TooltipContentProperty<string>",
          "description": "形状描边颜色",
          "since": "1.4.0"
        },
        "shapeType": {
          "$ref": "#/definitions/TooltipContentProperty<string>"
        },
        "title": {
          "$ref": "#/definitions/TooltipPatternProperty<IToolTipLinePattern>"
        },
        "updateContent": {
          "typeof": "function"
        },
        "updatePosition": {
          "typeof": "function"
        },
        "updateTitle": {
          "typeof": "function"
        },
        "visible": {
          "$ref": "#/definitions/TooltipPatternProperty<boolean>"
        }
      },
      "type": "object"
    },
    "ITooltipPositionPattern": {
      "properties": {
        "bottom": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ]
        },
        "left": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ]
        },
        "right": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ]
        },
        "top": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "number"
            }
          ]
        }
      },
      "type": "object"
    },
    "ITooltipSpec": {
      "properties": {
        "activeType": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/TooltipActiveType"
              },
              "type": "array"
            },
            {
              "enum": [
                "dimension",
                "mark"
              ],
              "type": "string"
            }
          ],
          "description": "受支持的激活类型\n（*支持在series上设置）\n（*会影响自定义handler）"
        },
        "className": {
          "description": "tooltip dom元素的 className，仅当 renderMode: 'html' 时生效",
          "type": "string"
        },
        "confine": {
          "description": "是否将 tooltip 框限制在画布区域内，renderMode 为 canvas 时，默认开启。",
          "type": "boolean"
        },
        "dimension": {
          "$ref": "#/definitions/ITooltipPattern"
        },
        "enterable": {
          "description": "鼠标是否可进入提示框浮层中，默认为false，如需详情内交互，如添加链接，按钮，可设置为 true。\n该属性目前只对 renderMode 为 html 时生效\nTODO: 支持 renderMode: canvas",
          "type": "boolean"
        },
        "handler": {
          "$ref": "#/definitions/Partial<ITooltipHandlerSpec>",
          "description": "自定义handler方法"
        },
        "mark": {
          "$ref": "#/definitions/ITooltipPattern"
        },
        "offset": {
          "typeof": "function"
        },
        "parentElement": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLElement"
            },
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "type": "string"
            }
          ],
          "description": "tooltip dom 元素的挂载点，可传 id 或 dom 对象"
        },
        "renderMode": {
          "description": "tooltip 渲染方式，默认为 html",
          "enum": [
            "canvas",
            "html"
          ],
          "type": "string"
        },
        "style": {
          "$ref": "#/definitions/Omit<ITooltipTheme<string>,\"offset\">",
          "description": "tooltip样式"
        },
        "throttleInterval": {
          "description": "更新 tooltip 的防抖动时间间隔，单位是 ms",
          "type": "number"
        },
        "transitionDuration": {
          "description": "浮层移动动画过渡时间，单位是 ms，设置为 0 的时候会紧跟着鼠标移动（目前仅影响 dom tooltip）",
          "type": "number"
        },
        "trigger": {
          "description": "tooltip触发方式\n（*会影响自定义handler）",
          "enum": [
            "click",
            "hover",
            "none"
          ],
          "type": "string"
        },
        "triggerOff": {
          "description": "隐藏tooltip的触发方式（目前仅支持和trigger一致的设置以及none）\n（*会影响自定义handler）",
          "enum": [
            "click",
            "hover",
            "none"
          ],
          "type": "string"
        },
        "updateElement": {
          "typeof": "function"
        },
        "visible": {
          "description": "是否显示\n（*支持在series上设置）\n（*会影响自定义handler）",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ITooltipTextTheme<string>": {
      "properties": {
        "autoWidth": {
          "description": "是否开启自动宽度。效果分为以下几种情况：\n- tooltip 标题：`autoWidth` 默认为 `false`。如果配置为 `true`，则 tooltip 标题会保持和 tooltip 内容一致的宽度\n- tooltip key 标签：`autoWidth` 不适用\n- tooltip value 标签：`autoWidth` 默认为 `true`。如果配置为 `true`，则 tooltip value 标签会自动占满 tooltip 整体宽度的剩余部分",
          "since": "1.4.2",
          "type": "boolean"
        },
        "fill": {
          "description": "字体颜色",
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字体大小",
          "type": "number"
        },
        "fontWeight": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "字重"
        },
        "lineHeight": {
          "description": "行高",
          "type": [
            "string",
            "number"
          ]
        },
        "maxWidth": {
          "description": "最大宽度",
          "type": "number"
        },
        "multiLine": {
          "description": "是否支持换行",
          "type": "boolean"
        },
        "spacing": {
          "description": "与相邻元素的水平间距",
          "type": "number"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "字体基线"
        },
        "wordBreak": {
          "$ref": "#/definitions/RichTextWordBreak",
          "description": "换行模式，默认为'break-word'"
        }
      },
      "type": "object"
    },
    "ITooltipTextTheme<string|IColorKey>": {
      "properties": {
        "autoWidth": {
          "description": "是否开启自动宽度。效果分为以下几种情况：\n- tooltip 标题：`autoWidth` 默认为 `false`。如果配置为 `true`，则 tooltip 标题会保持和 tooltip 内容一致的宽度\n- tooltip key 标签：`autoWidth` 不适用\n- tooltip value 标签：`autoWidth` 默认为 `true`。如果配置为 `true`，则 tooltip value 标签会自动占满 tooltip 整体宽度的剩余部分",
          "since": "1.4.2",
          "type": "boolean"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ],
          "description": "字体颜色"
        },
        "fontColor": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ]
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字体大小",
          "type": "number"
        },
        "fontWeight": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "字重"
        },
        "lineHeight": {
          "description": "行高",
          "type": [
            "string",
            "number"
          ]
        },
        "maxWidth": {
          "description": "最大宽度",
          "type": "number"
        },
        "multiLine": {
          "description": "是否支持换行",
          "type": "boolean"
        },
        "spacing": {
          "description": "与相邻元素的水平间距",
          "type": "number"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "字体基线"
        },
        "wordBreak": {
          "$ref": "#/definitions/RichTextWordBreak",
          "description": "换行模式，默认为'break-word'"
        }
      },
      "type": "object"
    },
    "ITooltipTheme<string|IColorKey>": {
      "properties": {
        "keyLabel": {
          "$ref": "#/definitions/Omit<ITooltipTextTheme<string|IColorKey>,\"autoWidth\">",
          "description": "tooltip内容，key字段"
        },
        "offset": {
          "typeof": "function"
        },
        "panel": {
          "typeof": "function"
        },
        "shape": {
          "typeof": "function"
        },
        "spaceRow": {
          "description": "内容项行间距",
          "type": "number"
        },
        "titleLabel": {
          "$ref": "#/definitions/ITooltipTextTheme<string|IColorKey>",
          "description": "tooltip标题"
        },
        "valueLabel": {
          "$ref": "#/definitions/ITooltipTextTheme<string|IColorKey>",
          "description": "tooltip内容，value字段"
        }
      },
      "type": "object"
    },
    "ITotalLabelSpec": {
      "properties": {
        "formatMethod": {
          "typeof": "function"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "标签样式配置"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ITotalLabelTheme": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ITransformOptions": {
      "properties": {
        "level": {
          "type": "number"
        },
        "options": {},
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ITreemapChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "aspectRatio": {
          "default": "(1 + Math.sqrt(5)) / 2",
          "description": "矩形分割比例",
          "type": "number"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "categoryField": {
          "description": "文本字段",
          "type": "string"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IHierarchyData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "gapWidth": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 1,
          "description": "节点间距"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "叶子节点标签样式配置，默认不显示"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "leaf": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "叶子节点样式配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maxDepth": {
          "description": "当节点在层次数据中的深度大于 maxDepth 时，节点将不会被显示",
          "type": "number"
        },
        "minChildrenVisibleArea": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "当区域面积（px * px）小于设定值后，节点的子节点将被隐藏"
        },
        "minChildrenVisibleSize": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "当区域宽或高（px）小于设定值后，节点的子节点将被隐藏"
        },
        "minVisibleArea": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 10,
          "description": "当区域面积（px * px）小于设定值后，节点将被隐藏"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nodePadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": [
            5
          ],
          "description": "节点内边距"
        },
        "nonLeaf": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "非叶子节点样式配置"
        },
        "nonLeafLabel": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "非叶子节点标签样式配置，默认不显示"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roam": {
          "default": false,
          "description": "是否开启拖拽和缩放",
          "type": "boolean"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "items": {
            "$ref": "#/definitions/ITreemapSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "splitType": {
          "default": "'binary'",
          "description": "'binary':    递归地将指定的节点分割成一个近似平衡的二叉树，对宽的矩形选择水平分割，对高的矩形选择垂直分割。\n\n'dice':      根据指定节点的每个子节点的值水平划分由x0, y0, x1, y1指定的矩形区域。子节点按顺序定位，从给定矩形\n             的左边缘（x0）开始。如果子节点的值之和小于指定节点的值（即，如果指定节点有一个非零的内部值），剩余的空位将被\n             定位在给定矩形的右边缘（x1）。\n\n'slice':     和'dice'类似，方向为竖直方向分割。\n\n'sliceDice': 节点奇数深度，用'slice'；节点偶数深度，用'dice'。\n\n'squarify':  尽可能按照一个特定长宽比的分割矩形。",
          "enum": [
            "binary",
            "dice",
            "slice",
            "sliceDice",
            "squarify"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "treemap",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "required": [
        "categoryField",
        "data",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ITreemapSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "aspectRatio": {
          "default": "(1 + Math.sqrt(5)) / 2",
          "description": "矩形分割比例",
          "type": "number"
        },
        "categoryField": {
          "description": "文本字段",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IHierarchyData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "drill": {
          "default": false,
          "description": "下钻功能开关",
          "type": "boolean"
        },
        "drillField": {
          "default": "DEFAULT_DATA_KEY",
          "description": "通过API进行钻取, 需要此配置项.",
          "type": "string"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "gapWidth": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 1,
          "description": "节点间距"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IMarkSpec<ITextMarkSpec>",
          "description": "叶子节点标签样式配置，默认不显示"
        },
        "leaf": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "叶子节点样式配置"
        },
        "maxDepth": {
          "description": "当节点在层次数据中的深度大于 maxDepth 时，节点将不会被显示",
          "type": "number"
        },
        "minChildrenVisibleArea": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "当区域面积（px * px）小于设定值后，节点的子节点将被隐藏"
        },
        "minChildrenVisibleSize": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "当区域宽或高（px）小于设定值后，节点的子节点将被隐藏"
        },
        "minVisibleArea": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 10,
          "description": "当区域面积（px * px）小于设定值后，节点将被隐藏"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nodePadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": [
            5
          ],
          "description": "节点内边距"
        },
        "nonLeaf": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "非叶子节点样式配置"
        },
        "nonLeafLabel": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "非叶子节点标签样式配置，默认不显示"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roam": {
          "default": false,
          "description": "是否开启拖拽和缩放",
          "type": "boolean"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "splitType": {
          "default": "'binary'",
          "description": "'binary':    递归地将指定的节点分割成一个近似平衡的二叉树，对宽的矩形选择水平分割，对高的矩形选择垂直分割。\n\n'dice':      根据指定节点的每个子节点的值水平划分由x0, y0, x1, y1指定的矩形区域。子节点按顺序定位，从给定矩形\n             的左边缘（x0）开始。如果子节点的值之和小于指定节点的值（即，如果指定节点有一个非零的内部值），剩余的空位将被\n             定位在给定矩形的右边缘（x1）。\n\n'slice':     和'dice'类似，方向为竖直方向分割。\n\n'sliceDice': 节点奇数深度，用'slice'；节点偶数深度，用'dice'。\n\n'squarify':  尽可能按照一个特定长宽比的分割矩形。",
          "enum": [
            "binary",
            "dice",
            "slice",
            "sliceDice",
            "squarify"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "treemap",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "data",
        "type",
        "valueField"
      ],
      "type": "object"
    },
    "ITreemapSeriesTheme": {
      "properties": {
        "gapWidth": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "label": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>>"
        },
        "leaf": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "nodePadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "nonLeaf": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "nonLeafLabel": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>&{padding?:number|number[];}>"
        }
      },
      "type": "object"
    },
    "IVisualScale": {
      "properties": {
        "changeDomain": {
          "default": "'none'",
          "description": "当用户指定 field 后，用该属性来控制值域。",
          "enum": [
            "expand",
            "none",
            "replace"
          ],
          "type": "string"
        },
        "field": {
          "description": "指定参与映射的数据字段",
          "type": "string"
        },
        "scale": {
          "description": "对应 IVisualSpecScale 的用户配置 scale-id",
          "type": "string"
        }
      },
      "required": [
        "scale"
      ],
      "type": "object"
    },
    "IVisualSpecBase<unknown,number>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecBase<unknown,string>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecScale<unknown,unknown>": {
      "properties": {
        "domain": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "items": {
                "typeof": "function"
              },
              "type": "array"
            }
          ]
        },
        "id": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {},
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "id",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"accurate\"|\"imprecise\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "accurate",
              "imprecise"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"center\"|\"end\"|\"start\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "center",
              "end",
              "start"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"custom\"|\"accurate\"|\"imprecise\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "accurate",
              "custom",
              "imprecise"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"horizontal\"|\"vertical\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "horizontal",
              "vertical"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"line\"|\"polyline\"|\"smooth\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "line",
              "polyline",
              "smooth"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"radial\"|\"horizontal\"|\"vertical\"|\"LR\"|\"RL\"|\"TB\"|\"BL\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "BL",
              "LR",
              "RL",
              "TB",
              "horizontal",
              "radial",
              "vertical"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,\"text\"|\"html\"|\"rich\">": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "enum": [
              "html",
              "rich",
              "text"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,(datum:Datum)=>number>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,(datum:Datum)=>number>_1": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,(datum:Datum)=>number>_2": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,(datum:Datum)=>number>_3": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,(datum:Datum)=>number>_4": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "typeof": "function"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,BoxPlotShaftShape>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/BoxPlotShaftShape"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,Cursor>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/Cursor_1"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,FontWeight>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/FontWeight"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,Function|string[]|StringOrNumber|IRichTextCharacter[]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Function"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/definitions/IRichTextCharacter"
                },
                "type": "array"
              },
              {
                "type": [
                  "string",
                  "number"
                ]
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,IBorder>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/IBorder"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,IPoint[]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "items": {
              "$ref": "#/definitions/IPoint_1"
            },
            "type": "array"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,IRepeatType>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/IRepeatType"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,InterpolateType>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/InterpolateType"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,LineStrokeCap>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/LineStrokeCap"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,LineStrokeJoin>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/LineStrokeJoin"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,PopTipAttributes>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/PopTipAttributes"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,TextAlignType>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/TextAlignType"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,TextBaselineType>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "$ref": "#/definitions/TextBaselineType"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,[number,number]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ],
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,[string|number,string|number]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "items": [
              {
                "type": [
                  "string",
                  "number"
                ]
              },
              {
                "type": [
                  "string",
                  "number"
                ]
              }
            ],
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,boolean>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "boolean"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,boolean|[boolean,boolean]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "boolean"
                  }
                ],
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,false|IColorKey|IGradient|VisualType<string>>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IColorKey"
              },
              {
                "$ref": "#/definitions/IGradientLinear"
              },
              {
                "$ref": "#/definitions/IGradientRadial"
              },
              {
                "$ref": "#/definitions/IGradientConical"
              },
              {
                "$ref": "#/definitions/IVisualScale"
              },
              {
                "typeof": "function"
              },
              {
                "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
              },
              {
                "const": false,
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,number>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,number[]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,number|number[]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "number"
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,string>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,string|HTMLCanvasElement|HTMLImageElement>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/HTMLCanvasElement"
              },
              {
                "$ref": "#/definitions/HTMLImageElement"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,string|false|IColorKey|IGradient|(number|boolean)[]>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IColorKey"
              },
              {
                "$ref": "#/definitions/IGradientLinear"
              },
              {
                "$ref": "#/definitions/IGradientRadial"
              },
              {
                "$ref": "#/definitions/IGradientConical"
              },
              {
                "items": {
                  "type": [
                    "number",
                    "boolean"
                  ]
                },
                "type": "array"
              },
              {
                "const": false,
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IVisualSpecStyle<unknown,string|number>": {
      "properties": {
        "domain": {
          "description": "will set to scale.domain, it means input of scale",
          "items": {},
          "type": "array"
        },
        "field": {
          "type": "string"
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": [
              "string",
              "number"
            ]
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "IWaterfallChartSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "axes": {
          "description": "笛卡尔坐标系的坐标轴配置",
          "items": {
            "$ref": "#/definitions/ICartesianAxisSpec"
          },
          "type": "array"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICartesianCrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "图表的方向配置。\n- 'vertical' 垂直布局，即常见的直角坐标系布局，x 轴位于底部，y 轴位于左侧。\n- 'horizontal' 水平布局，可理解为 x 轴和 y 轴位置互换。"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "leaderLine": {
          "$ref": "#/definitions/IMarkSpec<IRuleMarkSpec>",
          "description": "引导线配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "markArea": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkAreaTheme"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考区域配置"
        },
        "markLine": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineXSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineYSpec"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkLineTheme"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/Omit<IMarkLineTheme,\"line\"|\"label\">"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkLineSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考线配置"
        },
        "markPoint": {
          "anyOf": [
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/IMarkerSpec"
                },
                {
                  "typeof": "function"
                },
                {
                  "$ref": "#/definitions/IMarkPointTheme<IMarkerSymbol>"
                }
              ]
            },
            {
              "items": {
                "$ref": "#/definitions/IMarkPointSpec"
              },
              "type": "array"
            }
          ],
          "description": "参考点配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列配置",
          "items": {
            "$ref": "#/definitions/IWaterfallSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "堆积值标签配置"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "total": {
          "anyOf": [
            {
              "$ref": "#/definitions/IWaterfallTotalEnd"
            },
            {
              "$ref": "#/definitions/IWaterfallTotalCustom"
            },
            {
              "$ref": "#/definitions/IWaterfallTotalField"
            }
          ],
          "description": "总计配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "waterfall",
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IWaterfallSeriesSpec": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "leaderLine": {
          "$ref": "#/definitions/IMarkSpec<IRuleMarkSpec>",
          "description": "引导线配置"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/ILabelSpec"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "堆积值标签配置"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "total": {
          "anyOf": [
            {
              "$ref": "#/definitions/IWaterfallTotalEnd"
            },
            {
              "$ref": "#/definitions/IWaterfallTotalCustom"
            },
            {
              "$ref": "#/definitions/IWaterfallTotalField"
            }
          ],
          "description": "总计配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "waterfall",
          "description": "系列类型",
          "type": "string"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "type",
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "IWaterfallSeriesTheme": {
      "properties": {
        "bar": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRectMarkSpec>>"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度",
          "type": "number"
        },
        "barWidth": {
          "description": "柱体宽度",
          "type": "number"
        },
        "label": {
          "$ref": "#/definitions/Partial<ILabelSpec>"
        },
        "leaderLine": {
          "$ref": "#/definitions/Partial<IMarkTheme<IRuleMarkSpec>>"
        },
        "seriesFieldName": {
          "typeof": "function"
        },
        "stackLabel": {
          "$ref": "#/definitions/Partial<IMarkTheme<ITextMarkSpec>&{offset?:number;position?:IWaterfallStackLabelPosition;}>"
        }
      },
      "required": [
        "seriesFieldName"
      ],
      "type": "object"
    },
    "IWaterfallStackLabelPosition": {
      "enum": [
        "max",
        "middle",
        "min",
        "withChange"
      ],
      "type": "string"
    },
    "IWaterfallTotalCustom": {
      "properties": {
        "product": {
          "typeof": "function"
        },
        "tagField": {
          "description": "总计值的标志位，对应 field 的值为 true 时，认为数据是总计数据",
          "type": "string"
        },
        "text": {
          "description": "总计文本",
          "type": "string"
        },
        "type": {
          "const": "custom",
          "description": "此类型下，总计的运算方式由自定义函数决定",
          "type": "string"
        }
      },
      "required": [
        "product",
        "tagField",
        "type"
      ],
      "type": "object"
    },
    "IWaterfallTotalEnd": {
      "properties": {
        "text": {
          "description": "总计文本",
          "type": "string"
        },
        "type": {
          "const": "end",
          "description": "此类型下，默认在数据最后增加一条总计信息",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "IWaterfallTotalField": {
      "properties": {
        "collectCountField": {
          "description": "可以指定总计计算前 n 个维度",
          "type": "string"
        },
        "startField": {
          "description": "可以指定总计起点",
          "type": "string"
        },
        "tagField": {
          "description": "总计值的标志位，对应 field 的值为 true 时，认为数据是总计数据",
          "type": "string"
        },
        "text": {
          "description": "总计文本",
          "type": "string"
        },
        "type": {
          "const": "field",
          "description": "此类型下，总计的运算方式由对应的数据字段决定",
          "type": "string"
        },
        "valueField": {
          "description": "可以指定总计值",
          "type": "string"
        }
      },
      "required": [
        "tagField",
        "type"
      ],
      "type": "object"
    },
    "IWindow": {
      "properties": {
        "addEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "clearViewBox": {
          "typeof": "function"
        },
        "configure": {
          "typeof": "function"
        },
        "create": {
          "typeof": "function"
        },
        "dispatchEvent": {
          "typeof": "function"
        },
        "dpr": {
          "type": "number"
        },
        "getBoundingClientRect": {
          "typeof": "function"
        },
        "getContainer": {
          "typeof": "function"
        },
        "getContext": {
          "typeof": "function"
        },
        "getImageBuffer": {
          "typeof": "function"
        },
        "getNativeHandler": {
          "typeof": "function"
        },
        "getTopLeft": {
          "typeof": "function"
        },
        "height": {
          "type": "number"
        },
        "hooks": {
          "typeof": "function"
        },
        "isVisible": {
          "typeof": "function"
        },
        "maxHeight": {
          "type": "number"
        },
        "maxWidth": {
          "type": "number"
        },
        "minHeight": {
          "type": "number"
        },
        "minWidth": {
          "type": "number"
        },
        "onVisibleChange": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "removeEventListener": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "resizable": {
          "type": "boolean"
        },
        "resize": {
          "typeof": "function"
        },
        "setDpr": {
          "typeof": "function"
        },
        "setWindowHandler": {
          "typeof": "function"
        },
        "style": {
          "anyOf": [
            {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "$ref": "#/definitions/Record<string,any>"
            }
          ]
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "addEventListener",
        "clearViewBox",
        "configure",
        "create",
        "dispatchEvent",
        "dpr",
        "getBoundingClientRect",
        "getContainer",
        "getContext",
        "getImageBuffer",
        "getNativeHandler",
        "getTopLeft",
        "height",
        "hooks",
        "isVisible",
        "maxHeight",
        "maxWidth",
        "minHeight",
        "minWidth",
        "onVisibleChange",
        "release",
        "removeEventListener",
        "resizable",
        "resize",
        "setDpr",
        "setWindowHandler",
        "style",
        "title",
        "width"
      ],
      "type": "object"
    },
    "IWordCloud3dChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "colorHexField": {
          "description": "直接指定 hex 颜色字段",
          "type": "string"
        },
        "colorList": {
          "description": "颜色列表",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "colorMode": {
          "description": "颜色模式",
          "enum": [
            "linear",
            "ordinal"
          ],
          "type": "string"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "depth_3d": {
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "不增加formatMethod的原因：形状词云在做布局时，word和fillingWord用的是同一份数据，即text相同，所以fillingWords的format不会生效"
        },
        "fontFamilyField": {
          "description": "字体字段",
          "type": "string"
        },
        "fontSizeRange": {
          "description": "当valueField存在时，默认值[20,40]; 当valueField不存在时，默认值[10, 10]",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "fontStyleField": {
          "description": "字体样式字段",
          "type": "string"
        },
        "fontWeightField": {
          "description": "字重字段",
          "type": "string"
        },
        "fontWeightRange": {
          "default": [
            200,
            500
          ],
          "description": "字重范围",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "keepAspect": {
          "description": "TODO: 缩放mask时是否保持比例",
          "type": "boolean"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maskShape": {
          "default": "'circle'",
          "description": "词云形状",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "文本字段",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "postProjection": {
          "const": "StereographicProjection",
          "type": "string"
        },
        "random": {
          "description": "是否开始随机摆放方向(顺时针｜逆时针), 主要用于spec测试",
          "type": "boolean"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rotateAngles": {
          "description": "可旋转角度 随机取范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/IWordCloud3dSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "wordCloud3d",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "hover配置随图元state，此外增加padding: 字体间距 和 formatMethod: 文本格式化"
        },
        "wordCloudConfig": {
          "typeof": "function"
        },
        "wordCloudShapeConfig": {
          "typeof": "function"
        }
      },
      "required": [
        "nameField",
        "type"
      ],
      "type": "object"
    },
    "IWordCloud3dSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "colorHexField": {
          "description": "直接指定 hex 颜色字段",
          "type": "string"
        },
        "colorList": {
          "description": "颜色列表",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "colorMode": {
          "description": "颜色模式",
          "enum": [
            "linear",
            "ordinal"
          ],
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "depth_3d": {
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "不增加formatMethod的原因：形状词云在做布局时，word和fillingWord用的是同一份数据，即text相同，所以fillingWords的format不会生效"
        },
        "fontFamilyField": {
          "description": "字体字段",
          "type": "string"
        },
        "fontSizeRange": {
          "description": "当valueField存在时，默认值[20,40]; 当valueField不存在时，默认值[10, 10]",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "fontStyleField": {
          "description": "字体样式字段",
          "type": "string"
        },
        "fontWeightField": {
          "description": "字重字段",
          "type": "string"
        },
        "fontWeightRange": {
          "default": [
            200,
            500
          ],
          "description": "字重范围",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "keepAspect": {
          "description": "TODO: 缩放mask时是否保持比例",
          "type": "boolean"
        },
        "maskShape": {
          "default": "'circle'",
          "description": "词云形状",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "文本字段",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "postProjection": {
          "const": "StereographicProjection",
          "type": "string"
        },
        "random": {
          "description": "是否开始随机摆放方向(顺时针｜逆时针), 主要用于spec测试",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rotateAngles": {
          "description": "可旋转角度 随机取范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "wordCloud3d",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "hover配置随图元state，此外增加padding: 字体间距 和 formatMethod: 文本格式化"
        },
        "wordCloudConfig": {
          "typeof": "function"
        },
        "wordCloudShapeConfig": {
          "typeof": "function"
        }
      },
      "required": [
        "nameField",
        "type"
      ],
      "type": "object"
    },
    "IWordCloud3dSeriesTheme": {
      "properties": {
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "IWordCloudChartSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "colorHexField": {
          "description": "直接指定 hex 颜色字段",
          "type": "string"
        },
        "colorList": {
          "description": "颜色列表",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "colorMode": {
          "description": "颜色模式",
          "enum": [
            "linear",
            "ordinal"
          ],
          "type": "string"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "不增加formatMethod的原因：形状词云在做布局时，word和fillingWord用的是同一份数据，即text相同，所以fillingWords的format不会生效"
        },
        "fontFamilyField": {
          "description": "字体字段",
          "type": "string"
        },
        "fontSizeRange": {
          "description": "当valueField存在时，默认值[20,40]; 当valueField不存在时，默认值[10, 10]",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "fontStyleField": {
          "description": "字体样式字段",
          "type": "string"
        },
        "fontWeightField": {
          "description": "字重字段",
          "type": "string"
        },
        "fontWeightRange": {
          "default": [
            200,
            500
          ],
          "description": "字重范围",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "keepAspect": {
          "description": "TODO: 缩放mask时是否保持比例",
          "type": "boolean"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "maskShape": {
          "default": "'circle'",
          "description": "词云形状",
          "type": "string"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "文本字段",
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "player": {
          "$ref": "#/definitions/IPlayer",
          "description": "播放器配置"
        },
        "random": {
          "description": "是否开始随机摆放方向(顺时针｜逆时针), 主要用于spec测试",
          "type": "boolean"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rotateAngles": {
          "description": "可旋转角度 随机取范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "系列",
          "items": {
            "$ref": "#/definitions/IWordCloudSeriesSpec"
          },
          "type": "array"
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "wordCloud",
          "description": "图表类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "hover配置随图元state，此外增加padding: 字体间距 和 formatMethod: 文本格式化"
        },
        "wordCloudConfig": {
          "typeof": "function"
        },
        "wordCloudShapeConfig": {
          "typeof": "function"
        }
      },
      "required": [
        "nameField",
        "type"
      ],
      "type": "object"
    },
    "IWordCloudSeriesSpec": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "allOf": [
                {
                  "typeof": "function"
                },
                {
                  "typeof": "function"
                }
              ]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "colorHexField": {
          "description": "直接指定 hex 颜色字段",
          "type": "string"
        },
        "colorList": {
          "description": "颜色列表",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "colorMode": {
          "description": "颜色模式",
          "enum": [
            "linear",
            "ordinal"
          ],
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "不增加formatMethod的原因：形状词云在做布局时，word和fillingWord用的是同一份数据，即text相同，所以fillingWords的format不会生效"
        },
        "fontFamilyField": {
          "description": "字体字段",
          "type": "string"
        },
        "fontSizeRange": {
          "description": "当valueField存在时，默认值[20,40]; 当valueField不存在时，默认值[10, 10]",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "fontStyleField": {
          "description": "字体样式字段",
          "type": "string"
        },
        "fontWeightField": {
          "description": "字重字段",
          "type": "string"
        },
        "fontWeightRange": {
          "default": [
            200,
            500
          ],
          "description": "字重范围",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "keepAspect": {
          "description": "TODO: 缩放mask时是否保持比例",
          "type": "boolean"
        },
        "maskShape": {
          "default": "'circle'",
          "description": "词云形状",
          "type": "string"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "nameField": {
          "description": "文本字段",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "random": {
          "description": "是否开始随机摆放方向(顺时针｜逆时针), 主要用于spec测试",
          "type": "boolean"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "rotateAngles": {
          "description": "可旋转角度 随机取范围",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "type": {
          "const": "wordCloud",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "description": "权重字段",
          "type": "string"
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "hover配置随图元state，此外增加padding: 字体间距 和 formatMethod: 文本格式化"
        },
        "wordCloudConfig": {
          "typeof": "function"
        },
        "wordCloudShapeConfig": {
          "typeof": "function"
        }
      },
      "required": [
        "nameField",
        "type"
      ],
      "type": "object"
    },
    "IWordCloudSeriesTheme": {
      "properties": {
        "fillingWord": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        },
        "word": {
          "allOf": [
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            },
            {
              "typeof": "function"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImageData": {
      "properties": {
        "colorSpace": {
          "$ref": "#/definitions/PredefinedColorSpace"
        },
        "data": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "height": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "colorSpace",
        "data",
        "height",
        "width"
      ],
      "type": "object"
    },
    "InterpolateType": {
      "enum": [
        "basis",
        "bundle",
        "cardinal",
        "cardinalClosed",
        "catmullRom",
        "linear",
        "linearClosed",
        "monotone",
        "monotoneX",
        "monotoneY",
        "natural",
        "step",
        "stepAfter",
        "stepBefore"
      ],
      "type": "string"
    },
    "LabelPosition": {
      "enum": [
        "bottom",
        "left",
        "outer",
        "right",
        "top",
        "z"
      ],
      "type": "string"
    },
    "LayerMode": {
      "enum": [
        "dynamic",
        "static",
        "virtual"
      ],
      "type": "string"
    },
    "LineStrokeCap": {
      "enum": [
        "butt",
        "round",
        "square"
      ],
      "type": "string"
    },
    "LineStrokeJoin": {
      "enum": [
        "arcs",
        "bevel",
        "miter",
        "miter-clip",
        "round"
      ],
      "type": "string"
    },
    "Location": {
      "properties": {
        "ancestorOrigins": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hash": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "pathname": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "search": {
          "type": "string"
        }
      },
      "required": [
        "ancestorOrigins",
        "hash",
        "host",
        "hostname",
        "href",
        "origin",
        "pathname",
        "port",
        "protocol",
        "search"
      ],
      "type": "object"
    },
    "LockManager": {
      "type": "object"
    },
    "Map<Function,(...args:any[])=>void>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<number,IGraphicPicker>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<number,IGraphicRender>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<number,{layer:ILayer;group?:IGroup;zIndex:number;drawContribution?:IDrawContribution;}>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<string,Map<number,IGraphicRender>>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<string,any>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<string|HTMLCanvasElement|HTMLImageElement|IBackgroundConfig,{state:\"loading\"|\"fail\"|\"success\"|\"init\";data?:HTMLCanvasElement|HTMLImageElement;}>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<string|HTMLElement,{container:string|HTMLElement;dom:HTMLElement;wrapGroup:HTMLDivElement;}>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "Map<string|number,IAnimate>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "required": [
        "__@toStringTag@13831",
        "size"
      ],
      "type": "object"
    },
    "MarkFunctionValueType<number>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "number"
        }
      ]
    },
    "MarkFunctionValueType<number|boolean>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": [
            "number",
            "boolean"
          ]
        }
      ]
    },
    "MaybeArray<TooltipPatternProperty<MaybeArray<IToolTipLinePattern>>>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IToolTipLinePattern"
        },
        {
          "items": {
            "$ref": "#/definitions/IToolTipLinePattern"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "items": {
            "$ref": "#/definitions/TooltipPatternProperty<MaybeArray<IToolTipLinePattern>>"
          },
          "type": "array"
        }
      ]
    },
    "MediaCapabilities": {
      "type": "object"
    },
    "MediaDevices": {
      "properties": {
        "ondevicechange": {
          "typeof": "function"
        }
      },
      "required": [
        "ondevicechange"
      ],
      "type": "object"
    },
    "MediaImage": {
      "properties": {
        "sizes": {
          "type": "string"
        },
        "src": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "src"
      ],
      "type": "object"
    },
    "MediaMetadata": {
      "properties": {
        "album": {
          "type": "string"
        },
        "artist": {
          "type": "string"
        },
        "artwork": {
          "items": {
            "$ref": "#/definitions/MediaImage"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "album",
        "artist",
        "artwork",
        "title"
      ],
      "type": "object"
    },
    "MediaSession": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/MediaMetadata"
        },
        "playbackState": {
          "$ref": "#/definitions/MediaSessionPlaybackState"
        }
      },
      "required": [
        "metadata",
        "playbackState"
      ],
      "type": "object"
    },
    "MediaSessionPlaybackState": {
      "enum": [
        "none",
        "paused",
        "playing"
      ],
      "type": "string"
    },
    "MimeType": {
      "properties": {
        "description": {
          "type": "string"
        },
        "enabledPlugin": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/MimeType"
            }
          },
          "type": "object"
        },
        "suffixes": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "enabledPlugin",
        "suffixes",
        "type"
      ],
      "type": "object"
    },
    "Navigator": {
      "properties": {
        "appCodeName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "clipboard": {
          "$ref": "#/definitions/Clipboard"
        },
        "cookieEnabled": {
          "type": "boolean"
        },
        "credentials": {
          "$ref": "#/definitions/CredentialsContainer"
        },
        "doNotTrack": {
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation"
        },
        "hardwareConcurrency": {
          "type": "number"
        },
        "language": {
          "type": "string"
        },
        "languages": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locks": {
          "$ref": "#/definitions/LockManager"
        },
        "maxTouchPoints": {
          "type": "number"
        },
        "mediaCapabilities": {
          "$ref": "#/definitions/MediaCapabilities"
        },
        "mediaDevices": {
          "$ref": "#/definitions/MediaDevices"
        },
        "mediaSession": {
          "$ref": "#/definitions/MediaSession"
        },
        "mimeTypes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/MimeType"
            }
          },
          "type": "object"
        },
        "onLine": {
          "type": "boolean"
        },
        "pdfViewerEnabled": {
          "type": "boolean"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions"
        },
        "platform": {
          "type": "string"
        },
        "plugins": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                  "$ref": "#/definitions/MimeType"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "product": {
          "type": "string"
        },
        "productSub": {
          "type": "string"
        },
        "serviceWorker": {
          "$ref": "#/definitions/ServiceWorkerContainer"
        },
        "storage": {
          "$ref": "#/definitions/StorageManager"
        },
        "userAgent": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "vendorSub": {
          "type": "string"
        },
        "webdriver": {
          "type": "boolean"
        }
      },
      "required": [
        "appCodeName",
        "appName",
        "appVersion",
        "clipboard",
        "cookieEnabled",
        "credentials",
        "doNotTrack",
        "geolocation",
        "hardwareConcurrency",
        "language",
        "languages",
        "locks",
        "maxTouchPoints",
        "mediaCapabilities",
        "mediaDevices",
        "mediaSession",
        "mimeTypes",
        "onLine",
        "pdfViewerEnabled",
        "permissions",
        "platform",
        "plugins",
        "product",
        "productSub",
        "serviceWorker",
        "storage",
        "userAgent",
        "vendor",
        "vendorSub",
        "webdriver"
      ],
      "type": "object"
    },
    "Omit<DiscreteLegendAttrs,\"title\"|\"layout\"|\"items\"|\"item\"|\"pager\">": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "allowAllCanceled": {
          "type": "boolean"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "autoPage": {
          "type": "boolean"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "defaultSelected": {
          "items": {
            "type": [
              "string",
              "number"
            ]
          },
          "type": "array"
        },
        "disableTriggerEvent": {
          "type": "boolean"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "hover": {
          "type": "boolean"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "interactive": {
          "type": "boolean"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxCol": {
          "type": "number"
        },
        "maxHeight": {
          "type": "number"
        },
        "maxRow": {
          "type": "number"
        },
        "maxWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/Padding"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "reversed": {
          "type": "boolean"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "select": {
          "type": "boolean"
        },
        "selectMode": {
          "enum": [
            "multiple",
            "single"
          ],
          "type": "string"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<IBarSeriesSpec,\"type\">": {
      "properties": {
        "activePoint": {
          "default": false,
          "description": "是否使用额外的 activePoint 显示交互点，可以在点隐藏时显示被交互的点",
          "since": "1.3.0",
          "type": "boolean"
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bar": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "图元配置"
        },
        "barBackground": {
          "$ref": "#/definitions/IMarkSpec<IRectMarkSpec>",
          "description": "柱状背景图元",
          "since": "1.6.0"
        },
        "barGapInGroup": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "since": "1.2.0"
        },
        "barMaxWidth": {
          "description": "柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barMinHeight": {
          "description": "柱条最小高度，可用于防止某数据项的值过小的视觉调整。",
          "since": "1.4.0",
          "type": "number"
        },
        "barMinWidth": {
          "description": "柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "barWidth": {
          "description": "柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n1. number 类型，表示像素值\n2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)",
          "type": [
            "string",
            "number"
          ]
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "direction": {
          "$ref": "#/definitions/DirectionType",
          "description": "direction\nrow means layout by rows，col means layout by columns"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<ILabelSpec,\"position\">"
            },
            {
              "typeof": "function"
            }
          ],
          "description": "标签配置"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "sampling": {
          "$ref": "#/definitions/ISamplingMethod",
          "description": "数据采样 - 采样方法",
          "since": "1.6.0"
        },
        "samplingFactor": {
          "default": 1,
          "description": "数据采样 - 采样系数",
          "since": "1.6.0",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "x2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "xField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "x轴字段"
        },
        "y2Field": {
          "description": "用于区间数据，声明区间末尾的数据字段。",
          "type": "string"
        },
        "yField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "y轴字段"
        },
        "zField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "z轴字段\n用于3d散点图等"
        }
      },
      "required": [
        "xField",
        "yField"
      ],
      "type": "object"
    },
    "Omit<ICartesianAxisCommonSpec,\"inverse\">": {
      "properties": {
        "animation": {
          "default": false,
          "description": "是否开启动画，默认关闭",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "autoIndent": {
          "description": "是否进行自动缩进\n设置为 true 时，当轴元素超出绘图区会被裁剪时，会对图表增加额外的padding，使轴可以显示完整",
          "type": "boolean"
        },
        "background": {
          "typeof": "function"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "depth": {
          "description": "轴的z方向深度",
          "type": "number"
        },
        "domainLine": {
          "$ref": "#/definitions/ICartesianDomainLine",
          "description": "轴线配置"
        },
        "grid": {
          "$ref": "#/definitions/IGrid",
          "description": "网格线配置"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "hover": {
          "default": false,
          "description": "是否开启 hover 悬浮交互，默认关闭",
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "label": {
          "$ref": "#/definitions/ICartesianLabel",
          "description": "轴标签配置"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "mode": {
          "description": "是否是3d模式的轴",
          "enum": [
            "2d",
            "3d"
          ],
          "type": "string"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "轴位置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "sampling": {
          "default": true,
          "description": "是否开启轴数据采样，默认开启。\n轴采样开启之后，会对轴数据进行采样显示，防止轴数据的重叠。\n通过配置 `label.minGap` 可以控制轴标签之间的间距。",
          "since": "1.1.0",
          "type": "boolean"
        },
        "select": {
          "default": false,
          "description": "是否开启 select 选中交互，默认关闭",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "subGrid": {
          "$ref": "#/definitions/IGrid",
          "description": "子网格线配置"
        },
        "subTick": {
          "$ref": "#/definitions/ISubTick",
          "description": "子刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "title": {
          "$ref": "#/definitions/ICartesianTitle",
          "description": "轴标题配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "type": {
          "$ref": "#/definitions/AxisType",
          "description": "轴类型"
        },
        "unit": {
          "typeof": "function"
        },
        "visible": {
          "default": true,
          "description": "是否显示坐标轴",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "required": [
        "orient"
      ],
      "type": "object"
    },
    "Omit<ICircularProgressSeriesSpec,\"data\">": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "分类字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "default": 0,
          "description": "进度条圆角半径",
          "type": "number"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "maxValue": {
          "description": "数据最大值，默认为 1",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "progress": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "进度条样式"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "type": "string"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "背景样式"
        },
        "type": {
          "const": "circularProgress",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Omit<ICommonAxisSpec,\"center\">": {
      "properties": {
        "animation": {
          "default": false,
          "description": "是否开启动画，默认关闭",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<string>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "hover": {
          "default": false,
          "description": "是否开启 hover 悬浮交互，默认关闭",
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "inverse": {
          "default": false,
          "description": "是否开启反向坐标轴。",
          "type": "boolean"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "sampling": {
          "default": true,
          "description": "是否开启轴数据采样，默认开启。\n轴采样开启之后，会对轴数据进行采样显示，防止轴数据的重叠。\n通过配置 `label.minGap` 可以控制轴标签之间的间距。",
          "since": "1.1.0",
          "type": "boolean"
        },
        "select": {
          "default": false,
          "description": "是否开启 select 选中交互，默认关闭",
          "type": "boolean"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "subTick": {
          "$ref": "#/definitions/ISubTick",
          "description": "子刻度线配置"
        },
        "tick": {
          "$ref": "#/definitions/ITick",
          "description": "轴刻度线配置"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "type": {
          "$ref": "#/definitions/AxisType",
          "description": "轴类型"
        },
        "visible": {
          "default": true,
          "description": "是否显示坐标轴",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<IComponentSpec,\"orient\">": {
      "properties": {
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<IFunnelSeriesSpec,\"type\">": {
      "properties": {
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "分类字段",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "funnel": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "漏斗层样式"
        },
        "funnelAlign": {
          "default": "'center'",
          "description": "漏斗图对齐方式。转化漏斗图仅支持'center'",
          "enum": [
            "center",
            "left",
            "right"
          ],
          "type": "string"
        },
        "funnelOrient": {
          "$ref": "#/definitions/IOrientType",
          "default": "'top'",
          "description": "漏斗图朝向。"
        },
        "gap": {
          "default": 0,
          "description": "漏斗层之间的像素间隔。转化漏斗图不支持gap配置。",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "isCone": {
          "default": true,
          "description": "漏斗图最下层是否尖角。shape为`rect`时不生效",
          "type": "boolean"
        },
        "isTransform": {
          "default": false,
          "description": "是否是转化漏斗图",
          "type": "boolean"
        },
        "label": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "漏斗层标签配置"
        },
        "maxSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": "'80%'",
          "description": "漏斗图最大宽度，支持配置像素值和百分比字符串。"
        },
        "minSize": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "漏斗图最小宽度，支持配置像素值和百分比字符串。"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerLabel": {
          "$ref": "#/definitions/IFunnelOuterLabelSpec",
          "description": "漏斗层外部标签配置"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "range": {
          "typeof": "function"
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "shape": {
          "default": "'trapezoid'",
          "description": "图元形状。转化漏斗图仅支持 'rect'",
          "enum": [
            "rect",
            "trapezoid"
          ],
          "type": "string"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "transform": {
          "$ref": "#/definitions/IMarkSpec<IPathMarkSpec>",
          "description": "转化层样式"
        },
        "transformLabel": {
          "$ref": "#/definitions/IFunnelLabelSpec",
          "description": "转化层标签配置"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "valueField"
      ],
      "type": "object"
    },
    "Omit<IGaugeSeriesSpec,\"data\">": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">"
            },
            {
              "$ref": "#/definitions/Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "类别字段"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "description": "圆角半径",
          "type": "number"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "description": "扇区结束角度",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "description": "扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/ILabelSpec",
          "description": "标签样式"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区间隔角度",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "radius": {
          "default": 0.6,
          "description": "扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "roundCap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "圆角部分是否突出（可分别设置左侧和右侧）"
        },
        "segment": {
          "$ref": "#/definitions/IMarkSpec<IProgressArcMarkSpec>",
          "description": "扇区样式"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "description": "扇区起始角度",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tickMask": {
          "allOf": [
            {
              "$ref": "#/definitions/Omit<IMarkSpec<IArcMarkSpec>,\"state\">"
            },
            {
              "$ref": "#/definitions/ITickMaskSpec"
            }
          ],
          "description": "tick 模式显示",
          "since": "1.4.0"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "track": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "背景样式"
        },
        "type": {
          "const": "gauge",
          "description": "系列类型",
          "type": "string"
        },
        "valueField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "数值字段"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Omit<IGroupGraphicAttribute,\"background\">": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<ILabelSpec,\"position\">": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "centerOffset": {
          "description": "中心点偏移距离",
          "type": "number"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "customLayoutFunc": {
          "typeof": "function"
        },
        "customOverlapFunc": {
          "typeof": "function"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "formatter": {
          "description": "字符串模版\n用{}包裹变量名的字符串模版, 变量名取自数据属性值\n在饼图中支持配置百分比, {_percent_}\neg: 'type={type},value={value},percent={_percent_}'",
          "since": "1.7.0",
          "type": "string"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "labelLayout": {
          "description": "标签布局",
          "enum": [
            "region",
            "series"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "标签样式配置"
        },
        "support3d": {
          "description": "是否支持3D",
          "type": "boolean"
        },
        "textType": {
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<IMarkLineTheme,\"line\"|\"label\">": {
      "properties": {
        "endSymbol": {
          "$ref": "#/definitions/IMarkerSymbol"
        },
        "startSymbol": {
          "$ref": "#/definitions/IMarkerSymbol"
        }
      },
      "type": "object"
    },
    "Omit<IMarkSpec<IArcMarkSpec>,\"state\">": {
      "properties": {
        "customShape": {
          "typeof": "function"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户id"
        },
        "interactive": {
          "description": "是否响应交互",
          "type": "boolean"
        },
        "large": {
          "description": "是否开启大数据渲染模式，开启后会降低渲染的精度",
          "type": "boolean"
        },
        "largeThreshold": {
          "description": "开启大数据渲染优化的阀值，对应的是data的长度;推荐 largeThreshold < progressiveThreshold",
          "type": "number"
        },
        "progressiveStep": {
          "description": "分片长度",
          "type": "number"
        },
        "progressiveThreshold": {
          "description": "开启分片渲染的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<IArcMarkSpec>_2",
          "description": "默认样式设置"
        },
        "support3d": {
          "type": "boolean"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "zIndex": {
          "description": "与其他mark元素的层级",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Omit<IMarkTheme<IArcMarkSpec>,\"state\">": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "style": {
          "$ref": "#/definitions/IArcMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IPieSeriesSpec,\"type\">": {
      "properties": {
        "angleField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "animation": {
          "description": "是否开启系列动画",
          "type": "boolean"
        },
        "animationAppear": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表入场动画\n支持配置图表内置不同动画效果"
        },
        "animationDisappear": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "图表退场动画"
        },
        "animationEnter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 新增数据动画"
        },
        "animationExit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据删除动画"
        },
        "animationNormal": {
          "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>",
          "description": "循环动画"
        },
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "animationUpdate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>"
            },
            {
              "$ref": "#/definitions/Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "数据更新 - 数据更新动画"
        },
        "categoryField": {
          "description": "饼图每个扇区为独立的系列",
          "type": "string"
        },
        "centerOffset": {
          "description": "饼图扇区中心偏移",
          "type": "number"
        },
        "centerX": {
          "description": "饼图中心点 x 坐标",
          "type": "number"
        },
        "centerY": {
          "description": "饼图中心点 y 坐标",
          "type": "number"
        },
        "cornerRadius": {
          "default": 0,
          "description": "饼图扇区圆角半径",
          "type": "number"
        },
        "data": {
          "$ref": "#/definitions/IDataType",
          "description": "系列可以配置自身的数据，也可以从chart.data中获取数据"
        },
        "dataId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的数据id"
        },
        "dataIndex": {
          "default": 0,
          "description": "系列关联的数据索引",
          "type": "number"
        },
        "dataKey": {
          "$ref": "#/definitions/DataKeyType",
          "description": "dataKey用于绑定数据与Mark的关系, 该配置在动画中非常重要."
        },
        "endAngle": {
          "default": 270,
          "description": "饼图的结束角度（0 ~ 360）",
          "type": "number"
        },
        "extensionMark": {
          "description": "扩展mark",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IExtensionMarkSpec<MarkTypeEnum.symbol|MarkTypeEnum.rule|MarkTypeEnum.line|MarkTypeEnum.text|MarkTypeEnum.rect|MarkTypeEnum.rect3d|MarkTypeEnum.image|MarkTypeEnum.path|MarkTypeEnum.area|MarkTypeEnum.arc|MarkTypeEnum.arc3d|MarkTypeEnum.polygon|MarkTypeEnum.pyramid3d|MarkTypeEnum.boxPlot|MarkTypeEnum.linkPath|MarkTypeEnum.progressArc|MarkTypeEnum.ripple>"
              },
              {
                "$ref": "#/definitions/IExtensionGroupMarkSpec"
              }
            ]
          },
          "type": "array"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "用户自定义的 series id"
        },
        "innerRadius": {
          "default": 0,
          "description": "饼图扇区内半径",
          "type": "number"
        },
        "invalidType": {
          "$ref": "#/definitions/IInvalidType",
          "default": "'break'\n'break'指在该数据点处断开\n'link' 指忽略该点保持连续\n'zero' 指该点默认数值为0\n'ignore' 指不处理",
          "description": "null，undefined等非法数据点连接方式。"
        },
        "label": {
          "$ref": "#/definitions/IArcLabelSpec",
          "description": "标签配置"
        },
        "minAngle": {
          "default": 0,
          "description": "最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互。",
          "since": "1.4.0",
          "type": "number"
        },
        "morph": {
          "$ref": "#/definitions/IMorphSeriesSpec",
          "description": "morph 动画配置"
        },
        "name": {
          "description": "系列名称",
          "type": "string"
        },
        "outerRadius": {
          "default": 0.6,
          "description": "饼图扇区外半径",
          "type": "number"
        },
        "padAngle": {
          "description": "扇区之间的间隔角度",
          "type": "number"
        },
        "percent": {
          "description": "是否对数据进行百分比处理",
          "type": "boolean"
        },
        "pie": {
          "$ref": "#/definitions/IMarkSpec<IArcMarkSpec>",
          "description": "扇区样式"
        },
        "radius": {
          "default": 0.6,
          "description": "饼图扇区半径",
          "type": "number"
        },
        "radiusField": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "regionId": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "系列关联的region id"
        },
        "regionIndex": {
          "default": 0,
          "description": "系列关联的region索引",
          "type": "number"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "seriesField": {
          "description": "分组字段",
          "type": "string"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "sortDataByAxis": {
          "default": false,
          "description": "是否将数据按照数轴排序",
          "since": "1.3.0",
          "type": "boolean"
        },
        "stack": {
          "description": "是否对数据进行堆叠处理",
          "type": "boolean"
        },
        "stackOffsetSilhouette": {
          "description": "是否围绕中心轴偏移轮廓",
          "type": "boolean"
        },
        "stackValue": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "堆叠时的分组值\nstackValue 相等的系列将在一起堆积。没有配置的系列将在一组",
          "since": "1.4.0"
        },
        "startAngle": {
          "default": -90,
          "description": "饼图的起始角度（0 ~ 360）",
          "type": "number"
        },
        "support3d": {
          "description": "是否支持3d视角",
          "type": "boolean"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "提示信息"
        },
        "totalLabel": {
          "$ref": "#/definitions/ITotalLabelSpec",
          "description": "堆叠汇总标签",
          "since": "1.3.0"
        },
        "valueField": {
          "description": "数值字段",
          "type": "string"
        }
      },
      "required": [
        "categoryField",
        "valueField"
      ],
      "type": "object"
    },
    "Omit<IStateAnimateSpec<\"fadeIn\">,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<AreaAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<BarAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<CirclePackingAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<CorrelationAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<FunnelAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<LineAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<LinearProgressAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<PieAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<ProgressLikeAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<RadarAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<RangeColumnAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<RoseAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<SankeyAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<ScatterAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<SunburstAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<TreemapAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<WordcloudAppearPreset>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<IStateAnimateSpec<string>,\"preset\">": {
      "properties": {
        "delay": {
          "description": "动画延迟开始的时长",
          "type": "number"
        },
        "duration": {
          "description": "图表动画时长",
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/EasingType",
          "description": "动画缓动效果"
        },
        "oneByOne": {
          "description": "是否轮流执行",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<ITheme,\"name\">": {
      "properties": {
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表背景色"
        },
        "colorScheme": {
          "$ref": "#/definitions/IThemeColorScheme",
          "description": "全局色板"
        },
        "component": {
          "$ref": "#/definitions/IComponentTheme",
          "description": "组件样式属性"
        },
        "description": {
          "description": "主题描述",
          "type": "string"
        },
        "fontFamily": {
          "description": "图表字体配置",
          "type": "string"
        },
        "mark": {
          "$ref": "#/definitions/IGlobalMarkThemeByType",
          "description": "全局 mark 样式属性，按 mark 类别索引"
        },
        "markByName": {
          "$ref": "#/definitions/IGlobalMarkThemeByName",
          "description": "全局 mark 样式属性，按 mark 名称索引，优先级更高"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表内边距"
        },
        "series": {
          "$ref": "#/definitions/ISeriesTheme",
          "description": "系列样式属性"
        },
        "type": {
          "description": "主题类别：亮色或者暗色\n该配置用于指定该主题需要 merge 的是内置的亮色主题还是暗色主题",
          "enum": [
            "dark",
            "light"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Omit<ITooltipTextTheme<string>,\"autoWidth\">": {
      "properties": {
        "fill": {
          "description": "字体颜色",
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字体大小",
          "type": "number"
        },
        "fontWeight": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "字重"
        },
        "lineHeight": {
          "description": "行高",
          "type": [
            "string",
            "number"
          ]
        },
        "maxWidth": {
          "description": "最大宽度",
          "type": "number"
        },
        "multiLine": {
          "description": "是否支持换行",
          "type": "boolean"
        },
        "spacing": {
          "description": "与相邻元素的水平间距",
          "type": "number"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "字体基线"
        },
        "wordBreak": {
          "$ref": "#/definitions/RichTextWordBreak",
          "description": "换行模式，默认为'break-word'"
        }
      },
      "type": "object"
    },
    "Omit<ITooltipTextTheme<string|IColorKey>,\"autoWidth\">": {
      "properties": {
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ],
          "description": "字体颜色"
        },
        "fontColor": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "type": "string"
            }
          ]
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字体大小",
          "type": "number"
        },
        "fontWeight": {
          "$ref": "#/definitions/StringOrNumber",
          "description": "字重"
        },
        "lineHeight": {
          "description": "行高",
          "type": [
            "string",
            "number"
          ]
        },
        "maxWidth": {
          "description": "最大宽度",
          "type": "number"
        },
        "multiLine": {
          "description": "是否支持换行",
          "type": "boolean"
        },
        "spacing": {
          "description": "与相邻元素的水平间距",
          "type": "number"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "字体基线"
        },
        "wordBreak": {
          "$ref": "#/definitions/RichTextWordBreak",
          "description": "换行模式，默认为'break-word'"
        }
      },
      "type": "object"
    },
    "Omit<ITooltipTheme<string>,\"offset\">": {
      "properties": {
        "keyLabel": {
          "$ref": "#/definitions/Omit<ITooltipTextTheme<string>,\"autoWidth\">",
          "description": "tooltip内容，key字段"
        },
        "panel": {
          "typeof": "function"
        },
        "shape": {
          "typeof": "function"
        },
        "spaceRow": {
          "description": "内容项行间距",
          "type": "number"
        },
        "titleLabel": {
          "$ref": "#/definitions/ITooltipTextTheme<string>",
          "description": "tooltip标题"
        },
        "valueLabel": {
          "$ref": "#/definitions/ITooltipTextTheme<string>",
          "description": "tooltip内容，value字段"
        }
      },
      "type": "object"
    },
    "Omit<IVisualSpecScale<unknown,string>,\"id\">": {
      "properties": {
        "domain": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "items": {
                "typeof": "function"
              },
              "type": "array"
            }
          ]
        },
        "range": {
          "description": "will set to scale.range, it means output of scale",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "specified": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/ScaleType",
          "description": "type of scale"
        }
      },
      "required": [
        "domain",
        "range",
        "type"
      ],
      "type": "object"
    },
    "Omit<LegendItem,\"label\"|\"background\"|\"width\"|\"height\"|\"maxWidth\"|\"shape\"|\"value\"|\"focusIconStyle\">": {
      "properties": {
        "focus": {
          "type": "boolean"
        },
        "padding": {
          "$ref": "#/definitions/Padding"
        },
        "spaceCol": {
          "type": "number"
        },
        "spaceRow": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<LegendTitle,\"style\"|\"background\"|\"textStyle\">": {
      "properties": {
        "align": {
          "enum": [
            "center",
            "end",
            "start"
          ],
          "type": "string"
        },
        "maxWidth": {
          "type": "number"
        },
        "minWidth": {
          "type": "number"
        },
        "padding": {
          "$ref": "#/definitions/Padding"
        },
        "shape": {
          "typeof": "function"
        },
        "space": {
          "type": "number"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Omit<Omit<PagerAttributes,\"total\">&{space?:number;animation?:boolean;animationDuration?:number;animationEasing?:EasingType;},\"textStyle\"|\"handler\">": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "animation": {
          "type": "boolean"
        },
        "animationDuration": {
          "type": "number"
        },
        "animationEasing": {
          "$ref": "#/definitions/EasingType"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "defaultCurrent": {
          "type": "number"
        },
        "disableTriggerEvent": {
          "type": "boolean"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padding": {
          "$ref": "#/definitions/Padding"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "space": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "OnErrorEventHandlerNonNull": {
      "type": "object"
    },
    "OrientType": {
      "enum": [
        "bottom",
        "left",
        "right",
        "top"
      ],
      "type": "string"
    },
    "OrientationType": {
      "enum": [
        "landscape-primary",
        "landscape-secondary",
        "portrait-primary",
        "portrait-secondary"
      ],
      "type": "string"
    },
    "OverlapAttrs": {
      "properties": {
        "avoidBaseMark": {
          "type": "boolean"
        },
        "avoidMarks": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
              },
              "type": "array"
            }
          ]
        },
        "clampForce": {
          "type": "boolean"
        },
        "hideOnHit": {
          "type": "boolean"
        },
        "overlapPadding": {
          "type": "number"
        },
        "size": {
          "typeof": "function"
        },
        "strategy": {
          "items": {
            "$ref": "#/definitions/Strategy"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Padding": {
      "anyOf": [
        {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "type": "number"
        }
      ]
    },
    "ParentNode": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "firstChild",
        "firstElementChild",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "previousSibling",
        "textContent"
      ],
      "type": "object"
    },
    "Partial<ControllerLayout&BaseGraphicAttributes<ISymbolMarkSpec>>": {
      "properties": {
        "key": {
          "$ref": "#/definitions/ControllerTypeEnum"
        },
        "order": {
          "type": "number"
        },
        "position": {
          "enum": [
            "end",
            "start"
          ],
          "type": "string"
        },
        "space": {
          "type": "number"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ISymbolMarkSpec"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IArcGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "type": [
            "string",
            "number"
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "forceShowCap": {
          "type": "boolean"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "innerRadius": {
          "type": "number"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "outerRadius": {
          "type": "number"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padAngle": {
          "type": "number"
        },
        "padRadius": {
          "type": "number"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IAreaGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clipRange": {
          "type": "number"
        },
        "closePath": {
          "type": "boolean"
        },
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "curveType": {
          "$ref": "#/definitions/ICurveType"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "segments": {
          "items": {
            "$ref": "#/definitions/IAreaSegment"
          },
          "type": "array"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IBorderStyle>": {
      "properties": {
        "distance": {
          "type": [
            "string",
            "number"
          ]
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<ICircleGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "radius": {
          "type": "number"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ICrosshairCategoryFieldSpec>": {
      "properties": {
        "bindingAxesIndex": {
          "description": "声明 crosshair 绑定的轴索引，如果没有声明，则会默认绑定所有同 crosshair 位置相对应的轴。",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "defaultSelect": {
          "typeof": "function"
        },
        "label": {
          "$ref": "#/definitions/ICrosshairLabelSpec",
          "description": "crosshair 文本配置"
        },
        "line": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICrosshairLineSpec"
            },
            {
              "$ref": "#/definitions/ICrosshairRectSpec"
            }
          ],
          "description": "crosshair 辅助图形配置"
        },
        "visible": {
          "description": "是否可见",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<ICrosshairValueFieldSpec>": {
      "properties": {
        "label": {
          "$ref": "#/definitions/ICrosshairLabelSpec",
          "description": "crosshair 文本配置"
        },
        "line": {
          "$ref": "#/definitions/ICrosshairLineSpec",
          "description": "crosshair 辅助图形配置"
        },
        "visible": {
          "description": "是否可见",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IGlyphGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "type": "string"
            }
          ]
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IGroupGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IImageGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "repeatX": {
          "$ref": "#/definitions/IRepeatType"
        },
        "repeatY": {
          "$ref": "#/definitions/IRepeatType"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ILabelSpec>": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "centerOffset": {
          "description": "中心点偏移距离",
          "type": "number"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "customLayoutFunc": {
          "typeof": "function"
        },
        "customOverlapFunc": {
          "typeof": "function"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "formatter": {
          "description": "字符串模版\n用{}包裹变量名的字符串模版, 变量名取自数据属性值\n在饼图中支持配置百分比, {_percent_}\neg: 'type={type},value={value},percent={_percent_}'",
          "since": "1.7.0",
          "type": "string"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "labelLayout": {
          "description": "标签布局",
          "enum": [
            "region",
            "series"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "description": "标签位置",
          "type": "string"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "标签样式配置"
        },
        "support3d": {
          "description": "是否支持3D",
          "type": "boolean"
        },
        "textType": {
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ILineGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clipRange": {
          "type": "number"
        },
        "clipRangeByDimension": {
          "$ref": "#/definitions/IClipRangeByDimensionType"
        },
        "closePath": {
          "type": "boolean"
        },
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "curveType": {
          "$ref": "#/definitions/ICurveType"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "segments": {
          "items": {
            "$ref": "#/definitions/ISegment"
          },
          "type": "array"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ILineLikeLabelSpec>": {
      "properties": {
        "animation": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILabelAnimation"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "动画配置"
        },
        "bottom": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表底部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "center": {
          "description": "模块绝对布局下，元素将放置在图表的正中间。注意仅在 layoutType === 'absolute' 时生效，同时将忽略 padding 属性",
          "type": "boolean"
        },
        "centerOffset": {
          "description": "中心点偏移距离",
          "type": "number"
        },
        "clip": {
          "description": "模块是否裁剪超出布局区域外的绘图内容",
          "type": "boolean"
        },
        "customLayoutFunc": {
          "typeof": "function"
        },
        "customOverlapFunc": {
          "typeof": "function"
        },
        "dataFilter": {
          "typeof": "function"
        },
        "formatMethod": {
          "typeof": "function"
        },
        "formatter": {
          "description": "字符串模版\n用{}包裹变量名的字符串模版, 变量名取自数据属性值\n在饼图中支持配置百分比, {_percent_}\neg: 'type={type},value={value},percent={_percent_}'",
          "since": "1.7.0",
          "type": "string"
        },
        "height": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：高度"
        },
        "id": {
          "$ref": "#/definitions/StringOrNumber"
        },
        "interactive": {
          "description": "是否支持交互。@default false",
          "type": "boolean"
        },
        "labelLayout": {
          "description": "标签布局",
          "enum": [
            "region",
            "series"
          ],
          "type": "string"
        },
        "layoutLevel": {
          "description": "布局顺序等级，等级越大的，越优先布局\n比如顶部同时有标题和图例的场景，期望标题先放在顶部，然后放置图例。",
          "type": "number"
        },
        "layoutType": {
          "$ref": "#/definitions/ILayoutType",
          "description": "当前模块的布局类型，配置为 absolute 的话，当前元素会以图表左上角为原点进行绝对布局"
        },
        "left": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表左侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "maxHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大高度"
        },
        "maxWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最大宽度"
        },
        "minHeight": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小高度"
        },
        "minWidth": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局最小宽度"
        },
        "noOuterPadding": {
          "description": "是否按照 orient 自动修改 padding，隐藏位于外侧的 padding。目前只在组件上生效",
          "type": "boolean"
        },
        "offset": {
          "description": "标签与其对应数据图元的间距",
          "type": "number"
        },
        "offsetX": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：X"
        },
        "offsetY": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局位置偏移：Y"
        },
        "orient": {
          "$ref": "#/definitions/IOrientType",
          "description": "模块布局位置"
        },
        "overlap": {
          "anyOf": [
            {
              "$ref": "#/definitions/OverlapAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签防重叠配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "模块的布局间距"
        },
        "position": {
          "$ref": "#/definitions/Functional<\"center\"|\"left\"|\"right\"|\"bottom\"|\"top\"|\"top-right\"|\"top-left\"|\"bottom-right\"|\"bottom-left\">",
          "description": "标签位置",
          "since": "1.6.0\n支持以函数形式配置"
        },
        "regionId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的region id"
        },
        "regionIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "组件关联的region索引"
        },
        "right": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表右侧的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "seriesId": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/StringOrNumber"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "组件关联的系列id"
        },
        "seriesIndex": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "组件关联的系列索引"
        },
        "smartInvert": {
          "anyOf": [
            {
              "$ref": "#/definitions/SmartInvertAttrs"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ],
          "description": "标签智能反色配置"
        },
        "state": {
          "typeof": "function"
        },
        "style": {
          "$ref": "#/definitions/ConvertToMarkStyleSpec<ITextMarkSpec>",
          "description": "标签样式配置"
        },
        "support3d": {
          "description": "是否支持3D",
          "type": "boolean"
        },
        "textType": {
          "type": "string"
        },
        "top": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块绝对布局下，与图表顶部的距离。注意仅在 layoutType === 'absolute' 时生效"
        },
        "visible": {
          "description": "默认不显示标签",
          "type": "boolean"
        },
        "width": {
          "$ref": "#/definitions/ILayoutNumber",
          "description": "模块的布局大小：宽度"
        },
        "zIndex": {
          "description": "模块的展示层级，当2个模块重叠时，层级较大的展示在上方",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IArc3dMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IArc3dMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IArc3dMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IArcMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IArcMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IArcMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IAreaMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IAreaMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IAreaMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IBoxPlotMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IBoxPlotMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IBoxPlotMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ILineMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ILineMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ILineMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IPathMarkSpec>&PinMarkSpec>": {
      "properties": {
        "height": {
          "description": "高度",
          "type": "number"
        },
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "isOnCenter": {
          "description": "是否定位于极坐标系的中心，默认为 true。如果为 false，则位置受 innerRadius 影响",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IPathMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IPathMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "width": {
          "description": "宽度",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IPathMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IPathMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IPathMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IPolygonMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IPolygonMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IPolygonMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IProgressArcMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IProgressArcMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IProgressArcMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IPyramid3dMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IPyramid3dMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IPyramid3dMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IRect3dMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IRect3dMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IRect3dMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IRectMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IRectMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IRectMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IRectMarkSpec|IPathMarkSpec>&PointerMarkSpec>": {
      "properties": {
        "center": {
          "description": "中心点坐标（0~1）",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "height": {
          "description": "指针长度比例（0~1）（为空则挂载 radius）",
          "type": "number"
        },
        "innerPadding": {
          "description": "指针靠近圆心的一端离圆心的距离",
          "type": "number"
        },
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "isOnCenter": {
          "description": "是否定位于极坐标系的中心，默认为 true。如果为 false，则位置受 innerRadius 影响",
          "type": "boolean"
        },
        "outerPadding": {
          "description": "指针靠近边缘的一端离边缘的距离",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IRectMarkSpec|IPathMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "anyOf": [
            {
              "$ref": "#/definitions/IRectMarkSpec"
            },
            {
              "$ref": "#/definitions/IPathMarkSpec"
            }
          ],
          "description": "默认样式设置"
        },
        "type": {
          "enum": [
            "path",
            "rect"
          ],
          "type": "string"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        },
        "width": {
          "description": "指针宽度比例（0~1）",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<IRuleMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,IRuleMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/IRuleMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ISymbolMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ISymbolMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ISymbolMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ITextMarkSpec>&{offset?:number;position?:IWaterfallStackLabelPosition;}>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "offset": {
          "type": "number"
        },
        "position": {
          "$ref": "#/definitions/IWaterfallStackLabelPosition"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ITextMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ITextMarkSpec>&{offset?:number;position?:string;}>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "offset": {
          "type": "number"
        },
        "position": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ITextMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ITextMarkSpec>&{padding?:number|number[];}>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "padding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "state": {
          "$ref": "#/definitions/Record<string,ITextMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<ITextMarkSpec>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,ITextMarkSpec>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "$ref": "#/definitions/ITextMarkSpec",
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<Omit<IPathMarkSpec,\"smoothScale\">>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,Omit<IPathMarkSpec,\"smoothScale\">>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "additionalProperties": false,
          "description": "默认样式设置",
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {}
          },
          "type": "object"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IMarkTheme<any>>": {
      "properties": {
        "interactive": {
          "description": "可交互的开关",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/Record<string,any>",
          "description": "不同状态下的样式配置"
        },
        "style": {
          "description": "默认样式设置"
        },
        "visible": {
          "description": "mark 层 是否显示配置",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Partial<IPathGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPath": {
          "typeof": "function"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "type": "string"
            }
          ]
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IPolygonGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "closePath": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IPolygonMarkSpec>": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置，支持数组配置，数组的顺序同组成 polygon 的顺序对应"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPoint_1"
          },
          "type": "array"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IRect3dGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "length": {
          "type": "number"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IRectGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IRectMarkSpec>": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "x1": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "y1": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<IStageParams>": {
      "properties": {
        "afterRender": {
          "typeof": "function"
        },
        "autoRender": {
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IColor"
        },
        "beforeRender": {
          "typeof": "function"
        },
        "canvas": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "canvasControled": {
          "type": "boolean"
        },
        "container": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "disableDirtyBounds": {
          "type": "boolean"
        },
        "dpr": {
          "type": "number"
        },
        "enableHtmlAttribute": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLElement"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "enableLayout": {
          "type": "boolean"
        },
        "enableScroll": {
          "type": "boolean"
        },
        "event": {
          "typeof": "function"
        },
        "height": {
          "type": "number"
        },
        "interactiveLayer": {
          "type": "boolean"
        },
        "optimize": {
          "typeof": "function"
        },
        "pluginList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "poptip": {
          "type": "boolean"
        },
        "renderStyle": {
          "type": "string"
        },
        "ticker": {
          "$ref": "#/definitions/ITicker"
        },
        "title": {
          "type": "string"
        },
        "viewBox": {
          "$ref": "#/definitions/IBoundsLike"
        },
        "width": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ISymbolGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "size": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "symbolType": {
          "type": "string"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ITextGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "direction": {
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "ellipsis": {
          "type": [
            "string",
            "boolean"
          ]
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontSize": {
          "type": "number"
        },
        "fontStyle": {
          "type": "string"
        },
        "fontVariant": {
          "type": "string"
        },
        "fontWeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "heightLimit": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "ignoreBuf": {
          "type": "boolean"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineClamp": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineHeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineThrough": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxLineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleIn3d": {
          "type": "boolean"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlignType"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaselineType"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "underline": {
          "type": "number"
        },
        "verticalMode": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "whiteSpace": {
          "enum": [
            "no-wrap",
            "normal"
          ],
          "type": "string"
        },
        "wordBreak": {
          "enum": [
            "break-all",
            "break-word"
          ],
          "type": "string"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ITextMarkSpec>": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "beta": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor_1"
        },
        "direction": {
          "default": "'horizontal'",
          "description": "文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "dx": {
          "description": "x 方向偏移",
          "type": "number"
        },
        "dy": {
          "description": "y 方向偏移",
          "type": "number"
        },
        "ellipsis": {
          "description": "文字超出 maxLineWidth 后的省略符",
          "type": "string"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "fontFamily": {
          "description": "字体",
          "type": "string"
        },
        "fontSize": {
          "description": "字号",
          "type": "number"
        },
        "fontStyle": {
          "description": "字体样式",
          "type": "string"
        },
        "fontWeight": {
          "$ref": "#/definitions/FontWeight",
          "description": "字重"
        },
        "innerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "内边框"
        },
        "lineBreak": {
          "type": "string"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineHeight": {
          "description": "行高（1.3.1 版本新增字符串类型表示比例值，如\"150%\"）",
          "since": "1.3.1",
          "type": [
            "string",
            "number"
          ]
        },
        "lineThrough": {
          "description": "中划线",
          "type": "boolean"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxLineWidth": {
          "description": "文字的最大长度",
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/IBorder",
          "description": "外边框"
        },
        "pickMode": {
          "description": "选择模式，精确模式，粗糙模式（包围盒模式），自定义模式",
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "poptip": {
          "$ref": "#/definitions/PopTipAttributes",
          "description": "poptip 相关配置"
        },
        "scaleCenter": {
          "description": "图形缩放中心",
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "since": "1.4.0\n可以配置固定坐标，例如 [100, 100]；或者百分比坐标，例如 ['50%', '50%']，代表以图元中心为缩放中心",
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "items": {
                "type": [
                  "number",
                  "boolean"
                ]
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "strokeOpacity": {
          "type": "number"
        },
        "text": {
          "anyOf": [
            {
              "$ref": "#/definitions/Function"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/IRichTextCharacter"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "description": "文字内容"
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlign",
          "description": "文字对齐方式"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaseLine",
          "description": "文字居中方式"
        },
        "texture": {
          "description": "纹理的类型",
          "type": "string"
        },
        "textureColor": {
          "description": "纹理的颜色",
          "type": "string"
        },
        "texturePadding": {
          "description": "纹理之间空隙的大小",
          "type": "number"
        },
        "textureSize": {
          "description": "纹理单元的大小",
          "type": "number"
        },
        "type": {
          "default": "'text'",
          "description": "文字类型\n可选，'html', 'rich', 'text'",
          "enum": [
            "html",
            "rich",
            "text"
          ],
          "type": "string"
        },
        "underline": {
          "description": "下划线",
          "type": "boolean"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<ITooltipHandlerSpec>": {
      "properties": {
        "hideTooltip": {
          "typeof": "function"
        },
        "isTooltipShown": {
          "typeof": "function"
        },
        "release": {
          "typeof": "function"
        },
        "showTooltip": {
          "typeof": "function"
        }
      },
      "type": "object"
    },
    "Partial<Omit<IChartSpec,\"player\">>": {
      "properties": {
        "animationThreshold": {
          "description": "自动关闭动画的阀值，对应的是单系列data的长度",
          "since": "1.2.0",
          "type": "number"
        },
        "autoFit": {
          "description": "图表宽高是否自适应容器，浏览器环境下默认为 true。\n该配置的优先级高于构造函数中的 autoFit 配置。\n如果用户配置了 width，则以用户配置的 width 为准，height 同理。",
          "type": "boolean"
        },
        "background": {
          "$ref": "#/definitions/IBackgroundSpec",
          "description": "图表背景色配置，优先级高于构造函数中的 background 配置"
        },
        "brush": {
          "$ref": "#/definitions/IBrushSpec",
          "description": "框选配置"
        },
        "color": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/Omit<IVisualSpecScale<unknown,string>,\"id\">"
            }
          ],
          "description": "图表色系配置"
        },
        "crosshair": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICartesianCrosshairSpec"
            },
            {
              "$ref": "#/definitions/IPolarCrosshairSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/ICrosshairSpec"
              },
              "type": "array"
            }
          ],
          "description": "十字辅助线配置"
        },
        "customMark": {
          "description": "自定义mark",
          "items": {
            "$ref": "#/definitions/ICustomMarkSpec<keyofIBuildinMarkSpec>"
          },
          "type": "array"
        },
        "data": {
          "$ref": "#/definitions/IData",
          "description": "数据"
        },
        "dataZoom": {
          "anyOf": [
            {
              "$ref": "#/definitions/IDataZoomSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IDataZoomSpec"
              },
              "type": "array"
            }
          ],
          "description": "缩略轴配置"
        },
        "height": {
          "description": "画布高度",
          "type": "number"
        },
        "hover": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "hover 交互"
        },
        "layout": {
          "$ref": "#/definitions/ILayoutSpec",
          "description": "布局配置"
        },
        "legends": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorLegendSpec"
            },
            {
              "$ref": "#/definitions/ISizeLegendSpec"
            },
            {
              "$ref": "#/definitions/IDiscreteLegendSpec",
              "description": "spec"
            },
            {
              "items": {
                "$ref": "#/definitions/ILegendSpec"
              },
              "type": "array"
            }
          ],
          "description": "图例配置"
        },
        "padding": {
          "$ref": "#/definitions/ILayoutPaddingSpec",
          "description": "图表整体 padding 设置"
        },
        "region": {
          "description": "region配置",
          "items": {
            "$ref": "#/definitions/IRegionSpec"
          },
          "type": "array"
        },
        "scales": {
          "description": "全局 scale 配置",
          "items": {
            "$ref": "#/definitions/IVisualSpecScale<unknown,unknown>"
          },
          "type": "array"
        },
        "scrollBar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScrollBarSpec"
            },
            {
              "items": {
                "$ref": "#/definitions/IScrollBarSpec"
              },
              "type": "array"
            }
          ],
          "description": "滚动条配置"
        },
        "select": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "select 交互"
        },
        "series": {
          "description": "仅在组合图中使用, 文档中除组合图外均未透出该配置",
          "items": {
            "$ref": "#/definitions/ISeriesSpec"
          },
          "type": "array"
        },
        "seriesStyle": {
          "description": "仅在图表配置了seriesField时生效",
          "items": {
            "$ref": "#/definitions/ISeriesStyleItem"
          },
          "type": "array"
        },
        "stackInverse": {
          "default": false,
          "description": "堆积时是否逆序",
          "since": "1.4.0",
          "type": "boolean"
        },
        "theme": {
          "anyOf": [
            {
              "$ref": "#/definitions/Omit<ITheme,\"name\">"
            },
            {
              "type": "string"
            }
          ],
          "description": "图表上的主题定义。\n可以直接配置主题名，前提是该主题名已经注册"
        },
        "title": {
          "$ref": "#/definitions/ITitleSpec",
          "description": "图表标题配置"
        },
        "tooltip": {
          "$ref": "#/definitions/ITooltipSpec",
          "description": "tooltip配置"
        },
        "type": {
          "description": "图表类型",
          "type": "string"
        },
        "width": {
          "description": "画布宽度",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<Omit<Partial<ITextGraphicAttribute>,\"fill\">>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "direction": {
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "ellipsis": {
          "type": [
            "string",
            "boolean"
          ]
        },
        "fillOpacity": {
          "type": "number"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontSize": {
          "type": "number"
        },
        "fontStyle": {
          "type": "string"
        },
        "fontVariant": {
          "type": "string"
        },
        "fontWeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "heightLimit": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "ignoreBuf": {
          "type": "boolean"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineClamp": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineHeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineThrough": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxLineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleIn3d": {
          "type": "boolean"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlignType"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaselineType"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "underline": {
          "type": "number"
        },
        "verticalMode": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "whiteSpace": {
          "enum": [
            "no-wrap",
            "normal"
          ],
          "type": "string"
        },
        "wordBreak": {
          "enum": [
            "break-all",
            "break-word"
          ],
          "type": "string"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<Omit<{visible:boolean;}&Partial<IRectGraphicAttribute>&Partial<IGraphicAttribute>&Partial<ISymbolAttribute>&{space?:number;},\"shadowColor\"|\"fill\"|\"stroke\">>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "size": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "space": {
          "type": "number"
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "symbolType": {
          "type": "string"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<Partial<IGraphicAttribute>>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Partial<Record<\"area\",false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "area": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<\"bar\",false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "bar": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<\"funnel\",false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "funnel": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<\"rangeColumn\",false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "rangeColumn": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<\"rose\",false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "rose": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<CirclePackingMark,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "leaf": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "nonLeaf": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "nonLeafLabel": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<CircularProgressMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "progress": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "track": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<CorrelationMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "point": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<GaugeMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "segment": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "track": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<GaugePointerMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "pin": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "pinBackground": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "pointer": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<HeatmapMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "cell": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<LineMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "line": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "point": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<PieMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "labelLine": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "pie": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<RadarMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "area": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "line": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "point": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<SankeyMark,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "link": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "node": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<ScatterMarks,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "point": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<SeriesTypeEnum,ColorScheme>>": {
      "properties": {
        "area": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar3d": {
          "$ref": "#/definitions/ColorScheme"
        },
        "boxPlot": {
          "$ref": "#/definitions/ColorScheme"
        },
        "circlePacking": {
          "$ref": "#/definitions/ColorScheme"
        },
        "circularProgress": {
          "$ref": "#/definitions/ColorScheme"
        },
        "correlation": {
          "$ref": "#/definitions/ColorScheme"
        },
        "dot": {
          "$ref": "#/definitions/ColorScheme"
        },
        "funnel": {
          "$ref": "#/definitions/ColorScheme"
        },
        "funnel3d": {
          "$ref": "#/definitions/ColorScheme"
        },
        "gauge": {
          "$ref": "#/definitions/ColorScheme"
        },
        "gaugePointer": {
          "$ref": "#/definitions/ColorScheme"
        },
        "geo": {
          "$ref": "#/definitions/ColorScheme"
        },
        "heatmap": {
          "$ref": "#/definitions/ColorScheme"
        },
        "line": {
          "$ref": "#/definitions/ColorScheme"
        },
        "linearProgress": {
          "$ref": "#/definitions/ColorScheme"
        },
        "link": {
          "$ref": "#/definitions/ColorScheme"
        },
        "map": {
          "$ref": "#/definitions/ColorScheme"
        },
        "pie": {
          "$ref": "#/definitions/ColorScheme"
        },
        "pie3d": {
          "$ref": "#/definitions/ColorScheme"
        },
        "radar": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeArea": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn3d": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rose": {
          "$ref": "#/definitions/ColorScheme"
        },
        "sankey": {
          "$ref": "#/definitions/ColorScheme"
        },
        "scatter": {
          "$ref": "#/definitions/ColorScheme"
        },
        "sunburst": {
          "$ref": "#/definitions/ColorScheme"
        },
        "treemap": {
          "$ref": "#/definitions/ColorScheme"
        },
        "waterfall": {
          "$ref": "#/definitions/ColorScheme"
        },
        "wordCloud": {
          "$ref": "#/definitions/ColorScheme"
        },
        "wordCloud3d": {
          "$ref": "#/definitions/ColorScheme"
        }
      },
      "type": "object"
    },
    "Partial<Record<SeriesTypeForThemeEnum,ColorScheme>>": {
      "properties": {
        "area_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "area_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar3d_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar3d_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "bar_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "boxPlot_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "boxPlot_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "line_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "line_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "linearProgress_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "linearProgress_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeArea_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeArea_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn3d_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn3d_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "rangeColumn_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "sankey_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "sankey_vertical": {
          "$ref": "#/definitions/ColorScheme"
        },
        "waterfall_horizontal": {
          "$ref": "#/definitions/ColorScheme"
        },
        "waterfall_vertical": {
          "$ref": "#/definitions/ColorScheme"
        }
      },
      "type": "object"
    },
    "Partial<Record<SunburstMark,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "arc": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "label": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<TreemapMark,false|IAnimationConfig|IAnimationConfig[]>>": {
      "properties": {
        "leaf": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        },
        "nonLeaf": {
          "anyOf": [
            {
              "$ref": "#/definitions/IAnimationTimeline"
            },
            {
              "$ref": "#/definitions/IAnimationTypeConfig"
            },
            {
              "items": {
                "$ref": "#/definitions/IAnimationConfig"
              },
              "type": "array"
            },
            {
              "const": false,
              "type": "boolean"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partial<Record<string,false|IAnimationConfig|IAnimationConfig[]>>": {
      "type": "object"
    },
    "Performance": {
      "properties": {
        "eventCounts": {
          "$ref": "#/definitions/EventCounts"
        },
        "navigation": {
          "$ref": "#/definitions/PerformanceNavigation"
        },
        "onresourcetimingbufferfull": {
          "typeof": "function"
        },
        "timeOrigin": {
          "type": "number"
        },
        "timing": {
          "$ref": "#/definitions/PerformanceTiming"
        }
      },
      "required": [
        "eventCounts",
        "navigation",
        "onresourcetimingbufferfull",
        "timeOrigin",
        "timing"
      ],
      "type": "object"
    },
    "PerformanceNavigation": {
      "properties": {
        "TYPE_BACK_FORWARD": {
          "type": "number"
        },
        "TYPE_NAVIGATE": {
          "type": "number"
        },
        "TYPE_RELOAD": {
          "type": "number"
        },
        "TYPE_RESERVED": {
          "type": "number"
        },
        "redirectCount": {
          "type": "number"
        },
        "type": {
          "type": "number"
        }
      },
      "required": [
        "TYPE_BACK_FORWARD",
        "TYPE_NAVIGATE",
        "TYPE_RELOAD",
        "TYPE_RESERVED",
        "redirectCount",
        "type"
      ],
      "type": "object"
    },
    "PerformanceTiming": {
      "properties": {
        "connectEnd": {
          "type": "number"
        },
        "connectStart": {
          "type": "number"
        },
        "domComplete": {
          "type": "number"
        },
        "domContentLoadedEventEnd": {
          "type": "number"
        },
        "domContentLoadedEventStart": {
          "type": "number"
        },
        "domInteractive": {
          "type": "number"
        },
        "domLoading": {
          "type": "number"
        },
        "domainLookupEnd": {
          "type": "number"
        },
        "domainLookupStart": {
          "type": "number"
        },
        "fetchStart": {
          "type": "number"
        },
        "loadEventEnd": {
          "type": "number"
        },
        "loadEventStart": {
          "type": "number"
        },
        "navigationStart": {
          "type": "number"
        },
        "redirectEnd": {
          "type": "number"
        },
        "redirectStart": {
          "type": "number"
        },
        "requestStart": {
          "type": "number"
        },
        "responseEnd": {
          "type": "number"
        },
        "responseStart": {
          "type": "number"
        },
        "secureConnectionStart": {
          "type": "number"
        },
        "unloadEventEnd": {
          "type": "number"
        },
        "unloadEventStart": {
          "type": "number"
        }
      },
      "required": [
        "connectEnd",
        "connectStart",
        "domComplete",
        "domContentLoadedEventEnd",
        "domContentLoadedEventStart",
        "domInteractive",
        "domLoading",
        "domainLookupEnd",
        "domainLookupStart",
        "fetchStart",
        "loadEventEnd",
        "loadEventStart",
        "navigationStart",
        "redirectEnd",
        "redirectStart",
        "requestStart",
        "responseEnd",
        "responseStart",
        "secureConnectionStart",
        "unloadEventEnd",
        "unloadEventStart"
      ],
      "type": "object"
    },
    "Permissions": {
      "type": "object"
    },
    "Pick<IRectMarkSpec,\"fillOpacity\"|\"fill\"|\"cornerRadius\">": {
      "properties": {
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "圆角配置。\n1. 如果传入数值，则统一为四个角设置圆角\n2. 如果传入数组，则分别为 [上左, 上右, 下右, 下左]"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/IColorKey"
            },
            {
              "$ref": "#/definitions/IGradientLinear"
            },
            {
              "$ref": "#/definitions/IGradientRadial"
            },
            {
              "$ref": "#/definitions/IGradientConical"
            },
            {
              "$ref": "#/definitions/IVisualScale"
            },
            {
              "typeof": "function"
            },
            {
              "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
            },
            {
              "const": false,
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "fillOpacity": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "PlayerType": {
      "description": "播放器类型\n连续 | 离散.",
      "enum": [
        "continuous",
        "discrete"
      ],
      "type": "string"
    },
    "PopTipAttributes": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Omit<IGroupGraphicAttribute,\"background\">"
        }
      ]
    },
    "PredefinedColorSpace": {
      "enum": [
        "display-p3",
        "srgb"
      ],
      "type": "string"
    },
    "ProcessingInstruction": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "baseURI": {
          "type": "string"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "data": {
          "type": "string"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "length": {
          "type": "number"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "sheet": {
          "$ref": "#/definitions/CSSStyleSheet"
        },
        "target": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "baseURI",
        "childNodes",
        "data",
        "firstChild",
        "isConnected",
        "lastChild",
        "length",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "previousElementSibling",
        "previousSibling",
        "sheet",
        "target",
        "textContent"
      ],
      "type": "object"
    },
    "Promise<FontFaceSet>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        }
      },
      "required": [
        "__@toStringTag@13831"
      ],
      "type": "object"
    },
    "Promise<ServiceWorkerRegistration>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        }
      },
      "required": [
        "__@toStringTag@13831"
      ],
      "type": "object"
    },
    "Promise<any>": {
      "properties": {
        "__@toStringTag@13831": {
          "type": "string"
        }
      },
      "required": [
        "__@toStringTag@13831"
      ],
      "type": "object"
    },
    "Record<string,ConvertToMarkStyleSpec<IGroupMarkSpec>|IMarkStateSpec<IGroupMarkSpec>>": {
      "type": "object"
    },
    "Record<string,ConvertToMarkStyleSpec<ILineMarkSpec>|IMarkStateSpec<ILineMarkSpec>>": {
      "type": "object"
    },
    "Record<string,ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>|IMarkStateSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IGroupMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>>": {
      "type": "object"
    },
    "Record<string,ConvertToMarkStyleSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>|IMarkStateSpec<IRuleMarkSpec|ILineMarkSpec|ITextMarkSpec|IRectMarkSpec|IImageMarkSpec|IArcMarkSpec|IPathMarkSpec|IBoxPlotMarkSpec|ISymbolMarkSpec|IAreaMarkSpec|IRect3dMarkSpec|IArc3dMarkSpec|ILinkPathMarkSpec|IRippleMarkSpec|IProgressArcMarkSpec|IPolygonMarkSpec|IPyramid3dMarkSpec>>": {
      "type": "object"
    },
    "Record<string,ConvertToMarkStyleSpec<ITextMarkSpec>|IMarkStateSpec<ITextMarkSpec>>": {
      "type": "object"
    },
    "Record<string,IArc3dMarkSpec>": {
      "type": "object"
    },
    "Record<string,IArcMarkSpec>": {
      "type": "object"
    },
    "Record<string,IAreaMarkSpec>": {
      "type": "object"
    },
    "Record<string,IBoxPlotMarkSpec>": {
      "type": "object"
    },
    "Record<string,IFieldsMeta>": {
      "type": "object"
    },
    "Record<string,ILineMarkSpec>": {
      "type": "object"
    },
    "Record<string,IPathMarkSpec>": {
      "type": "object"
    },
    "Record<string,IPolygonMarkSpec>": {
      "type": "object"
    },
    "Record<string,IProgressArcMarkSpec>": {
      "type": "object"
    },
    "Record<string,IPyramid3dMarkSpec>": {
      "type": "object"
    },
    "Record<string,IRect3dMarkSpec>": {
      "type": "object"
    },
    "Record<string,IRectMarkSpec>": {
      "type": "object"
    },
    "Record<string,IRectMarkSpec|IPathMarkSpec>": {
      "type": "object"
    },
    "Record<string,IRuleMarkSpec>": {
      "type": "object"
    },
    "Record<string,ISymbolMarkSpec>": {
      "type": "object"
    },
    "Record<string,ITextMarkSpec>": {
      "type": "object"
    },
    "Record<string,Omit<IPathMarkSpec,\"smoothScale\">>": {
      "type": "object"
    },
    "Record<string,Partial<IGlyphGraphicAttribute>>": {
      "type": "object"
    },
    "Record<string,Partial<IGroupGraphicAttribute>>": {
      "type": "object"
    },
    "Record<string,Partial<Partial<IGraphicAttribute>>>": {
      "type": "object"
    },
    "Record<string,any>": {
      "type": "object"
    },
    "Required<IArcGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cap": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "boolean"
                },
                {
                  "type": "boolean"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "type": [
            "string",
            "number"
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "forceShowCap": {
          "type": "boolean"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "innerRadius": {
          "type": "number"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "outerRadius": {
          "type": "number"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "padAngle": {
          "type": "number"
        },
        "padRadius": {
          "type": "number"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "cap",
        "childrenPickable",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "endAngle",
        "fill",
        "fillOpacity",
        "forceShowCap",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "innerRadius",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "outerRadius",
        "overflow",
        "padAngle",
        "padRadius",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "startAngle",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IAreaGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clipRange": {
          "type": "number"
        },
        "closePath": {
          "type": "boolean"
        },
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "curveType": {
          "$ref": "#/definitions/ICurveType"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "segments": {
          "items": {
            "$ref": "#/definitions/IAreaSegment"
          },
          "type": "array"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "clipRange",
        "closePath",
        "connectedStyle",
        "connectedType",
        "connectedX",
        "connectedY",
        "cursor",
        "curveType",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "points",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "segments",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<ICircleGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "endAngle": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "radius": {
          "type": "number"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "startAngle": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "endAngle",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "radius",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "startAngle",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IGlyphGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "type": "string"
            }
          ]
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "clip",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "path",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IGroupGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alignContent": {
          "enum": [
            "center",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "alignItems": {
          "enum": [
            "center",
            "flex-end",
            "flex-start"
          ],
          "type": "string"
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clip": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "display": {
          "enum": [
            "flex",
            "relative"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "flexDirection": {
          "enum": [
            "column",
            "column-reverse",
            "row",
            "row-reverse"
          ],
          "type": "string"
        },
        "flexWrap": {
          "enum": [
            "nowrap",
            "wrap"
          ],
          "type": "string"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "justifyContent": {
          "enum": [
            "center",
            "flex-end",
            "flex-start",
            "space-around",
            "space-between"
          ],
          "type": "string"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "items": {
            "$ref": "#/definitions/IGraphic<Partial<IGraphicAttribute>>"
          },
          "type": "array"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "visibleAll": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alignContent",
        "alignItems",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "clip",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "display",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "flexDirection",
        "flexWrap",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "innerBorder",
        "justifyContent",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "path",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "visibleAll",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IImageGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "repeatX": {
          "$ref": "#/definitions/IRepeatType"
        },
        "repeatY": {
          "$ref": "#/definitions/IRepeatType"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "image",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "repeatX",
        "repeatY",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<ILineGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "clipRange": {
          "type": "number"
        },
        "clipRangeByDimension": {
          "$ref": "#/definitions/IClipRangeByDimensionType"
        },
        "closePath": {
          "type": "boolean"
        },
        "connectedStyle": {
          "typeof": "function"
        },
        "connectedType": {
          "enum": [
            "connect",
            "none",
            "zero"
          ],
          "type": "string"
        },
        "connectedX": {
          "type": "number"
        },
        "connectedY": {
          "type": "number"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "curveType": {
          "$ref": "#/definitions/ICurveType"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "segments": {
          "items": {
            "$ref": "#/definitions/ISegment"
          },
          "type": "array"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "clipRange",
        "clipRangeByDimension",
        "closePath",
        "connectedStyle",
        "connectedType",
        "connectedX",
        "connectedY",
        "cursor",
        "curveType",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "points",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "segments",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IPathGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPath": {
          "typeof": "function"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "path": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICustomPath2D"
            },
            {
              "type": "string"
            }
          ]
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cursor",
        "customPath",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "path",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IPolygonGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "closePath": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "points": {
          "items": {
            "$ref": "#/definitions/IPointLike"
          },
          "type": "array"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "closePath",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "points",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IRect3dGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "length": {
          "type": "number"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "length",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IRectGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IRichTextGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "ellipsis": {
          "type": [
            "string",
            "boolean"
          ]
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "layoutDirection": {
          "$ref": "#/definitions/RichTextLayoutDirectionType"
        },
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxHeight": {
          "type": "number"
        },
        "maxWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "singleLine": {
          "type": "boolean"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "textAlign": {
          "$ref": "#/definitions/RichTextGlobalAlignType"
        },
        "textBaseline": {
          "$ref": "#/definitions/RichTextGlobalBaselineType"
        },
        "textConfig": {
          "items": {
            "$ref": "#/definitions/IRichTextCharacter"
          },
          "type": "array"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "verticalDirection": {
          "$ref": "#/definitions/RichTextVerticalDirection"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "wordBreak": {
          "$ref": "#/definitions/RichTextWordBreak"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "ellipsis",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "layoutDirection",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "maxHeight",
        "maxWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "singleLine",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "textAlign",
        "textBaseline",
        "textConfig",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "verticalDirection",
        "visible",
        "width",
        "wordBreak",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<IRichTextIconGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundFill": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "backgroundFillOpacity": {
          "type": "number"
        },
        "backgroundHeight": {
          "type": "number"
        },
        "backgroundMode": {
          "type": "number"
        },
        "backgroundRadius": {
          "type": "number"
        },
        "backgroundShowMode": {
          "enum": [
            "always",
            "hover",
            "never"
          ],
          "type": "string"
        },
        "backgroundStroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "backgroundStrokeOpacity": {
          "type": "number"
        },
        "backgroundWidth": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cornerRadius": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "direction": {
          "$ref": "#/definitions/RichTextLayoutDirectionType"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "type": "string"
            }
          ]
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "margin": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "repeatX": {
          "$ref": "#/definitions/IRepeatType"
        },
        "repeatY": {
          "$ref": "#/definitions/IRepeatType"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "textAlign": {
          "$ref": "#/definitions/CanvasTextAlign"
        },
        "textBaseline": {
          "$ref": "#/definitions/CanvasTextBaseline"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundFill",
        "backgroundFillOpacity",
        "backgroundHeight",
        "backgroundMode",
        "backgroundRadius",
        "backgroundShowMode",
        "backgroundStroke",
        "backgroundStrokeOpacity",
        "backgroundWidth",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cornerRadius",
        "cursor",
        "customPickShape",
        "direction",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "height",
        "html",
        "id",
        "image",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "margin",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "repeatX",
        "repeatY",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "textAlign",
        "textBaseline",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "width",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<ISymbolGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "size": {
          "anyOf": [
            {
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "symbolType": {
          "type": "string"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cursor",
        "customPickShape",
        "dx",
        "dy",
        "dz",
        "fill",
        "fillOpacity",
        "globalCompositeOperation",
        "globalZIndex",
        "html",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineDash",
        "lineDashOffset",
        "lineJoin",
        "lineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "size",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "symbolType",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "visible",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "Required<ITextGraphicAttribute>": {
      "properties": {
        "_debug_bounds": {
          "anyOf": [
            {
              "typeof": "function"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "alpha": {
          "type": "number"
        },
        "anchor": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "anchor3d": {
          "anyOf": [
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            {
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 3,
              "minItems": 3,
              "type": "array"
            }
          ]
        },
        "angle": {
          "type": "number"
        },
        "background": {
          "anyOf": [
            {
              "$ref": "#/definitions/HTMLCanvasElement"
            },
            {
              "$ref": "#/definitions/HTMLImageElement"
            },
            {
              "typeof": "function"
            },
            {
              "type": "string"
            }
          ]
        },
        "backgroundMode": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        },
        "blur": {
          "type": "number"
        },
        "boundsMode": {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        },
        "boundsPadding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ]
        },
        "childrenPickable": {
          "type": "boolean"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "customPickShape": {
          "typeof": "function"
        },
        "direction": {
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        },
        "dx": {
          "type": "number"
        },
        "dy": {
          "type": "number"
        },
        "dz": {
          "type": "number"
        },
        "ellipsis": {
          "type": [
            "string",
            "boolean"
          ]
        },
        "fill": {
          "$ref": "#/definitions/IFillType"
        },
        "fillOpacity": {
          "type": "number"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontSize": {
          "type": "number"
        },
        "fontStyle": {
          "type": "string"
        },
        "fontVariant": {
          "type": "string"
        },
        "fontWeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "globalCompositeOperation": {
          "enum": [
            "",
            "color",
            "color-burn",
            "color-dodge",
            "copy",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "lighten",
            "lighter",
            "luminosity",
            "multiply",
            "overlay",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "source-over",
            "xor"
          ],
          "type": "string"
        },
        "globalZIndex": {
          "type": "number"
        },
        "heightLimit": {
          "type": "number"
        },
        "html": {
          "typeof": "function"
        },
        "ignoreBuf": {
          "type": "boolean"
        },
        "innerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "keepDirIn3d": {
          "type": "boolean"
        },
        "layout": {},
        "lineCap": {
          "$ref": "#/definitions/CanvasLineCap"
        },
        "lineClamp": {
          "type": "number"
        },
        "lineDash": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "lineDashOffset": {
          "type": "number"
        },
        "lineHeight": {
          "type": [
            "string",
            "number"
          ]
        },
        "lineJoin": {
          "$ref": "#/definitions/CanvasLineJoin"
        },
        "lineThrough": {
          "type": "number"
        },
        "lineWidth": {
          "type": "number"
        },
        "maxLineWidth": {
          "type": "number"
        },
        "miterLimit": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "outerBorder": {
          "$ref": "#/definitions/Partial<IBorderStyle>"
        },
        "overflow": {
          "enum": [
            "hidden",
            "scroll",
            "scroll-x",
            "scroll-y"
          ],
          "type": "string"
        },
        "pickMode": {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        },
        "pickable": {
          "type": "boolean"
        },
        "postMatrix": {
          "$ref": "#/definitions/IMatrix"
        },
        "scaleCenter": {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "scaleIn3d": {
          "type": "boolean"
        },
        "scaleX": {
          "type": "number"
        },
        "scaleY": {
          "type": "number"
        },
        "scaleZ": {
          "type": "number"
        },
        "scrollX": {
          "type": "number"
        },
        "scrollY": {
          "type": "number"
        },
        "shadowBlur": {
          "type": "number"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffsetX": {
          "type": "number"
        },
        "shadowOffsetY": {
          "type": "number"
        },
        "shadowRootIdx": {
          "type": "number"
        },
        "stroke": {
          "anyOf": [
            {
              "$ref": "#/definitions/ILinearGradient"
            },
            {
              "$ref": "#/definitions/IRadialGradient"
            },
            {
              "$ref": "#/definitions/IConicalGradient"
            },
            {
              "items": {
                "$ref": "#/definitions/IStrokeType"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "boolean"
              ]
            }
          ]
        },
        "strokeBoundsBuffer": {
          "type": "number"
        },
        "strokeOpacity": {
          "type": "number"
        },
        "strokeSeg": {
          "typeof": "function"
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ]
        },
        "textAlign": {
          "$ref": "#/definitions/TextAlignType"
        },
        "textBaseline": {
          "$ref": "#/definitions/TextBaselineType"
        },
        "texture": {
          "type": "string"
        },
        "textureColor": {
          "type": "string"
        },
        "texturePadding": {
          "type": "number"
        },
        "textureSize": {
          "type": "number"
        },
        "underline": {
          "type": "number"
        },
        "verticalMode": {
          "type": "number"
        },
        "visible": {
          "type": "boolean"
        },
        "whiteSpace": {
          "enum": [
            "no-wrap",
            "normal"
          ],
          "type": "string"
        },
        "wordBreak": {
          "enum": [
            "break-all",
            "break-word"
          ],
          "type": "string"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        }
      },
      "required": [
        "_debug_bounds",
        "alpha",
        "anchor",
        "anchor3d",
        "angle",
        "background",
        "backgroundMode",
        "beta",
        "blur",
        "boundsMode",
        "boundsPadding",
        "childrenPickable",
        "cursor",
        "customPickShape",
        "direction",
        "dx",
        "dy",
        "dz",
        "ellipsis",
        "fill",
        "fillOpacity",
        "fontFamily",
        "fontSize",
        "fontStyle",
        "fontVariant",
        "fontWeight",
        "globalCompositeOperation",
        "globalZIndex",
        "heightLimit",
        "html",
        "ignoreBuf",
        "innerBorder",
        "keepDirIn3d",
        "layout",
        "lineCap",
        "lineClamp",
        "lineDash",
        "lineDashOffset",
        "lineHeight",
        "lineJoin",
        "lineThrough",
        "lineWidth",
        "maxLineWidth",
        "miterLimit",
        "opacity",
        "outerBorder",
        "overflow",
        "pickMode",
        "pickable",
        "postMatrix",
        "scaleCenter",
        "scaleIn3d",
        "scaleX",
        "scaleY",
        "scaleZ",
        "scrollX",
        "scrollY",
        "shadowBlur",
        "shadowColor",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowRootIdx",
        "stroke",
        "strokeBoundsBuffer",
        "strokeOpacity",
        "strokeSeg",
        "text",
        "textAlign",
        "textBaseline",
        "texture",
        "textureColor",
        "texturePadding",
        "textureSize",
        "underline",
        "verticalMode",
        "visible",
        "whiteSpace",
        "wordBreak",
        "x",
        "y",
        "z",
        "zIndex"
      ],
      "type": "object"
    },
    "RichTextGlobalAlignType": {
      "enum": [
        "center",
        "left",
        "right"
      ],
      "type": "string"
    },
    "RichTextGlobalBaselineType": {
      "enum": [
        "bottom",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "RichTextLayoutDirectionType": {
      "enum": [
        "horizontal",
        "vertical"
      ],
      "type": "string"
    },
    "RichTextVerticalDirection": {
      "enum": [
        "bottom",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "RichTextWordBreak": {
      "enum": [
        "break-all",
        "break-word"
      ],
      "type": "string"
    },
    "SVGAnimatedLength": {
      "properties": {
        "animVal": {
          "$ref": "#/definitions/SVGLength"
        },
        "baseVal": {
          "$ref": "#/definitions/SVGLength"
        }
      },
      "required": [
        "animVal",
        "baseVal"
      ],
      "type": "object"
    },
    "SVGAnimatedPreserveAspectRatio": {
      "properties": {
        "animVal": {
          "$ref": "#/definitions/SVGPreserveAspectRatio"
        },
        "baseVal": {
          "$ref": "#/definitions/SVGPreserveAspectRatio"
        }
      },
      "required": [
        "animVal",
        "baseVal"
      ],
      "type": "object"
    },
    "SVGAnimatedRect": {
      "properties": {
        "animVal": {
          "$ref": "#/definitions/DOMRectReadOnly"
        },
        "baseVal": {
          "$ref": "#/definitions/DOMRect"
        }
      },
      "required": [
        "animVal",
        "baseVal"
      ],
      "type": "object"
    },
    "SVGAnimatedString": {
      "properties": {
        "animVal": {
          "type": "string"
        },
        "baseVal": {
          "type": "string"
        }
      },
      "required": [
        "animVal",
        "baseVal"
      ],
      "type": "object"
    },
    "SVGAnimatedTransformList": {
      "properties": {
        "animVal": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/SVGTransform"
            }
          },
          "type": "object"
        },
        "baseVal": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/SVGTransform"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "animVal",
        "baseVal"
      ],
      "type": "object"
    },
    "SVGElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {},
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "id": {
          "type": "string"
        },
        "innerHTML": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "ownerSVGElement": {
          "$ref": "#/definitions/SVGSVGElement"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "viewportElement": {
          "$ref": "#/definitions/SVGElement"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "dataset",
        "firstChild",
        "firstElementChild",
        "id",
        "innerHTML",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "ownerDocument",
        "ownerSVGElement",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "viewportElement"
      ],
      "type": "object"
    },
    "SVGLength": {
      "properties": {
        "SVG_LENGTHTYPE_CM": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_EMS": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_EXS": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_IN": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_MM": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_NUMBER": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_PC": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_PERCENTAGE": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_PT": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_PX": {
          "type": "number"
        },
        "SVG_LENGTHTYPE_UNKNOWN": {
          "type": "number"
        },
        "unitType": {
          "type": "number"
        },
        "value": {
          "type": "number"
        },
        "valueAsString": {
          "type": "string"
        },
        "valueInSpecifiedUnits": {
          "type": "number"
        }
      },
      "required": [
        "SVG_LENGTHTYPE_CM",
        "SVG_LENGTHTYPE_EMS",
        "SVG_LENGTHTYPE_EXS",
        "SVG_LENGTHTYPE_IN",
        "SVG_LENGTHTYPE_MM",
        "SVG_LENGTHTYPE_NUMBER",
        "SVG_LENGTHTYPE_PC",
        "SVG_LENGTHTYPE_PERCENTAGE",
        "SVG_LENGTHTYPE_PT",
        "SVG_LENGTHTYPE_PX",
        "SVG_LENGTHTYPE_UNKNOWN",
        "unitType",
        "value",
        "valueAsString",
        "valueInSpecifiedUnits"
      ],
      "type": "object"
    },
    "SVGPreserveAspectRatio": {
      "properties": {
        "SVG_MEETORSLICE_MEET": {
          "type": "number"
        },
        "SVG_MEETORSLICE_SLICE": {
          "type": "number"
        },
        "SVG_MEETORSLICE_UNKNOWN": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_NONE": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMID": {
          "type": "number"
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
          "type": "number"
        },
        "align": {
          "type": "number"
        },
        "meetOrSlice": {
          "type": "number"
        }
      },
      "required": [
        "SVG_MEETORSLICE_MEET",
        "SVG_MEETORSLICE_SLICE",
        "SVG_MEETORSLICE_UNKNOWN",
        "SVG_PRESERVEASPECTRATIO_NONE",
        "SVG_PRESERVEASPECTRATIO_UNKNOWN",
        "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
        "SVG_PRESERVEASPECTRATIO_XMAXYMID",
        "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
        "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
        "SVG_PRESERVEASPECTRATIO_XMIDYMID",
        "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
        "SVG_PRESERVEASPECTRATIO_XMINYMAX",
        "SVG_PRESERVEASPECTRATIO_XMINYMID",
        "SVG_PRESERVEASPECTRATIO_XMINYMIN",
        "align",
        "meetOrSlice"
      ],
      "type": "object"
    },
    "SVGSVGElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {},
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "currentScale": {
          "type": "number"
        },
        "currentTranslate": {
          "$ref": "#/definitions/DOMPointReadOnly"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "height": {
          "$ref": "#/definitions/SVGAnimatedLength"
        },
        "id": {
          "type": "string"
        },
        "innerHTML": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "onabort": {
          "typeof": "function"
        },
        "onafterprint": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onbeforeprint": {
          "typeof": "function"
        },
        "onbeforeunload": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongamepadconnected": {
          "typeof": "function"
        },
        "ongamepaddisconnected": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "onhashchange": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onlanguagechange": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmessage": {
          "typeof": "function"
        },
        "onmessageerror": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onoffline": {
          "typeof": "function"
        },
        "ononline": {
          "typeof": "function"
        },
        "onpagehide": {
          "typeof": "function"
        },
        "onpageshow": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onpopstate": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onrejectionhandled": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onstorage": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onunhandledrejection": {
          "typeof": "function"
        },
        "onunload": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "ownerSVGElement": {
          "$ref": "#/definitions/SVGSVGElement"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "preserveAspectRatio": {
          "$ref": "#/definitions/SVGAnimatedPreserveAspectRatio"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "requiredExtensions": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "systemLanguage": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "transform": {
          "$ref": "#/definitions/SVGAnimatedTransformList"
        },
        "viewBox": {
          "$ref": "#/definitions/SVGAnimatedRect"
        },
        "viewportElement": {
          "$ref": "#/definitions/SVGElement"
        },
        "width": {
          "$ref": "#/definitions/SVGAnimatedLength"
        },
        "x": {
          "$ref": "#/definitions/SVGAnimatedLength"
        },
        "y": {
          "$ref": "#/definitions/SVGAnimatedLength"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "currentScale",
        "currentTranslate",
        "dataset",
        "firstChild",
        "firstElementChild",
        "height",
        "id",
        "innerHTML",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onabort",
        "onafterprint",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onbeforeprint",
        "onbeforeunload",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongamepadconnected",
        "ongamepaddisconnected",
        "ongotpointercapture",
        "onhashchange",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onlanguagechange",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmessage",
        "onmessageerror",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onoffline",
        "ononline",
        "onpagehide",
        "onpageshow",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onpopstate",
        "onprogress",
        "onratechange",
        "onrejectionhandled",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onstorage",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onunhandledrejection",
        "onunload",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "ownerDocument",
        "ownerSVGElement",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "preserveAspectRatio",
        "previousElementSibling",
        "previousSibling",
        "requiredExtensions",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "style",
        "systemLanguage",
        "tabIndex",
        "tagName",
        "textContent",
        "transform",
        "viewBox",
        "viewportElement",
        "width",
        "x",
        "y"
      ],
      "type": "object"
    },
    "SVGScriptElement": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "ariaAtomic": {
          "type": "string"
        },
        "ariaAutoComplete": {
          "type": "string"
        },
        "ariaBusy": {
          "type": "string"
        },
        "ariaChecked": {
          "type": "string"
        },
        "ariaColCount": {
          "type": "string"
        },
        "ariaColIndex": {
          "type": "string"
        },
        "ariaColIndexText": {
          "type": "string"
        },
        "ariaColSpan": {
          "type": "string"
        },
        "ariaCurrent": {
          "type": "string"
        },
        "ariaDisabled": {
          "type": "string"
        },
        "ariaExpanded": {
          "type": "string"
        },
        "ariaHasPopup": {
          "type": "string"
        },
        "ariaHidden": {
          "type": "string"
        },
        "ariaInvalid": {
          "type": "string"
        },
        "ariaKeyShortcuts": {
          "type": "string"
        },
        "ariaLabel": {
          "type": "string"
        },
        "ariaLevel": {
          "type": "string"
        },
        "ariaLive": {
          "type": "string"
        },
        "ariaModal": {
          "type": "string"
        },
        "ariaMultiLine": {
          "type": "string"
        },
        "ariaMultiSelectable": {
          "type": "string"
        },
        "ariaOrientation": {
          "type": "string"
        },
        "ariaPlaceholder": {
          "type": "string"
        },
        "ariaPosInSet": {
          "type": "string"
        },
        "ariaPressed": {
          "type": "string"
        },
        "ariaReadOnly": {
          "type": "string"
        },
        "ariaRequired": {
          "type": "string"
        },
        "ariaRoleDescription": {
          "type": "string"
        },
        "ariaRowCount": {
          "type": "string"
        },
        "ariaRowIndex": {
          "type": "string"
        },
        "ariaRowIndexText": {
          "type": "string"
        },
        "ariaRowSpan": {
          "type": "string"
        },
        "ariaSelected": {
          "type": "string"
        },
        "ariaSetSize": {
          "type": "string"
        },
        "ariaSort": {
          "type": "string"
        },
        "ariaValueMax": {
          "type": "string"
        },
        "ariaValueMin": {
          "type": "string"
        },
        "ariaValueNow": {
          "type": "string"
        },
        "ariaValueText": {
          "type": "string"
        },
        "assignedSlot": {
          "$ref": "#/definitions/HTMLSlotElement"
        },
        "attributes": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Attr"
            }
          },
          "type": "object"
        },
        "autofocus": {
          "type": "boolean"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "classList": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "className": {},
        "clientHeight": {
          "type": "number"
        },
        "clientLeft": {
          "type": "number"
        },
        "clientTop": {
          "type": "number"
        },
        "clientWidth": {
          "type": "number"
        },
        "dataset": {
          "$ref": "#/definitions/DOMStringMap"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "href": {
          "$ref": "#/definitions/SVGAnimatedString"
        },
        "id": {
          "type": "string"
        },
        "innerHTML": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "localName": {
          "type": "string"
        },
        "namespaceURI": {
          "type": "string"
        },
        "nextElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "onabort": {
          "typeof": "function"
        },
        "onanimationcancel": {
          "typeof": "function"
        },
        "onanimationend": {
          "typeof": "function"
        },
        "onanimationiteration": {
          "typeof": "function"
        },
        "onanimationstart": {
          "typeof": "function"
        },
        "onauxclick": {
          "typeof": "function"
        },
        "onbeforeinput": {
          "typeof": "function"
        },
        "onblur": {
          "typeof": "function"
        },
        "oncancel": {
          "typeof": "function"
        },
        "oncanplay": {
          "typeof": "function"
        },
        "oncanplaythrough": {
          "typeof": "function"
        },
        "onchange": {
          "typeof": "function"
        },
        "onclick": {
          "typeof": "function"
        },
        "onclose": {
          "typeof": "function"
        },
        "oncontextmenu": {
          "typeof": "function"
        },
        "oncopy": {
          "typeof": "function"
        },
        "oncuechange": {
          "typeof": "function"
        },
        "oncut": {
          "typeof": "function"
        },
        "ondblclick": {
          "typeof": "function"
        },
        "ondrag": {
          "typeof": "function"
        },
        "ondragend": {
          "typeof": "function"
        },
        "ondragenter": {
          "typeof": "function"
        },
        "ondragleave": {
          "typeof": "function"
        },
        "ondragover": {
          "typeof": "function"
        },
        "ondragstart": {
          "typeof": "function"
        },
        "ondrop": {
          "typeof": "function"
        },
        "ondurationchange": {
          "typeof": "function"
        },
        "onemptied": {
          "typeof": "function"
        },
        "onended": {
          "typeof": "function"
        },
        "onerror": {
          "$ref": "#/definitions/OnErrorEventHandlerNonNull"
        },
        "onfocus": {
          "typeof": "function"
        },
        "onformdata": {
          "typeof": "function"
        },
        "onfullscreenchange": {
          "typeof": "function"
        },
        "onfullscreenerror": {
          "typeof": "function"
        },
        "ongotpointercapture": {
          "typeof": "function"
        },
        "oninput": {
          "typeof": "function"
        },
        "oninvalid": {
          "typeof": "function"
        },
        "onkeydown": {
          "typeof": "function"
        },
        "onkeypress": {
          "typeof": "function"
        },
        "onkeyup": {
          "typeof": "function"
        },
        "onload": {
          "typeof": "function"
        },
        "onloadeddata": {
          "typeof": "function"
        },
        "onloadedmetadata": {
          "typeof": "function"
        },
        "onloadstart": {
          "typeof": "function"
        },
        "onlostpointercapture": {
          "typeof": "function"
        },
        "onmousedown": {
          "typeof": "function"
        },
        "onmouseenter": {
          "typeof": "function"
        },
        "onmouseleave": {
          "typeof": "function"
        },
        "onmousemove": {
          "typeof": "function"
        },
        "onmouseout": {
          "typeof": "function"
        },
        "onmouseover": {
          "typeof": "function"
        },
        "onmouseup": {
          "typeof": "function"
        },
        "onpaste": {
          "typeof": "function"
        },
        "onpause": {
          "typeof": "function"
        },
        "onplay": {
          "typeof": "function"
        },
        "onplaying": {
          "typeof": "function"
        },
        "onpointercancel": {
          "typeof": "function"
        },
        "onpointerdown": {
          "typeof": "function"
        },
        "onpointerenter": {
          "typeof": "function"
        },
        "onpointerleave": {
          "typeof": "function"
        },
        "onpointermove": {
          "typeof": "function"
        },
        "onpointerout": {
          "typeof": "function"
        },
        "onpointerover": {
          "typeof": "function"
        },
        "onpointerup": {
          "typeof": "function"
        },
        "onprogress": {
          "typeof": "function"
        },
        "onratechange": {
          "typeof": "function"
        },
        "onreset": {
          "typeof": "function"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "onsecuritypolicyviolation": {
          "typeof": "function"
        },
        "onseeked": {
          "typeof": "function"
        },
        "onseeking": {
          "typeof": "function"
        },
        "onselect": {
          "typeof": "function"
        },
        "onselectionchange": {
          "typeof": "function"
        },
        "onselectstart": {
          "typeof": "function"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "onstalled": {
          "typeof": "function"
        },
        "onsubmit": {
          "typeof": "function"
        },
        "onsuspend": {
          "typeof": "function"
        },
        "ontimeupdate": {
          "typeof": "function"
        },
        "ontoggle": {
          "typeof": "function"
        },
        "ontouchcancel": {
          "typeof": "function"
        },
        "ontouchend": {
          "typeof": "function"
        },
        "ontouchmove": {
          "typeof": "function"
        },
        "ontouchstart": {
          "typeof": "function"
        },
        "ontransitioncancel": {
          "typeof": "function"
        },
        "ontransitionend": {
          "typeof": "function"
        },
        "ontransitionrun": {
          "typeof": "function"
        },
        "ontransitionstart": {
          "typeof": "function"
        },
        "onvolumechange": {
          "typeof": "function"
        },
        "onwaiting": {
          "typeof": "function"
        },
        "onwebkitanimationend": {
          "typeof": "function"
        },
        "onwebkitanimationiteration": {
          "typeof": "function"
        },
        "onwebkitanimationstart": {
          "typeof": "function"
        },
        "onwebkittransitionend": {
          "typeof": "function"
        },
        "onwheel": {
          "typeof": "function"
        },
        "outerHTML": {
          "type": "string"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "ownerSVGElement": {
          "$ref": "#/definitions/SVGSVGElement"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "part": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "previousElementSibling": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "role": {
          "type": "string"
        },
        "scrollHeight": {
          "type": "number"
        },
        "scrollLeft": {
          "type": "number"
        },
        "scrollTop": {
          "type": "number"
        },
        "scrollWidth": {
          "type": "number"
        },
        "shadowRoot": {
          "$ref": "#/definitions/ShadowRoot"
        },
        "slot": {
          "type": "string"
        },
        "style": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tabIndex": {
          "type": "number"
        },
        "tagName": {
          "type": "string"
        },
        "textContent": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "viewportElement": {
          "$ref": "#/definitions/SVGElement"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "ariaAtomic",
        "ariaAutoComplete",
        "ariaBusy",
        "ariaChecked",
        "ariaColCount",
        "ariaColIndex",
        "ariaColIndexText",
        "ariaColSpan",
        "ariaCurrent",
        "ariaDisabled",
        "ariaExpanded",
        "ariaHasPopup",
        "ariaHidden",
        "ariaInvalid",
        "ariaKeyShortcuts",
        "ariaLabel",
        "ariaLevel",
        "ariaLive",
        "ariaModal",
        "ariaMultiLine",
        "ariaMultiSelectable",
        "ariaOrientation",
        "ariaPlaceholder",
        "ariaPosInSet",
        "ariaPressed",
        "ariaReadOnly",
        "ariaRequired",
        "ariaRoleDescription",
        "ariaRowCount",
        "ariaRowIndex",
        "ariaRowIndexText",
        "ariaRowSpan",
        "ariaSelected",
        "ariaSetSize",
        "ariaSort",
        "ariaValueMax",
        "ariaValueMin",
        "ariaValueNow",
        "ariaValueText",
        "assignedSlot",
        "attributes",
        "autofocus",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "classList",
        "className",
        "clientHeight",
        "clientLeft",
        "clientTop",
        "clientWidth",
        "dataset",
        "firstChild",
        "firstElementChild",
        "href",
        "id",
        "innerHTML",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "localName",
        "namespaceURI",
        "nextElementSibling",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onabort",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncopy",
        "oncuechange",
        "oncut",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "onfullscreenchange",
        "onfullscreenerror",
        "ongotpointercapture",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onpaste",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "outerHTML",
        "ownerDocument",
        "ownerSVGElement",
        "parentElement",
        "parentNode",
        "part",
        "prefix",
        "previousElementSibling",
        "previousSibling",
        "role",
        "scrollHeight",
        "scrollLeft",
        "scrollTop",
        "scrollWidth",
        "shadowRoot",
        "slot",
        "style",
        "tabIndex",
        "tagName",
        "textContent",
        "type",
        "viewportElement"
      ],
      "type": "object"
    },
    "SVGTransform": {
      "properties": {
        "SVG_TRANSFORM_MATRIX": {
          "type": "number"
        },
        "SVG_TRANSFORM_ROTATE": {
          "type": "number"
        },
        "SVG_TRANSFORM_SCALE": {
          "type": "number"
        },
        "SVG_TRANSFORM_SKEWX": {
          "type": "number"
        },
        "SVG_TRANSFORM_SKEWY": {
          "type": "number"
        },
        "SVG_TRANSFORM_TRANSLATE": {
          "type": "number"
        },
        "SVG_TRANSFORM_UNKNOWN": {
          "type": "number"
        },
        "angle": {
          "type": "number"
        },
        "matrix": {
          "$ref": "#/definitions/DOMMatrix"
        },
        "type": {
          "type": "number"
        }
      },
      "required": [
        "SVG_TRANSFORM_MATRIX",
        "SVG_TRANSFORM_ROTATE",
        "SVG_TRANSFORM_SCALE",
        "SVG_TRANSFORM_SKEWX",
        "SVG_TRANSFORM_SKEWY",
        "SVG_TRANSFORM_TRANSLATE",
        "SVG_TRANSFORM_UNKNOWN",
        "angle",
        "matrix",
        "type"
      ],
      "type": "object"
    },
    "ScaleType": {
      "enum": [
        "band",
        "linear",
        "ordinal",
        "point",
        "threshold"
      ],
      "type": "string"
    },
    "Screen": {
      "properties": {
        "availHeight": {
          "type": "number"
        },
        "availWidth": {
          "type": "number"
        },
        "colorDepth": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "orientation": {
          "$ref": "#/definitions/ScreenOrientation"
        },
        "pixelDepth": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "availHeight",
        "availWidth",
        "colorDepth",
        "height",
        "orientation",
        "pixelDepth",
        "width"
      ],
      "type": "object"
    },
    "ScreenOrientation": {
      "properties": {
        "angle": {
          "type": "number"
        },
        "onchange": {
          "typeof": "function"
        },
        "type": {
          "$ref": "#/definitions/OrientationType"
        }
      },
      "required": [
        "angle",
        "onchange",
        "type"
      ],
      "type": "object"
    },
    "ScrollRestoration": {
      "enum": [
        "auto",
        "manual"
      ],
      "type": "string"
    },
    "ServiceWorker": {
      "properties": {
        "onerror": {
          "typeof": "function"
        },
        "onstatechange": {
          "typeof": "function"
        },
        "scriptURL": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/ServiceWorkerState"
        }
      },
      "required": [
        "onerror",
        "onstatechange",
        "scriptURL",
        "state"
      ],
      "type": "object"
    },
    "ServiceWorkerContainer": {
      "properties": {
        "controller": {
          "$ref": "#/definitions/ServiceWorker"
        },
        "oncontrollerchange": {
          "typeof": "function"
        },
        "onmessage": {
          "typeof": "function"
        },
        "onmessageerror": {
          "typeof": "function"
        },
        "ready": {
          "$ref": "#/definitions/Promise<ServiceWorkerRegistration>"
        }
      },
      "required": [
        "controller",
        "oncontrollerchange",
        "onmessage",
        "onmessageerror",
        "ready"
      ],
      "type": "object"
    },
    "ServiceWorkerState": {
      "enum": [
        "activated",
        "activating",
        "installed",
        "installing",
        "parsed",
        "redundant"
      ],
      "type": "string"
    },
    "ShadowRoot": {
      "properties": {
        "ATTRIBUTE_NODE": {
          "type": "number"
        },
        "CDATA_SECTION_NODE": {
          "type": "number"
        },
        "COMMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_NODE": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "type": "number"
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "type": "number"
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "type": "number"
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "type": "number"
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "type": "number"
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "type": "number"
        },
        "DOCUMENT_TYPE_NODE": {
          "type": "number"
        },
        "ELEMENT_NODE": {
          "type": "number"
        },
        "ENTITY_NODE": {
          "type": "number"
        },
        "ENTITY_REFERENCE_NODE": {
          "type": "number"
        },
        "NOTATION_NODE": {
          "type": "number"
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "type": "number"
        },
        "TEXT_NODE": {
          "type": "number"
        },
        "activeElement": {
          "$ref": "#/definitions/Element"
        },
        "adoptedStyleSheets": {
          "items": {
            "$ref": "#/definitions/CSSStyleSheet"
          },
          "type": "array"
        },
        "baseURI": {
          "type": "string"
        },
        "childElementCount": {
          "type": "number"
        },
        "childNodes": {
          "items": {
            "$ref": "#/definitions/ChildNode"
          },
          "type": "array"
        },
        "children": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/Element"
            }
          },
          "type": "object"
        },
        "delegatesFocus": {
          "type": "boolean"
        },
        "firstChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "firstElementChild": {
          "$ref": "#/definitions/Element"
        },
        "fullscreenElement": {
          "$ref": "#/definitions/Element"
        },
        "host": {
          "$ref": "#/definitions/Element"
        },
        "innerHTML": {
          "type": "string"
        },
        "isConnected": {
          "type": "boolean"
        },
        "lastChild": {
          "$ref": "#/definitions/ChildNode"
        },
        "lastElementChild": {
          "$ref": "#/definitions/Element"
        },
        "mode": {
          "$ref": "#/definitions/ShadowRootMode"
        },
        "nextSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeType": {
          "type": "number"
        },
        "nodeValue": {
          "type": "string"
        },
        "onslotchange": {
          "typeof": "function"
        },
        "ownerDocument": {
          "$ref": "#/definitions/Document"
        },
        "parentElement": {
          "$ref": "#/definitions/HTMLElement"
        },
        "parentNode": {
          "$ref": "#/definitions/ParentNode"
        },
        "pictureInPictureElement": {
          "$ref": "#/definitions/Element"
        },
        "pointerLockElement": {
          "$ref": "#/definitions/Element"
        },
        "previousSibling": {
          "$ref": "#/definitions/ChildNode"
        },
        "slotAssignment": {
          "$ref": "#/definitions/SlotAssignmentMode"
        },
        "styleSheets": {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "$ref": "#/definitions/CSSStyleSheet"
            }
          },
          "type": "object"
        },
        "textContent": {
          "type": "string"
        }
      },
      "required": [
        "ATTRIBUTE_NODE",
        "CDATA_SECTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_POSITION_CONTAINED_BY",
        "DOCUMENT_POSITION_CONTAINS",
        "DOCUMENT_POSITION_DISCONNECTED",
        "DOCUMENT_POSITION_FOLLOWING",
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "DOCUMENT_POSITION_PRECEDING",
        "DOCUMENT_TYPE_NODE",
        "ELEMENT_NODE",
        "ENTITY_NODE",
        "ENTITY_REFERENCE_NODE",
        "NOTATION_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "TEXT_NODE",
        "activeElement",
        "adoptedStyleSheets",
        "baseURI",
        "childElementCount",
        "childNodes",
        "children",
        "delegatesFocus",
        "firstChild",
        "firstElementChild",
        "fullscreenElement",
        "host",
        "innerHTML",
        "isConnected",
        "lastChild",
        "lastElementChild",
        "mode",
        "nextSibling",
        "nodeName",
        "nodeType",
        "nodeValue",
        "onslotchange",
        "ownerDocument",
        "parentElement",
        "parentNode",
        "pictureInPictureElement",
        "pointerLockElement",
        "previousSibling",
        "slotAssignment",
        "styleSheets",
        "textContent"
      ],
      "type": "object"
    },
    "ShadowRootMode": {
      "enum": [
        "closed",
        "open"
      ],
      "type": "string"
    },
    "SheetParseOptions": {
      "properties": {
        "clone": {
          "default": true,
          "description": "是否需要对数据进行 clone，默认为 true。\n如果考虑性能，你可以将其关闭，但是这会带了一些副作用，即我们会对传入的数据进行修改（不会对原有字段及值修改，只会在原有数据基础上添加一些字段）。",
          "since": "1.3.0",
          "type": "boolean"
        },
        "options": {
          "$ref": "#/definitions/IDsvParserOptions"
        },
        "type": {
          "enum": [
            "csv",
            "dsv",
            "tsv"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "SlotAssignmentMode": {
      "enum": [
        "manual",
        "named"
      ],
      "type": "string"
    },
    "SmartInvertAttrs": {
      "properties": {
        "alternativeColors": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        },
        "brightColor": {
          "type": "string"
        },
        "contrastRatiosThreshold": {
          "type": "number"
        },
        "darkColor": {
          "type": "string"
        },
        "fillStrategy": {
          "enum": [
            "base",
            "invertBase",
            "null",
            "similarBase"
          ],
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "outsideEnable": {
          "type": "boolean"
        },
        "strokeStrategy": {
          "enum": [
            "base",
            "invertBase",
            "null",
            "similarBase"
          ],
          "type": "string"
        },
        "textType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpeechSynthesis": {
      "properties": {
        "onvoiceschanged": {
          "typeof": "function"
        },
        "paused": {
          "type": "boolean"
        },
        "pending": {
          "type": "boolean"
        },
        "speaking": {
          "type": "boolean"
        }
      },
      "required": [
        "onvoiceschanged",
        "paused",
        "pending",
        "speaking"
      ],
      "type": "object"
    },
    "Storage": {
      "additionalProperties": {},
      "properties": {
        "length": {
          "type": "number"
        }
      },
      "required": [
        "length"
      ],
      "type": "object"
    },
    "StorageManager": {
      "type": "object"
    },
    "Strategy": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "StringOrNumber": {
      "type": [
        "string",
        "number"
      ]
    },
    "SubtleCrypto": {
      "type": "object"
    },
    "SunburstLabelConfig": {
      "properties": {
        "align": {
          "enum": [
            "center",
            "end",
            "start"
          ],
          "type": "string"
        },
        "offset": {
          "type": "number"
        },
        "rotate": {
          "enum": [
            "radial",
            "tangential"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TextAlign": {
      "description": "text",
      "enum": [
        "center",
        "end",
        "left",
        "right",
        "start"
      ],
      "type": "string"
    },
    "TextAlignType": {
      "enum": [
        "center",
        "end",
        "left",
        "right",
        "start"
      ],
      "type": "string"
    },
    "TextBaseLine": {
      "enum": [
        "alphabetic",
        "bottom",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "TextBaselineType": {
      "enum": [
        "alphabetic",
        "bottom",
        "middle",
        "top"
      ],
      "type": "string"
    },
    "TooltipActiveType": {
      "enum": [
        "dimension",
        "mark"
      ],
      "type": "string"
    },
    "TooltipContentProperty<ITooltipTextTheme<string>>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ITooltipTextTheme<string>"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "TooltipContentProperty<boolean>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "TooltipContentProperty<number>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "number"
        }
      ]
    },
    "TooltipContentProperty<string>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "string"
        }
      ]
    },
    "TooltipContentProperty<string|TooltipRichTextAttrs>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "type": "string"
        }
      ]
    },
    "TooltipPatternProperty<IToolTipLinePattern>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IToolTipLinePattern"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "TooltipPatternProperty<MaybeArray<IToolTipLinePattern>>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IToolTipLinePattern"
        },
        {
          "items": {
            "$ref": "#/definitions/IToolTipLinePattern"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        }
      ]
    },
    "TooltipPatternProperty<TooltipPosition>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ITooltipPositionPattern"
        },
        {
          "typeof": "function"
        },
        {
          "enum": [
            "bl",
            "bottom",
            "br",
            "inside",
            "lb",
            "left",
            "lt",
            "rb",
            "right",
            "rt",
            "tl",
            "top",
            "tr"
          ],
          "type": "string"
        }
      ]
    },
    "TooltipPatternProperty<TooltipPositionMode>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "enum": [
            "mark",
            "pointer"
          ],
          "type": "string"
        }
      ]
    },
    "TooltipPatternProperty<boolean>": {
      "anyOf": [
        {
          "typeof": "function"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "VisualType<\"accurate\"|\"imprecise\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"accurate\"|\"imprecise\">"
        },
        {
          "enum": [
            "accurate",
            "imprecise"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"center\"|\"end\"|\"start\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"center\"|\"end\"|\"start\">"
        },
        {
          "enum": [
            "center",
            "end",
            "start"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"custom\"|\"accurate\"|\"imprecise\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"custom\"|\"accurate\"|\"imprecise\">"
        },
        {
          "enum": [
            "accurate",
            "custom",
            "imprecise"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"horizontal\"|\"vertical\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"horizontal\"|\"vertical\">"
        },
        {
          "enum": [
            "horizontal",
            "vertical"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"line\"|\"polyline\"|\"smooth\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"line\"|\"polyline\"|\"smooth\">"
        },
        {
          "enum": [
            "line",
            "polyline",
            "smooth"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"radial\"|\"horizontal\"|\"vertical\"|\"LR\"|\"RL\"|\"TB\"|\"BL\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"radial\"|\"horizontal\"|\"vertical\"|\"LR\"|\"RL\"|\"TB\"|\"BL\">"
        },
        {
          "enum": [
            "BL",
            "LR",
            "RL",
            "TB",
            "horizontal",
            "radial",
            "vertical"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<\"text\"|\"html\"|\"rich\">": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,\"text\"|\"html\"|\"rich\">"
        },
        {
          "enum": [
            "html",
            "rich",
            "text"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<(datum:Datum)=>number>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,(datum:Datum)=>number>"
        }
      ]
    },
    "VisualType<(datum:Datum)=>number>_1": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,(datum:Datum)=>number>_1"
        }
      ]
    },
    "VisualType<(datum:Datum)=>number>_2": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,(datum:Datum)=>number>_2"
        }
      ]
    },
    "VisualType<(datum:Datum)=>number>_3": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,(datum:Datum)=>number>_3"
        }
      ]
    },
    "VisualType<(datum:Datum)=>number>_4": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,(datum:Datum)=>number>_4"
        }
      ]
    },
    "VisualType<BoxPlotShaftShape>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,BoxPlotShaftShape>"
        },
        {
          "enum": [
            "bar",
            "line"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<Cursor>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,Cursor>"
        },
        {
          "enum": [
            "alias",
            "all-scroll",
            "auto",
            "cell",
            "col-resize",
            "context-menu",
            "copy",
            "crosshair",
            "default",
            "e-resize",
            "ew-resize",
            "grab",
            "grabbing",
            "help",
            "move",
            "n-resize",
            "ne-resize",
            "nesw-resize",
            "no-drop",
            "none",
            "not-allowed",
            "ns-resize",
            "nw-resize",
            "nwse-resize",
            "pointer",
            "progress",
            "row-resize",
            "s-resize",
            "se-resize",
            "sw-resize",
            "text",
            "vertical-text",
            "w-resize",
            "wait",
            "zoom-in",
            "zoom-out"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<FontWeight>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,FontWeight>"
        },
        {
          "enum": [
            100,
            200,
            300,
            400,
            500,
            600,
            700,
            800,
            900,
            "bold",
            "bolder",
            "lighter",
            "normal"
          ]
        }
      ]
    },
    "VisualType<Function|string[]|StringOrNumber|IRichTextCharacter[]>": {
      "anyOf": [
        {
          "$ref": "#/definitions/Function"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "items": {
            "$ref": "#/definitions/IRichTextCharacter"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,Function|string[]|StringOrNumber|IRichTextCharacter[]>"
        },
        {
          "type": [
            "string",
            "number"
          ]
        }
      ]
    },
    "VisualType<IBorder>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "$ref": "#/definitions/IBorder"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,IBorder>"
        }
      ],
      "description": "border"
    },
    "VisualType<IPoint[]>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "items": {
            "$ref": "#/definitions/IPoint_1"
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,IPoint[]>"
        }
      ]
    },
    "VisualType<IRepeatType>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,IRepeatType>"
        },
        {
          "enum": [
            "no-repeat",
            "repeat"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<InterpolateType>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,InterpolateType>"
        },
        {
          "enum": [
            "basis",
            "bundle",
            "cardinal",
            "cardinalClosed",
            "catmullRom",
            "linear",
            "linearClosed",
            "monotone",
            "monotoneX",
            "monotoneY",
            "natural",
            "step",
            "stepAfter",
            "stepBefore"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<LineStrokeCap>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,LineStrokeCap>"
        },
        {
          "enum": [
            "butt",
            "round",
            "square"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<LineStrokeJoin>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,LineStrokeJoin>"
        },
        {
          "enum": [
            "arcs",
            "bevel",
            "miter",
            "miter-clip",
            "round"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<PopTipAttributes>": {
      "anyOf": [
        {
          "$ref": "#/definitions/PopTipAttributes"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,PopTipAttributes>"
        }
      ]
    },
    "VisualType<TextAlignType>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,TextAlignType>"
        },
        {
          "enum": [
            "center",
            "end",
            "left",
            "right",
            "start"
          ],
          "type": "string"
        }
      ],
      "description": "text"
    },
    "VisualType<TextBaselineType>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,TextBaselineType>"
        },
        {
          "enum": [
            "alphabetic",
            "bottom",
            "middle",
            "top"
          ],
          "type": "string"
        }
      ]
    },
    "VisualType<[number,number]>": {
      "anyOf": [
        {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,[number,number]>"
        }
      ]
    },
    "VisualType<[string|number,string|number]>": {
      "anyOf": [
        {
          "items": [
            {
              "type": [
                "string",
                "number"
              ]
            },
            {
              "type": [
                "string",
                "number"
              ]
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,[string|number,string|number]>"
        }
      ]
    },
    "VisualType<boolean>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,boolean>"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "VisualType<boolean|[boolean,boolean]>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "items": [
            {
              "type": "boolean"
            },
            {
              "type": "boolean"
            }
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,boolean|[boolean,boolean]>"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "VisualType<false|IColorKey|IGradient|VisualType<string>>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IColorKey"
        },
        {
          "$ref": "#/definitions/IGradientLinear"
        },
        {
          "$ref": "#/definitions/IGradientRadial"
        },
        {
          "$ref": "#/definitions/IGradientConical"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,false|IColorKey|IGradient|VisualType<string>>"
        },
        {
          "const": false,
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "VisualType<number>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,number>"
        },
        {
          "type": "number"
        }
      ]
    },
    "VisualType<number[]>": {
      "anyOf": [
        {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,number[]>"
        }
      ]
    },
    "VisualType<number|number[]>": {
      "anyOf": [
        {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,number|number[]>"
        },
        {
          "type": "number"
        }
      ]
    },
    "VisualType<string>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,string>"
        },
        {
          "type": "string"
        }
      ]
    },
    "VisualType<string|HTMLCanvasElement|HTMLImageElement>": {
      "anyOf": [
        {
          "$ref": "#/definitions/HTMLCanvasElement"
        },
        {
          "$ref": "#/definitions/HTMLImageElement"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,string|HTMLCanvasElement|HTMLImageElement>"
        },
        {
          "type": "string"
        }
      ]
    },
    "VisualType<string|false|IColorKey|IGradient|(number|boolean)[]>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IColorKey"
        },
        {
          "$ref": "#/definitions/IGradientLinear"
        },
        {
          "$ref": "#/definitions/IGradientRadial"
        },
        {
          "$ref": "#/definitions/IGradientConical"
        },
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "items": {
            "type": [
              "number",
              "boolean"
            ]
          },
          "type": "array"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,string|false|IColorKey|IGradient|(number|boolean)[]>"
        },
        {
          "const": false,
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "VisualType<string|number>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IVisualScale"
        },
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/IVisualSpecStyle<unknown,string|number>"
        },
        {
          "type": [
            "string",
            "number"
          ]
        }
      ]
    },
    "VisualViewport": {
      "properties": {
        "height": {
          "type": "number"
        },
        "offsetLeft": {
          "type": "number"
        },
        "offsetTop": {
          "type": "number"
        },
        "onresize": {
          "typeof": "function"
        },
        "onscroll": {
          "typeof": "function"
        },
        "pageLeft": {
          "type": "number"
        },
        "pageTop": {
          "type": "number"
        },
        "scale": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "height",
        "offsetLeft",
        "offsetTop",
        "onresize",
        "onscroll",
        "pageLeft",
        "pageTop",
        "scale",
        "width"
      ],
      "type": "object"
    },
    "Window": {
      "items": {
        "$ref": "#/definitions/Window"
      },
      "required": [
        "caches",
        "clientInformation",
        "closed",
        "crossOriginIsolated",
        "crypto",
        "customElements",
        "devicePixelRatio",
        "document",
        "event",
        "external",
        "frameElement",
        "frames",
        "history",
        "indexedDB",
        "innerHeight",
        "innerWidth",
        "isSecureContext",
        "length",
        "localStorage",
        "location",
        "locationbar",
        "menubar",
        "name",
        "navigator",
        "onabort",
        "onafterprint",
        "onanimationcancel",
        "onanimationend",
        "onanimationiteration",
        "onanimationstart",
        "onauxclick",
        "onbeforeinput",
        "onbeforeprint",
        "onbeforeunload",
        "onblur",
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncontextmenu",
        "oncuechange",
        "ondblclick",
        "ondevicemotion",
        "ondeviceorientation",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "onformdata",
        "ongamepadconnected",
        "ongamepaddisconnected",
        "ongotpointercapture",
        "onhashchange",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onlanguagechange",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onlostpointercapture",
        "onmessage",
        "onmessageerror",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onoffline",
        "ononline",
        "onorientationchange",
        "onpagehide",
        "onpageshow",
        "onpause",
        "onplay",
        "onplaying",
        "onpointercancel",
        "onpointerdown",
        "onpointerenter",
        "onpointerleave",
        "onpointermove",
        "onpointerout",
        "onpointerover",
        "onpointerup",
        "onpopstate",
        "onprogress",
        "onratechange",
        "onrejectionhandled",
        "onreset",
        "onresize",
        "onscroll",
        "onsecuritypolicyviolation",
        "onseeked",
        "onseeking",
        "onselect",
        "onselectionchange",
        "onselectstart",
        "onslotchange",
        "onstalled",
        "onstorage",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "ontransitioncancel",
        "ontransitionend",
        "ontransitionrun",
        "ontransitionstart",
        "onunhandledrejection",
        "onunload",
        "onvolumechange",
        "onwaiting",
        "onwebkitanimationend",
        "onwebkitanimationiteration",
        "onwebkitanimationstart",
        "onwebkittransitionend",
        "onwheel",
        "opener",
        "orientation",
        "origin",
        "outerHeight",
        "outerWidth",
        "pageXOffset",
        "pageYOffset",
        "parent",
        "performance",
        "personalbar",
        "screen",
        "screenLeft",
        "screenTop",
        "screenX",
        "screenY",
        "scrollX",
        "scrollY",
        "scrollbars",
        "self",
        "sessionStorage",
        "speechSynthesis",
        "status",
        "statusbar",
        "toolbar",
        "top",
        "visualViewport",
        "window"
      ],
      "type": "array"
    },
    "mat4": {
      "anyOf": [
        {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 16,
          "minItems": 16,
          "type": "array"
        }
      ]
    },
    "selectedItemStyle": {
      "allOf": [
        {
          "typeof": "function"
        },
        {
          "$ref": "#/definitions/Partial<IPolygonMarkSpec>"
        }
      ]
    },
    "vec3": {
      "anyOf": [
        {
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        }
      ]
    }
  }
}

